// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Creates and manages Scaleway Messaging and Queuing queues.
 *
 * For more information about MNQ, see [the documentation](https://www.scaleway.com/en/developers/api/messaging-and-queuing/).
 *
 * ## Examples
 *
 * ### NATS
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@ediri/scaleway";
 *
 * const mainMnqNamespace = new scaleway.MnqNamespace("mainMnqNamespace", {protocol: "nats"});
 * const mainMnqCredential = new scaleway.MnqCredential("mainMnqCredential", {namespaceId: mainMnqNamespace.id});
 * const myQueue = new scaleway.MnqQueue("myQueue", {
 *     namespaceId: mainMnqNamespace.id,
 *     nats: {
 *         credentials: mainMnqCredential.natsCredentials.apply(natsCredentials => natsCredentials.content),
 *     },
 * });
 * ```
 *
 * ### SQS
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@ediri/scaleway";
 *
 * const mainMnqNamespace = new scaleway.MnqNamespace("mainMnqNamespace", {protocol: "sqs_sns"});
 * const mainMnqCredential = new scaleway.MnqCredential("mainMnqCredential", {
 *     namespaceId: mainMnqNamespace.id,
 *     sqsSnsCredentials: {
 *         permissions: {
 *             canPublish: true,
 *             canReceive: true,
 *             canManage: true,
 *         },
 *     },
 * });
 * const myQueue = new scaleway.MnqQueue("myQueue", {
 *     namespaceId: mainMnqNamespace.id,
 *     sqs: {
 *         accessKey: mainMnqCredential.sqsSnsCredentials.apply(sqsSnsCredentials => sqsSnsCredentials?.accessKey),
 *         secretKey: mainMnqCredential.sqsSnsCredentials.apply(sqsSnsCredentials => sqsSnsCredentials?.secretKey),
 *     },
 * });
 * ```
 *
 * ### Argument Reference
 *
 * The following arguments are supported:
 *
 * * `namespaceId` - (Required) The ID of the Namespace associated to.
 *
 * * `name` - (Optional) The name of the queue. Either `name` or `namePrefix` is required. Conflicts with `namePrefix`.
 *
 * * `namePrefix` - (Optional) Creates a unique name beginning with the specified prefix. Conflicts with `name`.
 *
 * * `messageMaxAge` - (Optional) The number of seconds the queue retains a message. Must be between 60 and 1_209_600. Defaults to 345_600.
 *
 * * `messageMaxSize` - (Optional) The maximum size of a message. Should be in bytes. Must be between 1024 and 262_144. Defaults to 262_144.
 *
 * * `sqs` - (Optional) The SQS attributes of the queue. Conflicts with `nats`.
 *     - `endpoint` - (Optional) The endpoint of the SQS queue. Can contain a {region} placeholder. Defaults to `http://sqs-sns.mnq.{region}.scw.cloud`.
 *     - `accessKey` - (Required) The access key of the SQS queue.
 *     - `secretKey` - (Required) The secret key of the SQS queue.
 *     - `fifoQueue` - (Optional) Whether the queue is a FIFO queue. If true, the queue name must end with .fifo. Defaults to `false`.
 *     - `contentBasedDeduplication` - (Optional) Specifies whether to enable content-based deduplication. Defaults to `false`.
 *     - `receiveWaitTimeSeconds` - (Optional) The number of seconds to wait for a message to arrive in the queue before returning. Must be between 0 and 20. Defaults to 0.
 *     - `visibilityTimeoutSeconds` - (Optional) The number of seconds a message is hidden from other consumers. Must be between 0 and 43_200. Defaults to 30.
 *     - For more information about the SQS limitations, see [the documentation](https://www.scaleway.com/en/developers/api/messaging-and-queuing/#technical-limitations).
 *
 * * `nats` - (Optional) The NATS attributes of the queue. Conflicts with `sqs`.
 *     - `endpoint` - (Optional) The endpoint of the NATS queue. Can contain a {region} placeholder. Defaults to `nats://nats.mnq.{region}.scw.cloud:4222`.
 *     - `credentials` - (Required) Line jump separated key and seed.
 *     - `retentionPolicy` - (Optional) The retention policy of the queue. See https://docs.nats.io/nats-concepts/jetstream/streams#retentionpolicy for more information. Defaults to `workqueue`.
 *
 * ### Attribute Reference
 *
 * In addition to all arguments above, the following attributes are exported:
 *
 * * `sqs` - The SQS attributes of the queue.
 *   ~ `url` - The URL of the queue.
 */
export class MnqQueue extends pulumi.CustomResource {
    /**
     * Get an existing MnqQueue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MnqQueueState, opts?: pulumi.CustomResourceOptions): MnqQueue {
        return new MnqQueue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/mnqQueue:MnqQueue';

    /**
     * Returns true if the given object is an instance of MnqQueue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MnqQueue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MnqQueue.__pulumiType;
    }

    /**
     * The number of seconds the queue retains a message.
     */
    public readonly messageMaxAge!: pulumi.Output<number | undefined>;
    /**
     * The maximum size of a message. Should be in bytes.
     */
    public readonly messageMaxSize!: pulumi.Output<number | undefined>;
    /**
     * The name of the queue. Conflicts with name_prefix.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with name.
     */
    public readonly namePrefix!: pulumi.Output<string>;
    /**
     * The ID of the Namespace associated to
     */
    public readonly namespaceId!: pulumi.Output<string>;
    /**
     * The NATS attributes of the queue
     */
    public readonly nats!: pulumi.Output<outputs.MnqQueueNats | undefined>;
    /**
     * The SQS attributes of the queue
     */
    public readonly sqs!: pulumi.Output<outputs.MnqQueueSqs | undefined>;

    /**
     * Create a MnqQueue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MnqQueueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MnqQueueArgs | MnqQueueState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MnqQueueState | undefined;
            resourceInputs["messageMaxAge"] = state ? state.messageMaxAge : undefined;
            resourceInputs["messageMaxSize"] = state ? state.messageMaxSize : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namePrefix"] = state ? state.namePrefix : undefined;
            resourceInputs["namespaceId"] = state ? state.namespaceId : undefined;
            resourceInputs["nats"] = state ? state.nats : undefined;
            resourceInputs["sqs"] = state ? state.sqs : undefined;
        } else {
            const args = argsOrState as MnqQueueArgs | undefined;
            if ((!args || args.namespaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespaceId'");
            }
            resourceInputs["messageMaxAge"] = args ? args.messageMaxAge : undefined;
            resourceInputs["messageMaxSize"] = args ? args.messageMaxSize : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namePrefix"] = args ? args.namePrefix : undefined;
            resourceInputs["namespaceId"] = args ? args.namespaceId : undefined;
            resourceInputs["nats"] = args ? args.nats : undefined;
            resourceInputs["sqs"] = args ? args.sqs : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MnqQueue.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MnqQueue resources.
 */
export interface MnqQueueState {
    /**
     * The number of seconds the queue retains a message.
     */
    messageMaxAge?: pulumi.Input<number>;
    /**
     * The maximum size of a message. Should be in bytes.
     */
    messageMaxSize?: pulumi.Input<number>;
    /**
     * The name of the queue. Conflicts with name_prefix.
     */
    name?: pulumi.Input<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with name.
     */
    namePrefix?: pulumi.Input<string>;
    /**
     * The ID of the Namespace associated to
     */
    namespaceId?: pulumi.Input<string>;
    /**
     * The NATS attributes of the queue
     */
    nats?: pulumi.Input<inputs.MnqQueueNats>;
    /**
     * The SQS attributes of the queue
     */
    sqs?: pulumi.Input<inputs.MnqQueueSqs>;
}

/**
 * The set of arguments for constructing a MnqQueue resource.
 */
export interface MnqQueueArgs {
    /**
     * The number of seconds the queue retains a message.
     */
    messageMaxAge?: pulumi.Input<number>;
    /**
     * The maximum size of a message. Should be in bytes.
     */
    messageMaxSize?: pulumi.Input<number>;
    /**
     * The name of the queue. Conflicts with name_prefix.
     */
    name?: pulumi.Input<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with name.
     */
    namePrefix?: pulumi.Input<string>;
    /**
     * The ID of the Namespace associated to
     */
    namespaceId: pulumi.Input<string>;
    /**
     * The NATS attributes of the queue
     */
    nats?: pulumi.Input<inputs.MnqQueueNats>;
    /**
     * The SQS attributes of the queue
     */
    sqs?: pulumi.Input<inputs.MnqQueueSqs>;
}
