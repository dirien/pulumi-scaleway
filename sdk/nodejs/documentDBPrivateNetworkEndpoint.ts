// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DocumentDBPrivateNetworkEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing DocumentDBPrivateNetworkEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DocumentDBPrivateNetworkEndpointState, opts?: pulumi.CustomResourceOptions): DocumentDBPrivateNetworkEndpoint {
        return new DocumentDBPrivateNetworkEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/documentDBPrivateNetworkEndpoint:DocumentDBPrivateNetworkEndpoint';

    /**
     * Returns true if the given object is an instance of DocumentDBPrivateNetworkEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DocumentDBPrivateNetworkEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DocumentDBPrivateNetworkEndpoint.__pulumiType;
    }

    /**
     * The hostname of your endpoint
     */
    public /*out*/ readonly hostname!: pulumi.Output<string>;
    /**
     * Instance on which the endpoint is attached
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The IP of your private network service
     */
    public /*out*/ readonly ip!: pulumi.Output<string>;
    /**
     * The IP with the given mask within the private subnet
     */
    public readonly ipNet!: pulumi.Output<string>;
    /**
     * The name of your private service
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The port of your private service
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * The private network ID
     */
    public readonly privateNetworkId!: pulumi.Output<string>;
    /**
     * The region you want to attach the resource to
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The zone you want to attach the resource to
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a DocumentDBPrivateNetworkEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DocumentDBPrivateNetworkEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DocumentDBPrivateNetworkEndpointArgs | DocumentDBPrivateNetworkEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DocumentDBPrivateNetworkEndpointState | undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["ipNet"] = state ? state.ipNet : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["privateNetworkId"] = state ? state.privateNetworkId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as DocumentDBPrivateNetworkEndpointArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.privateNetworkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateNetworkId'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["ipNet"] = args ? args.ipNet : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["privateNetworkId"] = args ? args.privateNetworkId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["hostname"] = undefined /*out*/;
            resourceInputs["ip"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DocumentDBPrivateNetworkEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DocumentDBPrivateNetworkEndpoint resources.
 */
export interface DocumentDBPrivateNetworkEndpointState {
    /**
     * The hostname of your endpoint
     */
    hostname?: pulumi.Input<string>;
    /**
     * Instance on which the endpoint is attached
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The IP of your private network service
     */
    ip?: pulumi.Input<string>;
    /**
     * The IP with the given mask within the private subnet
     */
    ipNet?: pulumi.Input<string>;
    /**
     * The name of your private service
     */
    name?: pulumi.Input<string>;
    /**
     * The port of your private service
     */
    port?: pulumi.Input<number>;
    /**
     * The private network ID
     */
    privateNetworkId?: pulumi.Input<string>;
    /**
     * The region you want to attach the resource to
     */
    region?: pulumi.Input<string>;
    /**
     * The zone you want to attach the resource to
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DocumentDBPrivateNetworkEndpoint resource.
 */
export interface DocumentDBPrivateNetworkEndpointArgs {
    /**
     * Instance on which the endpoint is attached
     */
    instanceId: pulumi.Input<string>;
    /**
     * The IP with the given mask within the private subnet
     */
    ipNet?: pulumi.Input<string>;
    /**
     * The port of your private service
     */
    port?: pulumi.Input<number>;
    /**
     * The private network ID
     */
    privateNetworkId: pulumi.Input<string>;
    /**
     * The region you want to attach the resource to
     */
    region?: pulumi.Input<string>;
    /**
     * The zone you want to attach the resource to
     */
    zone?: pulumi.Input<string>;
}
