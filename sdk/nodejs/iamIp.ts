// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * @deprecated scaleway.index/iamip.IamIp has been deprecated in favor of scaleway.index/ipamip.IpamIp
 */
export class IamIp extends pulumi.CustomResource {
    /**
     * Get an existing IamIp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamIpState, opts?: pulumi.CustomResourceOptions): IamIp {
        pulumi.log.warn("IamIp is deprecated: scaleway.index/iamip.IamIp has been deprecated in favor of scaleway.index/ipamip.IpamIp")
        return new IamIp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/iamIp:IamIp';

    /**
     * Returns true if the given object is an instance of IamIp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamIp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamIp.__pulumiType;
    }

    /**
     * Request a specific IP in the requested source pool
     */
    public readonly address!: pulumi.Output<string>;
    /**
     * The date and time of the creation of the IP
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Request an IPv6 instead of an IPv4
     */
    public readonly isIpv6!: pulumi.Output<boolean | undefined>;
    /**
     * The project_id you want to attach the resource to
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The region you want to attach the resource to
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The IP resource
     */
    public /*out*/ readonly resources!: pulumi.Output<outputs.IamIpResource[]>;
    /**
     * The source in which to book the IP
     */
    public readonly sources!: pulumi.Output<outputs.IamIpSource[]>;
    /**
     * The tags associated with the IP
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The date and time of the last update of the IP
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The zone of the resource
     */
    public /*out*/ readonly zone!: pulumi.Output<string>;

    /**
     * Create a IamIp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated scaleway.index/iamip.IamIp has been deprecated in favor of scaleway.index/ipamip.IpamIp */
    constructor(name: string, args: IamIpArgs, opts?: pulumi.CustomResourceOptions)
    /** @deprecated scaleway.index/iamip.IamIp has been deprecated in favor of scaleway.index/ipamip.IpamIp */
    constructor(name: string, argsOrState?: IamIpArgs | IamIpState, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("IamIp is deprecated: scaleway.index/iamip.IamIp has been deprecated in favor of scaleway.index/ipamip.IpamIp")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IamIpState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["isIpv6"] = state ? state.isIpv6 : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resources"] = state ? state.resources : undefined;
            resourceInputs["sources"] = state ? state.sources : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as IamIpArgs | undefined;
            if ((!args || args.sources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sources'");
            }
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["isIpv6"] = args ? args.isIpv6 : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["sources"] = args ? args.sources : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["resources"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["zone"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamIp.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IamIp resources.
 */
export interface IamIpState {
    /**
     * Request a specific IP in the requested source pool
     */
    address?: pulumi.Input<string>;
    /**
     * The date and time of the creation of the IP
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Request an IPv6 instead of an IPv4
     */
    isIpv6?: pulumi.Input<boolean>;
    /**
     * The project_id you want to attach the resource to
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region you want to attach the resource to
     */
    region?: pulumi.Input<string>;
    /**
     * The IP resource
     */
    resources?: pulumi.Input<pulumi.Input<inputs.IamIpResource>[]>;
    /**
     * The source in which to book the IP
     */
    sources?: pulumi.Input<pulumi.Input<inputs.IamIpSource>[]>;
    /**
     * The tags associated with the IP
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The date and time of the last update of the IP
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The zone of the resource
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IamIp resource.
 */
export interface IamIpArgs {
    /**
     * Request a specific IP in the requested source pool
     */
    address?: pulumi.Input<string>;
    /**
     * Request an IPv6 instead of an IPv4
     */
    isIpv6?: pulumi.Input<boolean>;
    /**
     * The project_id you want to attach the resource to
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region you want to attach the resource to
     */
    region?: pulumi.Input<string>;
    /**
     * The source in which to book the IP
     */
    sources: pulumi.Input<pulumi.Input<inputs.IamIpSource>[]>;
    /**
     * The tags associated with the IP
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
