// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstancePrivateNicPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstancePrivateNicPlainArgs Empty = new GetInstancePrivateNicPlainArgs();

    /**
     * The ID of the private network
     * Only one of `private_nic_id` and `private_network_id` should be specified.
     * 
     */
    @Import(name="privateNetworkId")
    private @Nullable String privateNetworkId;

    /**
     * @return The ID of the private network
     * Only one of `private_nic_id` and `private_network_id` should be specified.
     * 
     */
    public Optional<String> privateNetworkId() {
        return Optional.ofNullable(this.privateNetworkId);
    }

    /**
     * The ID of the instance server private nic
     * Only one of `private_nic_id` and `private_network_id` should be specified.
     * 
     */
    @Import(name="privateNicId")
    private @Nullable String privateNicId;

    /**
     * @return The ID of the instance server private nic
     * Only one of `private_nic_id` and `private_network_id` should be specified.
     * 
     */
    public Optional<String> privateNicId() {
        return Optional.ofNullable(this.privateNicId);
    }

    /**
     * The server&#39;s id
     * 
     */
    @Import(name="serverId", required=true)
    private String serverId;

    /**
     * @return The server&#39;s id
     * 
     */
    public String serverId() {
        return this.serverId;
    }

    /**
     * The tags associated with the private NIC.
     * As datasource only returns one private NIC, the search with given tags must return only one result
     * 
     */
    @Import(name="tags")
    private @Nullable List<String> tags;

    /**
     * @return The tags associated with the private NIC.
     * As datasource only returns one private NIC, the search with given tags must return only one result
     * 
     */
    public Optional<List<String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * `zone`) The zone in which the private nic exists.
     * 
     */
    @Import(name="zone")
    private @Nullable String zone;

    /**
     * @return `zone`) The zone in which the private nic exists.
     * 
     */
    public Optional<String> zone() {
        return Optional.ofNullable(this.zone);
    }

    private GetInstancePrivateNicPlainArgs() {}

    private GetInstancePrivateNicPlainArgs(GetInstancePrivateNicPlainArgs $) {
        this.privateNetworkId = $.privateNetworkId;
        this.privateNicId = $.privateNicId;
        this.serverId = $.serverId;
        this.tags = $.tags;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstancePrivateNicPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstancePrivateNicPlainArgs $;

        public Builder() {
            $ = new GetInstancePrivateNicPlainArgs();
        }

        public Builder(GetInstancePrivateNicPlainArgs defaults) {
            $ = new GetInstancePrivateNicPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param privateNetworkId The ID of the private network
         * Only one of `private_nic_id` and `private_network_id` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder privateNetworkId(@Nullable String privateNetworkId) {
            $.privateNetworkId = privateNetworkId;
            return this;
        }

        /**
         * @param privateNicId The ID of the instance server private nic
         * Only one of `private_nic_id` and `private_network_id` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder privateNicId(@Nullable String privateNicId) {
            $.privateNicId = privateNicId;
            return this;
        }

        /**
         * @param serverId The server&#39;s id
         * 
         * @return builder
         * 
         */
        public Builder serverId(String serverId) {
            $.serverId = serverId;
            return this;
        }

        /**
         * @param tags The tags associated with the private NIC.
         * As datasource only returns one private NIC, the search with given tags must return only one result
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable List<String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags associated with the private NIC.
         * As datasource only returns one private NIC, the search with given tags must return only one result
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param zone `zone`) The zone in which the private nic exists.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable String zone) {
            $.zone = zone;
            return this;
        }

        public GetInstancePrivateNicPlainArgs build() {
            $.serverId = Objects.requireNonNull($.serverId, "expected parameter 'serverId' to be non-null");
            return $;
        }
    }

}
