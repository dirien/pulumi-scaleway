// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import io.dirien.scaleway.outputs.GetLbPrivateNetwork;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLbResult {
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The load-balancer public IP Address.
     * 
     */
    private String ipAddress;
    private String ipId;
    private @Nullable String lbId;
    private @Nullable String name;
    private String organizationId;
    private List<GetLbPrivateNetwork> privateNetworks;
    /**
     * @return (Defaults to provider `project_id`) The ID of the project the LB is associated with.
     * 
     */
    private String projectId;
    private String region;
    private @Nullable Boolean releaseIp;
    private String sslCompatibilityLevel;
    /**
     * @return The tags associated with the load-balancer.
     * 
     */
    private List<String> tags;
    /**
     * @return The type of the load-balancer.
     * 
     */
    private String type;
    /**
     * @return (Defaults to provider `zone`) The zone in which the LB exists.
     * 
     */
    private @Nullable String zone;

    private GetLbResult() {}
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The load-balancer public IP Address.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    public String ipId() {
        return this.ipId;
    }
    public Optional<String> lbId() {
        return Optional.ofNullable(this.lbId);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String organizationId() {
        return this.organizationId;
    }
    public List<GetLbPrivateNetwork> privateNetworks() {
        return this.privateNetworks;
    }
    /**
     * @return (Defaults to provider `project_id`) The ID of the project the LB is associated with.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    public String region() {
        return this.region;
    }
    public Optional<Boolean> releaseIp() {
        return Optional.ofNullable(this.releaseIp);
    }
    public String sslCompatibilityLevel() {
        return this.sslCompatibilityLevel;
    }
    /**
     * @return The tags associated with the load-balancer.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return The type of the load-balancer.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return (Defaults to provider `zone`) The zone in which the LB exists.
     * 
     */
    public Optional<String> zone() {
        return Optional.ofNullable(this.zone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLbResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private String ipAddress;
        private String ipId;
        private @Nullable String lbId;
        private @Nullable String name;
        private String organizationId;
        private List<GetLbPrivateNetwork> privateNetworks;
        private String projectId;
        private String region;
        private @Nullable Boolean releaseIp;
        private String sslCompatibilityLevel;
        private List<String> tags;
        private String type;
        private @Nullable String zone;
        public Builder() {}
        public Builder(GetLbResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.ipId = defaults.ipId;
    	      this.lbId = defaults.lbId;
    	      this.name = defaults.name;
    	      this.organizationId = defaults.organizationId;
    	      this.privateNetworks = defaults.privateNetworks;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.releaseIp = defaults.releaseIp;
    	      this.sslCompatibilityLevel = defaults.sslCompatibilityLevel;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        @CustomType.Setter
        public Builder ipId(String ipId) {
            this.ipId = Objects.requireNonNull(ipId);
            return this;
        }
        @CustomType.Setter
        public Builder lbId(@Nullable String lbId) {
            this.lbId = lbId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }
        @CustomType.Setter
        public Builder privateNetworks(List<GetLbPrivateNetwork> privateNetworks) {
            this.privateNetworks = Objects.requireNonNull(privateNetworks);
            return this;
        }
        public Builder privateNetworks(GetLbPrivateNetwork... privateNetworks) {
            return privateNetworks(List.of(privateNetworks));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        @CustomType.Setter
        public Builder releaseIp(@Nullable Boolean releaseIp) {
            this.releaseIp = releaseIp;
            return this;
        }
        @CustomType.Setter
        public Builder sslCompatibilityLevel(String sslCompatibilityLevel) {
            this.sslCompatibilityLevel = Objects.requireNonNull(sslCompatibilityLevel);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder zone(@Nullable String zone) {
            this.zone = zone;
            return this;
        }
        public GetLbResult build() {
            final var o = new GetLbResult();
            o.description = description;
            o.id = id;
            o.ipAddress = ipAddress;
            o.ipId = ipId;
            o.lbId = lbId;
            o.name = name;
            o.organizationId = organizationId;
            o.privateNetworks = privateNetworks;
            o.projectId = projectId;
            o.region = region;
            o.releaseIp = releaseIp;
            o.sslCompatibilityLevel = sslCompatibilityLevel;
            o.tags = tags;
            o.type = type;
            o.zone = zone;
            return o;
        }
    }
}
