// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainZoneResult {
    private @Nullable String domain;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Message
     * 
     */
    private String message;
    /**
     * @return NameServer list for zone.
     * 
     */
    private List<String> ns;
    /**
     * @return NameServer default list for zone.
     * 
     */
    private List<String> nsDefaults;
    /**
     * @return NameServer master list for zone.
     * 
     */
    private List<String> nsMasters;
    private String projectId;
    /**
     * @return The domain zone status.
     * 
     */
    private String status;
    private @Nullable String subdomain;
    /**
     * @return The date and time of the last update of the DNS zone.
     * 
     */
    private String updatedAt;

    private GetDomainZoneResult() {}
    public Optional<String> domain() {
        return Optional.ofNullable(this.domain);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Message
     * 
     */
    public String message() {
        return this.message;
    }
    /**
     * @return NameServer list for zone.
     * 
     */
    public List<String> ns() {
        return this.ns;
    }
    /**
     * @return NameServer default list for zone.
     * 
     */
    public List<String> nsDefaults() {
        return this.nsDefaults;
    }
    /**
     * @return NameServer master list for zone.
     * 
     */
    public List<String> nsMasters() {
        return this.nsMasters;
    }
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The domain zone status.
     * 
     */
    public String status() {
        return this.status;
    }
    public Optional<String> subdomain() {
        return Optional.ofNullable(this.subdomain);
    }
    /**
     * @return The date and time of the last update of the DNS zone.
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainZoneResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String domain;
        private String id;
        private String message;
        private List<String> ns;
        private List<String> nsDefaults;
        private List<String> nsMasters;
        private String projectId;
        private String status;
        private @Nullable String subdomain;
        private String updatedAt;
        public Builder() {}
        public Builder(GetDomainZoneResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.id = defaults.id;
    	      this.message = defaults.message;
    	      this.ns = defaults.ns;
    	      this.nsDefaults = defaults.nsDefaults;
    	      this.nsMasters = defaults.nsMasters;
    	      this.projectId = defaults.projectId;
    	      this.status = defaults.status;
    	      this.subdomain = defaults.subdomain;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder domain(@Nullable String domain) {
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder message(String message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }
        @CustomType.Setter
        public Builder ns(List<String> ns) {
            this.ns = Objects.requireNonNull(ns);
            return this;
        }
        public Builder ns(String... ns) {
            return ns(List.of(ns));
        }
        @CustomType.Setter
        public Builder nsDefaults(List<String> nsDefaults) {
            this.nsDefaults = Objects.requireNonNull(nsDefaults);
            return this;
        }
        public Builder nsDefaults(String... nsDefaults) {
            return nsDefaults(List.of(nsDefaults));
        }
        @CustomType.Setter
        public Builder nsMasters(List<String> nsMasters) {
            this.nsMasters = Objects.requireNonNull(nsMasters);
            return this;
        }
        public Builder nsMasters(String... nsMasters) {
            return nsMasters(List.of(nsMasters));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder subdomain(@Nullable String subdomain) {
            this.subdomain = subdomain;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt);
            return this;
        }
        public GetDomainZoneResult build() {
            final var o = new GetDomainZoneResult();
            o.domain = domain;
            o.id = id;
            o.message = message;
            o.ns = ns;
            o.nsDefaults = nsDefaults;
            o.nsMasters = nsMasters;
            o.projectId = projectId;
            o.status = status;
            o.subdomain = subdomain;
            o.updatedAt = updatedAt;
            return o;
        }
    }
}
