// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetK8sVersionResult {
    /**
     * @return The list of supported Container Network Interface (CNI) plugins for this version.
     * 
     */
    private List<String> availableCnis;
    /**
     * @return The list of supported container runtimes for this version.
     * 
     */
    private List<String> availableContainerRuntimes;
    /**
     * @return The list of supported feature gates for this version.
     * 
     */
    private List<String> availableFeatureGates;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String region;

    private GetK8sVersionResult() {}
    /**
     * @return The list of supported Container Network Interface (CNI) plugins for this version.
     * 
     */
    public List<String> availableCnis() {
        return this.availableCnis;
    }
    /**
     * @return The list of supported container runtimes for this version.
     * 
     */
    public List<String> availableContainerRuntimes() {
        return this.availableContainerRuntimes;
    }
    /**
     * @return The list of supported feature gates for this version.
     * 
     */
    public List<String> availableFeatureGates() {
        return this.availableFeatureGates;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String region() {
        return this.region;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetK8sVersionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> availableCnis;
        private List<String> availableContainerRuntimes;
        private List<String> availableFeatureGates;
        private String id;
        private String name;
        private String region;
        public Builder() {}
        public Builder(GetK8sVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableCnis = defaults.availableCnis;
    	      this.availableContainerRuntimes = defaults.availableContainerRuntimes;
    	      this.availableFeatureGates = defaults.availableFeatureGates;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder availableCnis(List<String> availableCnis) {
            this.availableCnis = Objects.requireNonNull(availableCnis);
            return this;
        }
        public Builder availableCnis(String... availableCnis) {
            return availableCnis(List.of(availableCnis));
        }
        @CustomType.Setter
        public Builder availableContainerRuntimes(List<String> availableContainerRuntimes) {
            this.availableContainerRuntimes = Objects.requireNonNull(availableContainerRuntimes);
            return this;
        }
        public Builder availableContainerRuntimes(String... availableContainerRuntimes) {
            return availableContainerRuntimes(List.of(availableContainerRuntimes));
        }
        @CustomType.Setter
        public Builder availableFeatureGates(List<String> availableFeatureGates) {
            this.availableFeatureGates = Objects.requireNonNull(availableFeatureGates);
            return this;
        }
        public Builder availableFeatureGates(String... availableFeatureGates) {
            return availableFeatureGates(List.of(availableFeatureGates));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        public GetK8sVersionResult build() {
            final var o = new GetK8sVersionResult();
            o.availableCnis = availableCnis;
            o.availableContainerRuntimes = availableContainerRuntimes;
            o.availableFeatureGates = availableFeatureGates;
            o.id = id;
            o.name = name;
            o.region = region;
            return o;
        }
    }
}
