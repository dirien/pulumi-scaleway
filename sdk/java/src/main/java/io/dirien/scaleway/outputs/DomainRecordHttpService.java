// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainRecordHttpService {
    /**
     * @return List of IPs to check
     * 
     */
    private List<String> ips;
    /**
     * @return Text to search
     * 
     */
    private String mustContain;
    /**
     * @return Strategy to return an IP from the IPs list. Can be `random` or `hashed`
     * 
     */
    private String strategy;
    /**
     * @return URL to match the `must_contain` text to validate an IP
     * 
     */
    private String url;
    /**
     * @return User-agent used when checking the URL
     * 
     */
    private @Nullable String userAgent;

    private DomainRecordHttpService() {}
    /**
     * @return List of IPs to check
     * 
     */
    public List<String> ips() {
        return this.ips;
    }
    /**
     * @return Text to search
     * 
     */
    public String mustContain() {
        return this.mustContain;
    }
    /**
     * @return Strategy to return an IP from the IPs list. Can be `random` or `hashed`
     * 
     */
    public String strategy() {
        return this.strategy;
    }
    /**
     * @return URL to match the `must_contain` text to validate an IP
     * 
     */
    public String url() {
        return this.url;
    }
    /**
     * @return User-agent used when checking the URL
     * 
     */
    public Optional<String> userAgent() {
        return Optional.ofNullable(this.userAgent);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainRecordHttpService defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> ips;
        private String mustContain;
        private String strategy;
        private String url;
        private @Nullable String userAgent;
        public Builder() {}
        public Builder(DomainRecordHttpService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ips = defaults.ips;
    	      this.mustContain = defaults.mustContain;
    	      this.strategy = defaults.strategy;
    	      this.url = defaults.url;
    	      this.userAgent = defaults.userAgent;
        }

        @CustomType.Setter
        public Builder ips(List<String> ips) {
            this.ips = Objects.requireNonNull(ips);
            return this;
        }
        public Builder ips(String... ips) {
            return ips(List.of(ips));
        }
        @CustomType.Setter
        public Builder mustContain(String mustContain) {
            this.mustContain = Objects.requireNonNull(mustContain);
            return this;
        }
        @CustomType.Setter
        public Builder strategy(String strategy) {
            this.strategy = Objects.requireNonNull(strategy);
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        @CustomType.Setter
        public Builder userAgent(@Nullable String userAgent) {
            this.userAgent = userAgent;
            return this;
        }
        public DomainRecordHttpService build() {
            final var o = new DomainRecordHttpService();
            o.ips = ips;
            o.mustContain = mustContain;
            o.strategy = strategy;
            o.url = url;
            o.userAgent = userAgent;
            return o;
        }
    }
}
