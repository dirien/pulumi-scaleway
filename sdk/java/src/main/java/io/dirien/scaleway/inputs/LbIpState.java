// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LbIpState extends com.pulumi.resources.ResourceArgs {

    public static final LbIpState Empty = new LbIpState();

    /**
     * The IP Address
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return The IP Address
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * The associated load-balance ID if any
     * 
     */
    @Import(name="lbId")
    private @Nullable Output<String> lbId;

    /**
     * @return The associated load-balance ID if any
     * 
     */
    public Optional<Output<String>> lbId() {
        return Optional.ofNullable(this.lbId);
    }

    /**
     * The organization_id you want to attach the resource to
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return The organization_id you want to attach the resource to
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * `project_id`) The ID of the project the IP is associated with.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return `project_id`) The ID of the project the IP is associated with.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The region of the resource
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region of the resource
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The reverse domain associated with this IP.
     * 
     */
    @Import(name="reverse")
    private @Nullable Output<String> reverse;

    /**
     * @return The reverse domain associated with this IP.
     * 
     */
    public Optional<Output<String>> reverse() {
        return Optional.ofNullable(this.reverse);
    }

    /**
     * `zone`) The zone in which the IP should be reserved.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return `zone`) The zone in which the IP should be reserved.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private LbIpState() {}

    private LbIpState(LbIpState $) {
        this.ipAddress = $.ipAddress;
        this.lbId = $.lbId;
        this.organizationId = $.organizationId;
        this.projectId = $.projectId;
        this.region = $.region;
        this.reverse = $.reverse;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LbIpState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LbIpState $;

        public Builder() {
            $ = new LbIpState();
        }

        public Builder(LbIpState defaults) {
            $ = new LbIpState(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipAddress The IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress The IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param lbId The associated load-balance ID if any
         * 
         * @return builder
         * 
         */
        public Builder lbId(@Nullable Output<String> lbId) {
            $.lbId = lbId;
            return this;
        }

        /**
         * @param lbId The associated load-balance ID if any
         * 
         * @return builder
         * 
         */
        public Builder lbId(String lbId) {
            return lbId(Output.of(lbId));
        }

        /**
         * @param organizationId The organization_id you want to attach the resource to
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId The organization_id you want to attach the resource to
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param projectId `project_id`) The ID of the project the IP is associated with.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId `project_id`) The ID of the project the IP is associated with.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param region The region of the resource
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the resource
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param reverse The reverse domain associated with this IP.
         * 
         * @return builder
         * 
         */
        public Builder reverse(@Nullable Output<String> reverse) {
            $.reverse = reverse;
            return this;
        }

        /**
         * @param reverse The reverse domain associated with this IP.
         * 
         * @return builder
         * 
         */
        public Builder reverse(String reverse) {
            return reverse(Output.of(reverse));
        }

        /**
         * @param zone `zone`) The zone in which the IP should be reserved.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone `zone`) The zone in which the IP should be reserved.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public LbIpState build() {
            return $;
        }
    }

}
