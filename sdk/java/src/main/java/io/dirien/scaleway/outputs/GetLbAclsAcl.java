// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import io.dirien.scaleway.outputs.GetLbAclsAclAction;
import io.dirien.scaleway.outputs.GetLbAclsAclMatch;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLbAclsAcl {
    /**
     * @return The action that has been undertaken when an ACL filter had matched.
     * 
     */
    private List<GetLbAclsAclAction> actions;
    /**
     * @return The date at which the ACL was created (RFC 3339 format).
     * 
     */
    private String createdAt;
    /**
     * @return The description of the ACL resource.
     * 
     */
    private String description;
    /**
     * @return The frontend ID this ACL is attached to. ACLs with a frontend ID like it are listed.
     * &gt; **Important:** LB Frontends&#39; IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
     * 
     */
    private String frontendId;
    /**
     * @return The associated ACL ID.
     * &gt; **Important:** LB ACLs&#39; IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
     * 
     */
    private String id;
    /**
     * @return The order between the ACLs.
     * 
     */
    private Integer index;
    /**
     * @return The ACL match rule.
     * 
     */
    private List<GetLbAclsAclMatch> matches;
    /**
     * @return The ACL name used as filter. ACLs with a name like it are listed.
     * 
     */
    private String name;
    /**
     * @return The date at which the ACL was last updated (RFC 3339 format).
     * 
     */
    private String updateAt;

    private GetLbAclsAcl() {}
    /**
     * @return The action that has been undertaken when an ACL filter had matched.
     * 
     */
    public List<GetLbAclsAclAction> actions() {
        return this.actions;
    }
    /**
     * @return The date at which the ACL was created (RFC 3339 format).
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The description of the ACL resource.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The frontend ID this ACL is attached to. ACLs with a frontend ID like it are listed.
     * &gt; **Important:** LB Frontends&#39; IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
     * 
     */
    public String frontendId() {
        return this.frontendId;
    }
    /**
     * @return The associated ACL ID.
     * &gt; **Important:** LB ACLs&#39; IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The order between the ACLs.
     * 
     */
    public Integer index() {
        return this.index;
    }
    /**
     * @return The ACL match rule.
     * 
     */
    public List<GetLbAclsAclMatch> matches() {
        return this.matches;
    }
    /**
     * @return The ACL name used as filter. ACLs with a name like it are listed.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The date at which the ACL was last updated (RFC 3339 format).
     * 
     */
    public String updateAt() {
        return this.updateAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLbAclsAcl defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetLbAclsAclAction> actions;
        private String createdAt;
        private String description;
        private String frontendId;
        private String id;
        private Integer index;
        private List<GetLbAclsAclMatch> matches;
        private String name;
        private String updateAt;
        public Builder() {}
        public Builder(GetLbAclsAcl defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.frontendId = defaults.frontendId;
    	      this.id = defaults.id;
    	      this.index = defaults.index;
    	      this.matches = defaults.matches;
    	      this.name = defaults.name;
    	      this.updateAt = defaults.updateAt;
        }

        @CustomType.Setter
        public Builder actions(List<GetLbAclsAclAction> actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }
        public Builder actions(GetLbAclsAclAction... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder frontendId(String frontendId) {
            this.frontendId = Objects.requireNonNull(frontendId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder index(Integer index) {
            this.index = Objects.requireNonNull(index);
            return this;
        }
        @CustomType.Setter
        public Builder matches(List<GetLbAclsAclMatch> matches) {
            this.matches = Objects.requireNonNull(matches);
            return this;
        }
        public Builder matches(GetLbAclsAclMatch... matches) {
            return matches(List.of(matches));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder updateAt(String updateAt) {
            this.updateAt = Objects.requireNonNull(updateAt);
            return this;
        }
        public GetLbAclsAcl build() {
            final var o = new GetLbAclsAcl();
            o.actions = actions;
            o.createdAt = createdAt;
            o.description = description;
            o.frontendId = frontendId;
            o.id = id;
            o.index = index;
            o.matches = matches;
            o.name = name;
            o.updateAt = updateAt;
            return o;
        }
    }
}
