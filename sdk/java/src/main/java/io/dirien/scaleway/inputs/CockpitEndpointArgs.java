// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CockpitEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final CockpitEndpointArgs Empty = new CockpitEndpointArgs();

    /**
     * The alertmanager URL
     * 
     */
    @Import(name="alertmanagerUrl")
    private @Nullable Output<String> alertmanagerUrl;

    /**
     * @return The alertmanager URL
     * 
     */
    public Optional<Output<String>> alertmanagerUrl() {
        return Optional.ofNullable(this.alertmanagerUrl);
    }

    /**
     * The grafana URL
     * 
     */
    @Import(name="grafanaUrl")
    private @Nullable Output<String> grafanaUrl;

    /**
     * @return The grafana URL
     * 
     */
    public Optional<Output<String>> grafanaUrl() {
        return Optional.ofNullable(this.grafanaUrl);
    }

    /**
     * The logs URL
     * 
     */
    @Import(name="logsUrl")
    private @Nullable Output<String> logsUrl;

    /**
     * @return The logs URL
     * 
     */
    public Optional<Output<String>> logsUrl() {
        return Optional.ofNullable(this.logsUrl);
    }

    /**
     * The metrics URL
     * 
     */
    @Import(name="metricsUrl")
    private @Nullable Output<String> metricsUrl;

    /**
     * @return The metrics URL
     * 
     */
    public Optional<Output<String>> metricsUrl() {
        return Optional.ofNullable(this.metricsUrl);
    }

    private CockpitEndpointArgs() {}

    private CockpitEndpointArgs(CockpitEndpointArgs $) {
        this.alertmanagerUrl = $.alertmanagerUrl;
        this.grafanaUrl = $.grafanaUrl;
        this.logsUrl = $.logsUrl;
        this.metricsUrl = $.metricsUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CockpitEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CockpitEndpointArgs $;

        public Builder() {
            $ = new CockpitEndpointArgs();
        }

        public Builder(CockpitEndpointArgs defaults) {
            $ = new CockpitEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alertmanagerUrl The alertmanager URL
         * 
         * @return builder
         * 
         */
        public Builder alertmanagerUrl(@Nullable Output<String> alertmanagerUrl) {
            $.alertmanagerUrl = alertmanagerUrl;
            return this;
        }

        /**
         * @param alertmanagerUrl The alertmanager URL
         * 
         * @return builder
         * 
         */
        public Builder alertmanagerUrl(String alertmanagerUrl) {
            return alertmanagerUrl(Output.of(alertmanagerUrl));
        }

        /**
         * @param grafanaUrl The grafana URL
         * 
         * @return builder
         * 
         */
        public Builder grafanaUrl(@Nullable Output<String> grafanaUrl) {
            $.grafanaUrl = grafanaUrl;
            return this;
        }

        /**
         * @param grafanaUrl The grafana URL
         * 
         * @return builder
         * 
         */
        public Builder grafanaUrl(String grafanaUrl) {
            return grafanaUrl(Output.of(grafanaUrl));
        }

        /**
         * @param logsUrl The logs URL
         * 
         * @return builder
         * 
         */
        public Builder logsUrl(@Nullable Output<String> logsUrl) {
            $.logsUrl = logsUrl;
            return this;
        }

        /**
         * @param logsUrl The logs URL
         * 
         * @return builder
         * 
         */
        public Builder logsUrl(String logsUrl) {
            return logsUrl(Output.of(logsUrl));
        }

        /**
         * @param metricsUrl The metrics URL
         * 
         * @return builder
         * 
         */
        public Builder metricsUrl(@Nullable Output<String> metricsUrl) {
            $.metricsUrl = metricsUrl;
            return this;
        }

        /**
         * @param metricsUrl The metrics URL
         * 
         * @return builder
         * 
         */
        public Builder metricsUrl(String metricsUrl) {
            return metricsUrl(Output.of(metricsUrl));
        }

        public CockpitEndpointArgs build() {
            return $;
        }
    }

}
