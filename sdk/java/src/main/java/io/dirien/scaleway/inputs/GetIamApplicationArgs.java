// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIamApplicationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIamApplicationArgs Empty = new GetIamApplicationArgs();

    /**
     * The ID of the IAM application.
     * Only one of the `name` and `application_id` should be specified.
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return The ID of the IAM application.
     * Only one of the `name` and `application_id` should be specified.
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * The name of the IAM application.
     * Only one of the `name` and `application_id` should be specified.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the IAM application.
     * Only one of the `name` and `application_id` should be specified.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * `organization_id`) The ID of the
     * organization the application is associated with.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return `organization_id`) The ID of the
     * organization the application is associated with.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    private GetIamApplicationArgs() {}

    private GetIamApplicationArgs(GetIamApplicationArgs $) {
        this.applicationId = $.applicationId;
        this.name = $.name;
        this.organizationId = $.organizationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIamApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIamApplicationArgs $;

        public Builder() {
            $ = new GetIamApplicationArgs();
        }

        public Builder(GetIamApplicationArgs defaults) {
            $ = new GetIamApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId The ID of the IAM application.
         * Only one of the `name` and `application_id` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId The ID of the IAM application.
         * Only one of the `name` and `application_id` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param name The name of the IAM application.
         * Only one of the `name` and `application_id` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the IAM application.
         * Only one of the `name` and `application_id` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param organizationId `organization_id`) The ID of the
         * organization the application is associated with.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId `organization_id`) The ID of the
         * organization the application is associated with.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public GetIamApplicationArgs build() {
            return $;
        }
    }

}
