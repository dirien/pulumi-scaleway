// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcPublicGatewayDhcpReservationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcPublicGatewayDhcpReservationArgs Empty = new VpcPublicGatewayDhcpReservationArgs();

    /**
     * The ID of the owning GatewayNetwork.
     * 
     */
    @Import(name="gatewayNetworkId", required=true)
    private Output<String> gatewayNetworkId;

    /**
     * @return The ID of the owning GatewayNetwork.
     * 
     */
    public Output<String> gatewayNetworkId() {
        return this.gatewayNetworkId;
    }

    /**
     * The IP address to give to the machine (IP address).
     * 
     */
    @Import(name="ipAddress", required=true)
    private Output<String> ipAddress;

    /**
     * @return The IP address to give to the machine (IP address).
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }

    /**
     * The MAC address to give a static entry to.
     * 
     */
    @Import(name="macAddress", required=true)
    private Output<String> macAddress;

    /**
     * @return The MAC address to give a static entry to.
     * 
     */
    public Output<String> macAddress() {
        return this.macAddress;
    }

    /**
     * `zone`) The zone in which the public gateway DHCP config should be created.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return `zone`) The zone in which the public gateway DHCP config should be created.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private VpcPublicGatewayDhcpReservationArgs() {}

    private VpcPublicGatewayDhcpReservationArgs(VpcPublicGatewayDhcpReservationArgs $) {
        this.gatewayNetworkId = $.gatewayNetworkId;
        this.ipAddress = $.ipAddress;
        this.macAddress = $.macAddress;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcPublicGatewayDhcpReservationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcPublicGatewayDhcpReservationArgs $;

        public Builder() {
            $ = new VpcPublicGatewayDhcpReservationArgs();
        }

        public Builder(VpcPublicGatewayDhcpReservationArgs defaults) {
            $ = new VpcPublicGatewayDhcpReservationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gatewayNetworkId The ID of the owning GatewayNetwork.
         * 
         * @return builder
         * 
         */
        public Builder gatewayNetworkId(Output<String> gatewayNetworkId) {
            $.gatewayNetworkId = gatewayNetworkId;
            return this;
        }

        /**
         * @param gatewayNetworkId The ID of the owning GatewayNetwork.
         * 
         * @return builder
         * 
         */
        public Builder gatewayNetworkId(String gatewayNetworkId) {
            return gatewayNetworkId(Output.of(gatewayNetworkId));
        }

        /**
         * @param ipAddress The IP address to give to the machine (IP address).
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress The IP address to give to the machine (IP address).
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param macAddress The MAC address to give a static entry to.
         * 
         * @return builder
         * 
         */
        public Builder macAddress(Output<String> macAddress) {
            $.macAddress = macAddress;
            return this;
        }

        /**
         * @param macAddress The MAC address to give a static entry to.
         * 
         * @return builder
         * 
         */
        public Builder macAddress(String macAddress) {
            return macAddress(Output.of(macAddress));
        }

        /**
         * @param zone `zone`) The zone in which the public gateway DHCP config should be created.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone `zone`) The zone in which the public gateway DHCP config should be created.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public VpcPublicGatewayDhcpReservationArgs build() {
            $.gatewayNetworkId = Objects.requireNonNull($.gatewayNetworkId, "expected parameter 'gatewayNetworkId' to be non-null");
            $.ipAddress = Objects.requireNonNull($.ipAddress, "expected parameter 'ipAddress' to be non-null");
            $.macAddress = Objects.requireNonNull($.macAddress, "expected parameter 'macAddress' to be non-null");
            return $;
        }
    }

}
