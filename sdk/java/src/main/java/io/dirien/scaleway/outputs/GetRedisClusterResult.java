// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import io.dirien.scaleway.outputs.GetRedisClusterAcl;
import io.dirien.scaleway.outputs.GetRedisClusterPrivateNetwork;
import io.dirien.scaleway.outputs.GetRedisClusterPublicNetwork;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRedisClusterResult {
    private List<GetRedisClusterAcl> acls;
    private String certificate;
    private @Nullable String clusterId;
    private Integer clusterSize;
    private String createdAt;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String name;
    private String nodeType;
    private String password;
    private List<GetRedisClusterPrivateNetwork> privateNetworks;
    private String projectId;
    private List<GetRedisClusterPublicNetwork> publicNetworks;
    private Map<String,String> settings;
    private List<String> tags;
    private Boolean tlsEnabled;
    private String updatedAt;
    private String userName;
    private String version;
    private @Nullable String zone;

    private GetRedisClusterResult() {}
    public List<GetRedisClusterAcl> acls() {
        return this.acls;
    }
    public String certificate() {
        return this.certificate;
    }
    public Optional<String> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }
    public Integer clusterSize() {
        return this.clusterSize;
    }
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String nodeType() {
        return this.nodeType;
    }
    public String password() {
        return this.password;
    }
    public List<GetRedisClusterPrivateNetwork> privateNetworks() {
        return this.privateNetworks;
    }
    public String projectId() {
        return this.projectId;
    }
    public List<GetRedisClusterPublicNetwork> publicNetworks() {
        return this.publicNetworks;
    }
    public Map<String,String> settings() {
        return this.settings;
    }
    public List<String> tags() {
        return this.tags;
    }
    public Boolean tlsEnabled() {
        return this.tlsEnabled;
    }
    public String updatedAt() {
        return this.updatedAt;
    }
    public String userName() {
        return this.userName;
    }
    public String version() {
        return this.version;
    }
    public Optional<String> zone() {
        return Optional.ofNullable(this.zone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRedisClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetRedisClusterAcl> acls;
        private String certificate;
        private @Nullable String clusterId;
        private Integer clusterSize;
        private String createdAt;
        private String id;
        private @Nullable String name;
        private String nodeType;
        private String password;
        private List<GetRedisClusterPrivateNetwork> privateNetworks;
        private String projectId;
        private List<GetRedisClusterPublicNetwork> publicNetworks;
        private Map<String,String> settings;
        private List<String> tags;
        private Boolean tlsEnabled;
        private String updatedAt;
        private String userName;
        private String version;
        private @Nullable String zone;
        public Builder() {}
        public Builder(GetRedisClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acls = defaults.acls;
    	      this.certificate = defaults.certificate;
    	      this.clusterId = defaults.clusterId;
    	      this.clusterSize = defaults.clusterSize;
    	      this.createdAt = defaults.createdAt;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.nodeType = defaults.nodeType;
    	      this.password = defaults.password;
    	      this.privateNetworks = defaults.privateNetworks;
    	      this.projectId = defaults.projectId;
    	      this.publicNetworks = defaults.publicNetworks;
    	      this.settings = defaults.settings;
    	      this.tags = defaults.tags;
    	      this.tlsEnabled = defaults.tlsEnabled;
    	      this.updatedAt = defaults.updatedAt;
    	      this.userName = defaults.userName;
    	      this.version = defaults.version;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder acls(List<GetRedisClusterAcl> acls) {
            this.acls = Objects.requireNonNull(acls);
            return this;
        }
        public Builder acls(GetRedisClusterAcl... acls) {
            return acls(List.of(acls));
        }
        @CustomType.Setter
        public Builder certificate(String certificate) {
            this.certificate = Objects.requireNonNull(certificate);
            return this;
        }
        @CustomType.Setter
        public Builder clusterId(@Nullable String clusterId) {
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterSize(Integer clusterSize) {
            this.clusterSize = Objects.requireNonNull(clusterSize);
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nodeType(String nodeType) {
            this.nodeType = Objects.requireNonNull(nodeType);
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        @CustomType.Setter
        public Builder privateNetworks(List<GetRedisClusterPrivateNetwork> privateNetworks) {
            this.privateNetworks = Objects.requireNonNull(privateNetworks);
            return this;
        }
        public Builder privateNetworks(GetRedisClusterPrivateNetwork... privateNetworks) {
            return privateNetworks(List.of(privateNetworks));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder publicNetworks(List<GetRedisClusterPublicNetwork> publicNetworks) {
            this.publicNetworks = Objects.requireNonNull(publicNetworks);
            return this;
        }
        public Builder publicNetworks(GetRedisClusterPublicNetwork... publicNetworks) {
            return publicNetworks(List.of(publicNetworks));
        }
        @CustomType.Setter
        public Builder settings(Map<String,String> settings) {
            this.settings = Objects.requireNonNull(settings);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tlsEnabled(Boolean tlsEnabled) {
            this.tlsEnabled = Objects.requireNonNull(tlsEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt);
            return this;
        }
        @CustomType.Setter
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        @CustomType.Setter
        public Builder zone(@Nullable String zone) {
            this.zone = zone;
            return this;
        }
        public GetRedisClusterResult build() {
            final var o = new GetRedisClusterResult();
            o.acls = acls;
            o.certificate = certificate;
            o.clusterId = clusterId;
            o.clusterSize = clusterSize;
            o.createdAt = createdAt;
            o.id = id;
            o.name = name;
            o.nodeType = nodeType;
            o.password = password;
            o.privateNetworks = privateNetworks;
            o.projectId = projectId;
            o.publicNetworks = publicNetworks;
            o.settings = settings;
            o.tags = tags;
            o.tlsEnabled = tlsEnabled;
            o.updatedAt = updatedAt;
            o.userName = userName;
            o.version = version;
            o.zone = zone;
            return o;
        }
    }
}
