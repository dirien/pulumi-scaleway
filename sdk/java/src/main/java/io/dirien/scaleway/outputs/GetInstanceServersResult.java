// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import io.dirien.scaleway.outputs.GetInstanceServersServer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstanceServersResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the server.
     * 
     */
    private @Nullable String name;
    /**
     * @return The organization ID the server is associated with.
     * 
     */
    private String organizationId;
    /**
     * @return The ID of the project the server is associated with.
     * 
     */
    private String projectId;
    /**
     * @return List of found servers
     * 
     */
    private List<GetInstanceServersServer> servers;
    /**
     * @return The tags associated with the server.
     * 
     */
    private @Nullable List<String> tags;
    /**
     * @return The zone in which the server is.
     * 
     */
    private String zone;

    private GetInstanceServersResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the server.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The organization ID the server is associated with.
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }
    /**
     * @return The ID of the project the server is associated with.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return List of found servers
     * 
     */
    public List<GetInstanceServersServer> servers() {
        return this.servers;
    }
    /**
     * @return The tags associated with the server.
     * 
     */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return The zone in which the server is.
     * 
     */
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceServersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String name;
        private String organizationId;
        private String projectId;
        private List<GetInstanceServersServer> servers;
        private @Nullable List<String> tags;
        private String zone;
        public Builder() {}
        public Builder(GetInstanceServersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.organizationId = defaults.organizationId;
    	      this.projectId = defaults.projectId;
    	      this.servers = defaults.servers;
    	      this.tags = defaults.tags;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder servers(List<GetInstanceServersServer> servers) {
            this.servers = Objects.requireNonNull(servers);
            return this;
        }
        public Builder servers(GetInstanceServersServer... servers) {
            return servers(List.of(servers));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }
        public GetInstanceServersResult build() {
            final var o = new GetInstanceServersResult();
            o.id = id;
            o.name = name;
            o.organizationId = organizationId;
            o.projectId = projectId;
            o.servers = servers;
            o.tags = tags;
            o.zone = zone;
            return o;
        }
    }
}
