// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.scaleway.InstanceSecurityGroupRulesArgs;
import io.dirien.scaleway.Utilities;
import io.dirien.scaleway.inputs.InstanceSecurityGroupRulesState;
import io.dirien.scaleway.outputs.InstanceSecurityGroupRulesInboundRule;
import io.dirien.scaleway.outputs.InstanceSecurityGroupRulesOutboundRule;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates and manages Scaleway Compute Instance security group rules. For more information, see [the documentation](https://developers.scaleway.com/en/products/instance/api/#security-groups-8d7f89).
 * 
 * This resource can be used to externalize rules from a `scaleway.InstanceSecurityGroup` to solve circular dependency problems. When using this resource do not forget to set `external_rules = true` on the security group.
 * 
 * &gt; **Warning:** In order to guaranty rules order in a given security group only one scaleway.InstanceSecurityGroupRules is allowed per security group.
 * 
 * ## Examples
 * 
 * ### Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.InstanceSecurityGroup;
 * import com.pulumi.scaleway.InstanceSecurityGroupArgs;
 * import com.pulumi.scaleway.InstanceSecurityGroupRules;
 * import com.pulumi.scaleway.InstanceSecurityGroupRulesArgs;
 * import com.pulumi.scaleway.inputs.InstanceSecurityGroupRulesInboundRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var sg01 = new InstanceSecurityGroup(&#34;sg01&#34;, InstanceSecurityGroupArgs.builder()        
 *             .externalRules(true)
 *             .build());
 * 
 *         var sgrs01 = new InstanceSecurityGroupRules(&#34;sgrs01&#34;, InstanceSecurityGroupRulesArgs.builder()        
 *             .securityGroupId(sg01.id())
 *             .inboundRules(InstanceSecurityGroupRulesInboundRuleArgs.builder()
 *                 .action(&#34;accept&#34;)
 *                 .port(80)
 *                 .ipRange(&#34;0.0.0.0/0&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ### Simplify your rules using dynamic block and `for_each` loop
 * 
 * You can use `for_each` syntax to simplify the definition of your rules.
 * Let&#39;s suppose that your inbound default policy is to drop, but you want to build a list of exceptions to accept.
 * Create a local containing your exceptions (`locals.trusted`) and use the `for_each` syntax in a dynamic block:
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.InstanceSecurityGroup;
 * import com.pulumi.scaleway.InstanceSecurityGroupArgs;
 * import com.pulumi.scaleway.InstanceSecurityGroupRules;
 * import com.pulumi.scaleway.InstanceSecurityGroupRulesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var mainInstanceSecurityGroup = new InstanceSecurityGroup(&#34;mainInstanceSecurityGroup&#34;, InstanceSecurityGroupArgs.builder()        
 *             .description(&#34;test&#34;)
 *             .inboundDefaultPolicy(&#34;drop&#34;)
 *             .outboundDefaultPolicy(&#34;accept&#34;)
 *             .build());
 * 
 *         final var trusted =         
 *             &#34;1.2.3.4&#34;,
 *             &#34;4.5.6.7&#34;,
 *             &#34;7.8.9.10&#34;;
 * 
 *         var mainInstanceSecurityGroupRules = new InstanceSecurityGroupRules(&#34;mainInstanceSecurityGroupRules&#34;, InstanceSecurityGroupRulesArgs.builder()        
 *             .securityGroupId(mainInstanceSecurityGroup.id())
 *             .dynamic(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * You can also use object to assign IP and port in the same time.
 * In your locals, you can use objects to encapsulate several values that will be used later on in the loop:
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.InstanceSecurityGroup;
 * import com.pulumi.scaleway.InstanceSecurityGroupArgs;
 * import com.pulumi.scaleway.InstanceSecurityGroupRules;
 * import com.pulumi.scaleway.InstanceSecurityGroupRulesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var mainInstanceSecurityGroup = new InstanceSecurityGroup(&#34;mainInstanceSecurityGroup&#34;, InstanceSecurityGroupArgs.builder()        
 *             .description(&#34;test&#34;)
 *             .inboundDefaultPolicy(&#34;drop&#34;)
 *             .outboundDefaultPolicy(&#34;accept&#34;)
 *             .build());
 * 
 *         final var trusted =         
 *             Map.ofEntries(
 *                 Map.entry(&#34;ip&#34;, &#34;1.2.3.4&#34;),
 *                 Map.entry(&#34;port&#34;, &#34;80&#34;)
 *             ),
 *             Map.ofEntries(
 *                 Map.entry(&#34;ip&#34;, &#34;5.6.7.8&#34;),
 *                 Map.entry(&#34;port&#34;, &#34;81&#34;)
 *             ),
 *             Map.ofEntries(
 *                 Map.entry(&#34;ip&#34;, &#34;9.10.11.12&#34;),
 *                 Map.entry(&#34;port&#34;, &#34;81&#34;)
 *             );
 * 
 *         var mainInstanceSecurityGroupRules = new InstanceSecurityGroupRules(&#34;mainInstanceSecurityGroupRules&#34;, InstanceSecurityGroupRulesArgs.builder()        
 *             .securityGroupId(mainInstanceSecurityGroup.id())
 *             .dynamic(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Instance security group rules can be imported using the `{zone}/{id}`, e.g. bash
 * 
 * ```sh
 *  $ pulumi import scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules web fr-par-1/11111111-1111-1111-1111-111111111111
 * ```
 * 
 */
@ResourceType(type="scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules")
public class InstanceSecurityGroupRules extends com.pulumi.resources.CustomResource {
    /**
     * A list of inbound rule to add to the security group. (Structure is documented below.)
     * 
     */
    @Export(name="inboundRules", refs={List.class,InstanceSecurityGroupRulesInboundRule.class}, tree="[0,1]")
    private Output</* @Nullable */ List<InstanceSecurityGroupRulesInboundRule>> inboundRules;

    /**
     * @return A list of inbound rule to add to the security group. (Structure is documented below.)
     * 
     */
    public Output<Optional<List<InstanceSecurityGroupRulesInboundRule>>> inboundRules() {
        return Codegen.optional(this.inboundRules);
    }
    /**
     * A list of outbound rule to add to the security group. (Structure is documented below.)
     * 
     */
    @Export(name="outboundRules", refs={List.class,InstanceSecurityGroupRulesOutboundRule.class}, tree="[0,1]")
    private Output</* @Nullable */ List<InstanceSecurityGroupRulesOutboundRule>> outboundRules;

    /**
     * @return A list of outbound rule to add to the security group. (Structure is documented below.)
     * 
     */
    public Output<Optional<List<InstanceSecurityGroupRulesOutboundRule>>> outboundRules() {
        return Codegen.optional(this.outboundRules);
    }
    /**
     * The ID of the security group.
     * 
     */
    @Export(name="securityGroupId", refs={String.class}, tree="[0]")
    private Output<String> securityGroupId;

    /**
     * @return The ID of the security group.
     * 
     */
    public Output<String> securityGroupId() {
        return this.securityGroupId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstanceSecurityGroupRules(String name) {
        this(name, InstanceSecurityGroupRulesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstanceSecurityGroupRules(String name, InstanceSecurityGroupRulesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstanceSecurityGroupRules(String name, InstanceSecurityGroupRulesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules", name, args == null ? InstanceSecurityGroupRulesArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private InstanceSecurityGroupRules(String name, Output<String> id, @Nullable InstanceSecurityGroupRulesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstanceSecurityGroupRules get(String name, Output<String> id, @Nullable InstanceSecurityGroupRulesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InstanceSecurityGroupRules(name, id, state, options);
    }
}
