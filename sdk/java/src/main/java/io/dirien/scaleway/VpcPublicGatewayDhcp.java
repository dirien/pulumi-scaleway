// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.scaleway.Utilities;
import io.dirien.scaleway.VpcPublicGatewayDhcpArgs;
import io.dirien.scaleway.inputs.VpcPublicGatewayDhcpState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Creates and manages Scaleway VPC Public Gateway DHCP.
 * For more information, see [the documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#dhcp-c05544).
 * 
 * ## Example
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.VpcPublicGatewayDhcp;
 * import com.pulumi.scaleway.VpcPublicGatewayDhcpArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var main = new VpcPublicGatewayDhcp(&#34;main&#34;, VpcPublicGatewayDhcpArgs.builder()        
 *             .subnet(&#34;192.168.1.0/24&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Public gateway DHCP config can be imported using the `{zone}/{id}`, e.g. bash
 * 
 * ```sh
 *  $ pulumi import scaleway:index/vpcPublicGatewayDhcp:VpcPublicGatewayDhcp main fr-par-1/11111111-1111-1111-1111-111111111111
 * ```
 * 
 */
@ResourceType(type="scaleway:index/vpcPublicGatewayDhcp:VpcPublicGatewayDhcp")
public class VpcPublicGatewayDhcp extends com.pulumi.resources.CustomResource {
    /**
     * The IP address of the public gateway DHCP config.
     * 
     */
    @Export(name="address", refs={String.class}, tree="[0]")
    private Output<String> address;

    /**
     * @return The IP address of the public gateway DHCP config.
     * 
     */
    public Output<String> address() {
        return this.address;
    }
    /**
     * The date and time of the creation of the public gateway DHCP config.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The date and time of the creation of the public gateway DHCP config.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private Network name if created along a GatewayNetwork, or else to `priv`.
     * 
     */
    @Export(name="dnsLocalName", refs={String.class}, tree="[0]")
    private Output<String> dnsLocalName;

    /**
     * @return TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private Network name if created along a GatewayNetwork, or else to `priv`.
     * 
     */
    public Output<String> dnsLocalName() {
        return this.dnsLocalName;
    }
    /**
     * Additional DNS search paths
     * 
     */
    @Export(name="dnsSearches", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> dnsSearches;

    /**
     * @return Additional DNS search paths
     * 
     */
    public Output<List<String>> dnsSearches() {
        return this.dnsSearches;
    }
    /**
     * Override the DNS server list pushed to DHCP clients, instead of the gateway itself
     * 
     */
    @Export(name="dnsServersOverrides", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> dnsServersOverrides;

    /**
     * @return Override the DNS server list pushed to DHCP clients, instead of the gateway itself
     * 
     */
    public Output<List<String>> dnsServersOverrides() {
        return this.dnsServersOverrides;
    }
    /**
     * Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be handed out. Defaults to `true`.
     * 
     */
    @Export(name="enableDynamic", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enableDynamic;

    /**
     * @return Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be handed out. Defaults to `true`.
     * 
     */
    public Output<Boolean> enableDynamic() {
        return this.enableDynamic;
    }
    /**
     * The organization ID the public gateway DHCP config is associated with.
     * 
     */
    @Export(name="organizationId", refs={String.class}, tree="[0]")
    private Output<String> organizationId;

    /**
     * @return The organization ID the public gateway DHCP config is associated with.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }
    /**
     * High IP (excluded) of the dynamic address pool. Defaults to the last address of the subnet.
     * 
     */
    @Export(name="poolHigh", refs={String.class}, tree="[0]")
    private Output<String> poolHigh;

    /**
     * @return High IP (excluded) of the dynamic address pool. Defaults to the last address of the subnet.
     * 
     */
    public Output<String> poolHigh() {
        return this.poolHigh;
    }
    /**
     * Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet.
     * 
     */
    @Export(name="poolLow", refs={String.class}, tree="[0]")
    private Output<String> poolLow;

    /**
     * @return Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet.
     * 
     */
    public Output<String> poolLow() {
        return this.poolLow;
    }
    /**
     * `project_id`) The ID of the project the public gateway DHCP config is associated with.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return `project_id`) The ID of the project the public gateway DHCP config is associated with.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to `true`.
     * 
     */
    @Export(name="pushDefaultRoute", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> pushDefaultRoute;

    /**
     * @return Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to `true`.
     * 
     */
    public Output<Boolean> pushDefaultRoute() {
        return this.pushDefaultRoute;
    }
    /**
     * Whether the gateway should push custom DNS servers to clients. This allows for instance hostname &gt; IP resolution. Defaults to `true`.
     * 
     */
    @Export(name="pushDnsServer", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> pushDnsServer;

    /**
     * @return Whether the gateway should push custom DNS servers to clients. This allows for instance hostname &gt; IP resolution. Defaults to `true`.
     * 
     */
    public Output<Boolean> pushDnsServer() {
        return this.pushDnsServer;
    }
    /**
     * After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than `valid_lifetime`. Defaults to 51m (3060s).
     * 
     */
    @Export(name="rebindTimer", refs={Integer.class}, tree="[0]")
    private Output<Integer> rebindTimer;

    /**
     * @return After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than `valid_lifetime`. Defaults to 51m (3060s).
     * 
     */
    public Output<Integer> rebindTimer() {
        return this.rebindTimer;
    }
    /**
     * After how long, in seconds, a renewal will be attempted. Must be 30s lower than `rebind_timer`. Defaults to 50m (3000s).
     * 
     */
    @Export(name="renewTimer", refs={Integer.class}, tree="[0]")
    private Output<Integer> renewTimer;

    /**
     * @return After how long, in seconds, a renewal will be attempted. Must be 30s lower than `rebind_timer`. Defaults to 50m (3000s).
     * 
     */
    public Output<Integer> renewTimer() {
        return this.renewTimer;
    }
    /**
     * The subnet to associate with the public gateway DHCP config.
     * 
     */
    @Export(name="subnet", refs={String.class}, tree="[0]")
    private Output<String> subnet;

    /**
     * @return The subnet to associate with the public gateway DHCP config.
     * 
     */
    public Output<String> subnet() {
        return this.subnet;
    }
    /**
     * The date and time of the last update of the public gateway DHCP config.
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return The date and time of the last update of the public gateway DHCP config.
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }
    /**
     * For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s).
     * 
     */
    @Export(name="validLifetime", refs={Integer.class}, tree="[0]")
    private Output<Integer> validLifetime;

    /**
     * @return For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s).
     * 
     */
    public Output<Integer> validLifetime() {
        return this.validLifetime;
    }
    /**
     * `zone`) The zone in which the public gateway DHCP config should be created.
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return `zone`) The zone in which the public gateway DHCP config should be created.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VpcPublicGatewayDhcp(String name) {
        this(name, VpcPublicGatewayDhcpArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VpcPublicGatewayDhcp(String name, VpcPublicGatewayDhcpArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VpcPublicGatewayDhcp(String name, VpcPublicGatewayDhcpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/vpcPublicGatewayDhcp:VpcPublicGatewayDhcp", name, args == null ? VpcPublicGatewayDhcpArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VpcPublicGatewayDhcp(String name, Output<String> id, @Nullable VpcPublicGatewayDhcpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/vpcPublicGatewayDhcp:VpcPublicGatewayDhcp", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VpcPublicGatewayDhcp get(String name, Output<String> id, @Nullable VpcPublicGatewayDhcpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VpcPublicGatewayDhcp(name, id, state, options);
    }
}
