// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceServerPrivateNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceServerPrivateNetworkArgs Empty = new InstanceServerPrivateNetworkArgs();

    @Import(name="macAddress")
    private @Nullable Output<String> macAddress;

    public Optional<Output<String>> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }

    @Import(name="pnId", required=true)
    private Output<String> pnId;

    public Output<String> pnId() {
        return this.pnId;
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * `zone`) The zone in which the server should be created.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return `zone`) The zone in which the server should be created.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private InstanceServerPrivateNetworkArgs() {}

    private InstanceServerPrivateNetworkArgs(InstanceServerPrivateNetworkArgs $) {
        this.macAddress = $.macAddress;
        this.pnId = $.pnId;
        this.status = $.status;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceServerPrivateNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceServerPrivateNetworkArgs $;

        public Builder() {
            $ = new InstanceServerPrivateNetworkArgs();
        }

        public Builder(InstanceServerPrivateNetworkArgs defaults) {
            $ = new InstanceServerPrivateNetworkArgs(Objects.requireNonNull(defaults));
        }

        public Builder macAddress(@Nullable Output<String> macAddress) {
            $.macAddress = macAddress;
            return this;
        }

        public Builder macAddress(String macAddress) {
            return macAddress(Output.of(macAddress));
        }

        public Builder pnId(Output<String> pnId) {
            $.pnId = pnId;
            return this;
        }

        public Builder pnId(String pnId) {
            return pnId(Output.of(pnId));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param zone `zone`) The zone in which the server should be created.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone `zone`) The zone in which the server should be created.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public InstanceServerPrivateNetworkArgs build() {
            $.pnId = Objects.requireNonNull($.pnId, "expected parameter 'pnId' to be non-null");
            return $;
        }
    }

}
