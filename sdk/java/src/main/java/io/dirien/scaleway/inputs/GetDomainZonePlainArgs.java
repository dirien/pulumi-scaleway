// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDomainZonePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDomainZonePlainArgs Empty = new GetDomainZonePlainArgs();

    /**
     * The domain where the DNS zone will be created.
     * 
     */
    @Import(name="domain")
    private @Nullable String domain;

    /**
     * @return The domain where the DNS zone will be created.
     * 
     */
    public Optional<String> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * The subdomain(zone name) to create in the domain.
     * 
     */
    @Import(name="subdomain")
    private @Nullable String subdomain;

    /**
     * @return The subdomain(zone name) to create in the domain.
     * 
     */
    public Optional<String> subdomain() {
        return Optional.ofNullable(this.subdomain);
    }

    private GetDomainZonePlainArgs() {}

    private GetDomainZonePlainArgs(GetDomainZonePlainArgs $) {
        this.domain = $.domain;
        this.subdomain = $.subdomain;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDomainZonePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDomainZonePlainArgs $;

        public Builder() {
            $ = new GetDomainZonePlainArgs();
        }

        public Builder(GetDomainZonePlainArgs defaults) {
            $ = new GetDomainZonePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain The domain where the DNS zone will be created.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable String domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param subdomain The subdomain(zone name) to create in the domain.
         * 
         * @return builder
         * 
         */
        public Builder subdomain(@Nullable String subdomain) {
            $.subdomain = subdomain;
            return this;
        }

        public GetDomainZonePlainArgs build() {
            return $;
        }
    }

}
