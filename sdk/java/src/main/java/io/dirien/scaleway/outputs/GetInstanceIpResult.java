// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstanceIpResult {
    /**
     * @return The IP address.
     * 
     */
    private @Nullable String address;
    /**
     * @return The ID of the IP.
     * 
     */
    private @Nullable String id;
    /**
     * @return The organization ID the IP is associated with.
     * 
     */
    private String organizationId;
    private String projectId;
    /**
     * @return The reverse dns attached to this IP
     * 
     */
    private String reverse;
    private String serverId;
    private List<String> tags;
    private String zone;

    private GetInstanceIpResult() {}
    /**
     * @return The IP address.
     * 
     */
    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }
    /**
     * @return The ID of the IP.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The organization ID the IP is associated with.
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The reverse dns attached to this IP
     * 
     */
    public String reverse() {
        return this.reverse;
    }
    public String serverId() {
        return this.serverId;
    }
    public List<String> tags() {
        return this.tags;
    }
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceIpResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String address;
        private @Nullable String id;
        private String organizationId;
        private String projectId;
        private String reverse;
        private String serverId;
        private List<String> tags;
        private String zone;
        public Builder() {}
        public Builder(GetInstanceIpResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.id = defaults.id;
    	      this.organizationId = defaults.organizationId;
    	      this.projectId = defaults.projectId;
    	      this.reverse = defaults.reverse;
    	      this.serverId = defaults.serverId;
    	      this.tags = defaults.tags;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder address(@Nullable String address) {
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder reverse(String reverse) {
            this.reverse = Objects.requireNonNull(reverse);
            return this;
        }
        @CustomType.Setter
        public Builder serverId(String serverId) {
            this.serverId = Objects.requireNonNull(serverId);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }
        public GetInstanceIpResult build() {
            final var o = new GetInstanceIpResult();
            o.address = address;
            o.id = id;
            o.organizationId = organizationId;
            o.projectId = projectId;
            o.reverse = reverse;
            o.serverId = serverId;
            o.tags = tags;
            o.zone = zone;
            return o;
        }
    }
}
