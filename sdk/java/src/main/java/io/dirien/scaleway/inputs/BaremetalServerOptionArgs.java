// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BaremetalServerOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final BaremetalServerOptionArgs Empty = new BaremetalServerOptionArgs();

    /**
     * The auto expiration date for compatible options
     * 
     */
    @Import(name="expiresAt")
    private @Nullable Output<String> expiresAt;

    /**
     * @return The auto expiration date for compatible options
     * 
     */
    public Optional<Output<String>> expiresAt() {
        return Optional.ofNullable(this.expiresAt);
    }

    /**
     * The id of the private network to attach.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The id of the private network to attach.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * The name of the server.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the server.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private BaremetalServerOptionArgs() {}

    private BaremetalServerOptionArgs(BaremetalServerOptionArgs $) {
        this.expiresAt = $.expiresAt;
        this.id = $.id;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BaremetalServerOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BaremetalServerOptionArgs $;

        public Builder() {
            $ = new BaremetalServerOptionArgs();
        }

        public Builder(BaremetalServerOptionArgs defaults) {
            $ = new BaremetalServerOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expiresAt The auto expiration date for compatible options
         * 
         * @return builder
         * 
         */
        public Builder expiresAt(@Nullable Output<String> expiresAt) {
            $.expiresAt = expiresAt;
            return this;
        }

        /**
         * @param expiresAt The auto expiration date for compatible options
         * 
         * @return builder
         * 
         */
        public Builder expiresAt(String expiresAt) {
            return expiresAt(Output.of(expiresAt));
        }

        /**
         * @param id The id of the private network to attach.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The id of the private network to attach.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name The name of the server.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the server.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public BaremetalServerOptionArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
