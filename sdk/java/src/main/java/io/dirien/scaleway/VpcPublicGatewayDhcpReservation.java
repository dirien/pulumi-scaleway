// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.scaleway.Utilities;
import io.dirien.scaleway.VpcPublicGatewayDhcpReservationArgs;
import io.dirien.scaleway.inputs.VpcPublicGatewayDhcpReservationState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Creates and manages the [Scaleway DHCP Reservations](https://www.scaleway.com/en/docs/network/vpc/concepts/#dhcp).
 * 
 * The static associations are used to assign IP addresses based on the MAC addresses of the Instance.
 * 
 * Statically assigned IP addresses should fall within the configured subnet, but be outside of the dynamic range.
 * 
 * For more information, see [the documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#dhcp-c05544) and [configuration guide](https://www.scaleway.com/en/docs/network/vpc/how-to/configure-a-public-gateway/#how-to-review-and-configure-dhcp).
 * 
 * [DHCP reservations](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#dhcp-entries-e40fb6) hold both dynamic DHCP leases (IP addresses dynamically assigned by the gateway to instances) and static user-created DHCP reservations.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.VpcPrivateNetwork;
 * import com.pulumi.scaleway.InstanceServer;
 * import com.pulumi.scaleway.InstanceServerArgs;
 * import com.pulumi.scaleway.inputs.InstanceServerPrivateNetworkArgs;
 * import com.pulumi.scaleway.VpcPublicGatewayIp;
 * import com.pulumi.scaleway.VpcPublicGatewayDhcp;
 * import com.pulumi.scaleway.VpcPublicGatewayDhcpArgs;
 * import com.pulumi.scaleway.VpcPublicGateway;
 * import com.pulumi.scaleway.VpcPublicGatewayArgs;
 * import com.pulumi.scaleway.VpcGatewayNetwork;
 * import com.pulumi.scaleway.VpcGatewayNetworkArgs;
 * import com.pulumi.scaleway.VpcPublicGatewayDhcpReservation;
 * import com.pulumi.scaleway.VpcPublicGatewayDhcpReservationArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var mainVpcPrivateNetwork = new VpcPrivateNetwork(&#34;mainVpcPrivateNetwork&#34;);
 * 
 *         var mainInstanceServer = new InstanceServer(&#34;mainInstanceServer&#34;, InstanceServerArgs.builder()        
 *             .image(&#34;ubuntu_jammy&#34;)
 *             .type(&#34;DEV1-S&#34;)
 *             .zone(&#34;fr-par-1&#34;)
 *             .privateNetworks(InstanceServerPrivateNetworkArgs.builder()
 *                 .pnId(mainVpcPrivateNetwork.id())
 *                 .build())
 *             .build());
 * 
 *         var mainVpcPublicGatewayIp = new VpcPublicGatewayIp(&#34;mainVpcPublicGatewayIp&#34;);
 * 
 *         var mainVpcPublicGatewayDhcp = new VpcPublicGatewayDhcp(&#34;mainVpcPublicGatewayDhcp&#34;, VpcPublicGatewayDhcpArgs.builder()        
 *             .subnet(&#34;192.168.1.0/24&#34;)
 *             .build());
 * 
 *         var mainVpcPublicGateway = new VpcPublicGateway(&#34;mainVpcPublicGateway&#34;, VpcPublicGatewayArgs.builder()        
 *             .type(&#34;VPC-GW-S&#34;)
 *             .ipId(mainVpcPublicGatewayIp.id())
 *             .build());
 * 
 *         var mainVpcGatewayNetwork = new VpcGatewayNetwork(&#34;mainVpcGatewayNetwork&#34;, VpcGatewayNetworkArgs.builder()        
 *             .gatewayId(mainVpcPublicGateway.id())
 *             .privateNetworkId(mainVpcPrivateNetwork.id())
 *             .dhcpId(mainVpcPublicGatewayDhcp.id())
 *             .cleanupDhcp(true)
 *             .enableMasquerade(true)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     mainVpcPublicGatewayIp,
 *                     mainVpcPrivateNetwork)
 *                 .build());
 * 
 *         var mainVpcPublicGatewayDhcpReservation = new VpcPublicGatewayDhcpReservation(&#34;mainVpcPublicGatewayDhcpReservation&#34;, VpcPublicGatewayDhcpReservationArgs.builder()        
 *             .gatewayNetworkId(mainVpcGatewayNetwork.id())
 *             .macAddress(mainInstanceServer.privateNetworks().applyValue(privateNetworks -&gt; privateNetworks[0].macAddress()))
 *             .ipAddress(&#34;192.168.1.1&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Public gateway DHCP Reservation config can be imported using the `{zone}/{id}`, e.g. bash
 * 
 * ```sh
 *  $ pulumi import scaleway:index/vpcPublicGatewayDhcpReservation:VpcPublicGatewayDhcpReservation main fr-par-1/11111111-1111-1111-1111-111111111111
 * ```
 * 
 */
@ResourceType(type="scaleway:index/vpcPublicGatewayDhcpReservation:VpcPublicGatewayDhcpReservation")
public class VpcPublicGatewayDhcpReservation extends com.pulumi.resources.CustomResource {
    /**
     * The date and time of the creation of the public gateway DHCP config.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The date and time of the creation of the public gateway DHCP config.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * The ID of the owning GatewayNetwork.
     * 
     */
    @Export(name="gatewayNetworkId", refs={String.class}, tree="[0]")
    private Output<String> gatewayNetworkId;

    /**
     * @return The ID of the owning GatewayNetwork.
     * 
     */
    public Output<String> gatewayNetworkId() {
        return this.gatewayNetworkId;
    }
    /**
     * The Hostname of the client machine.
     * 
     */
    @Export(name="hostname", refs={String.class}, tree="[0]")
    private Output<String> hostname;

    /**
     * @return The Hostname of the client machine.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }
    /**
     * The IP address to give to the machine (IP address).
     * 
     */
    @Export(name="ipAddress", refs={String.class}, tree="[0]")
    private Output<String> ipAddress;

    /**
     * @return The IP address to give to the machine (IP address).
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }
    /**
     * The MAC address to give a static entry to.
     * 
     */
    @Export(name="macAddress", refs={String.class}, tree="[0]")
    private Output<String> macAddress;

    /**
     * @return The MAC address to give a static entry to.
     * 
     */
    public Output<String> macAddress() {
        return this.macAddress;
    }
    /**
     * The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are reservation and lease.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are reservation and lease.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The date and time of the last update of the public gateway DHCP config.
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return The date and time of the last update of the public gateway DHCP config.
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }
    /**
     * `zone`) The zone in which the public gateway DHCP config should be created.
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return `zone`) The zone in which the public gateway DHCP config should be created.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VpcPublicGatewayDhcpReservation(String name) {
        this(name, VpcPublicGatewayDhcpReservationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VpcPublicGatewayDhcpReservation(String name, VpcPublicGatewayDhcpReservationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VpcPublicGatewayDhcpReservation(String name, VpcPublicGatewayDhcpReservationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/vpcPublicGatewayDhcpReservation:VpcPublicGatewayDhcpReservation", name, args == null ? VpcPublicGatewayDhcpReservationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VpcPublicGatewayDhcpReservation(String name, Output<String> id, @Nullable VpcPublicGatewayDhcpReservationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/vpcPublicGatewayDhcpReservation:VpcPublicGatewayDhcpReservation", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VpcPublicGatewayDhcpReservation get(String name, Output<String> id, @Nullable VpcPublicGatewayDhcpReservationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VpcPublicGatewayDhcpReservation(name, id, state, options);
    }
}
