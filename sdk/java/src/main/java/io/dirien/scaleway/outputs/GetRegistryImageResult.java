// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRegistryImageResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String imageId;
    private @Nullable String name;
    private String namespaceId;
    /**
     * @return The organization ID the image is associated with.
     * 
     */
    private String organizationId;
    private String projectId;
    private String region;
    /**
     * @return The size of the registry image.
     * 
     */
    private Integer size;
    /**
     * @return The tags associated with the registry image
     * 
     */
    private List<String> tags;
    /**
     * @return The privacy policy of the registry image.
     * 
     */
    private String visibility;

    private GetRegistryImageResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> imageId() {
        return Optional.ofNullable(this.imageId);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String namespaceId() {
        return this.namespaceId;
    }
    /**
     * @return The organization ID the image is associated with.
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }
    public String projectId() {
        return this.projectId;
    }
    public String region() {
        return this.region;
    }
    /**
     * @return The size of the registry image.
     * 
     */
    public Integer size() {
        return this.size;
    }
    /**
     * @return The tags associated with the registry image
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return The privacy policy of the registry image.
     * 
     */
    public String visibility() {
        return this.visibility;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegistryImageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String imageId;
        private @Nullable String name;
        private String namespaceId;
        private String organizationId;
        private String projectId;
        private String region;
        private Integer size;
        private List<String> tags;
        private String visibility;
        public Builder() {}
        public Builder(GetRegistryImageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.name = defaults.name;
    	      this.namespaceId = defaults.namespaceId;
    	      this.organizationId = defaults.organizationId;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.size = defaults.size;
    	      this.tags = defaults.tags;
    	      this.visibility = defaults.visibility;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder imageId(@Nullable String imageId) {
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespaceId(String namespaceId) {
            this.namespaceId = Objects.requireNonNull(namespaceId);
            return this;
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder visibility(String visibility) {
            this.visibility = Objects.requireNonNull(visibility);
            return this;
        }
        public GetRegistryImageResult build() {
            final var o = new GetRegistryImageResult();
            o.id = id;
            o.imageId = imageId;
            o.name = name;
            o.namespaceId = namespaceId;
            o.organizationId = organizationId;
            o.projectId = projectId;
            o.region = region;
            o.size = size;
            o.tags = tags;
            o.visibility = visibility;
            return o;
        }
    }
}
