// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMarketplaceImageArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMarketplaceImageArgs Empty = new GetMarketplaceImageArgs();

    /**
     * The instance type the image is compatible with.
     * You find all the available types on the [pricing page](https://www.scaleway.com/en/pricing/).
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return The instance type the image is compatible with.
     * You find all the available types on the [pricing page](https://www.scaleway.com/en/pricing/).
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * Exact label of the desired image. You can use [this endpoint](https://api-marketplace.scaleway.com/images?page=1&amp;per_page=100)
     * to find the right `label`.
     * 
     */
    @Import(name="label", required=true)
    private Output<String> label;

    /**
     * @return Exact label of the desired image. You can use [this endpoint](https://api-marketplace.scaleway.com/images?page=1&amp;per_page=100)
     * to find the right `label`.
     * 
     */
    public Output<String> label() {
        return this.label;
    }

    /**
     * `zone`) The zone in which the image exists.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return `zone`) The zone in which the image exists.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private GetMarketplaceImageArgs() {}

    private GetMarketplaceImageArgs(GetMarketplaceImageArgs $) {
        this.instanceType = $.instanceType;
        this.label = $.label;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMarketplaceImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMarketplaceImageArgs $;

        public Builder() {
            $ = new GetMarketplaceImageArgs();
        }

        public Builder(GetMarketplaceImageArgs defaults) {
            $ = new GetMarketplaceImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceType The instance type the image is compatible with.
         * You find all the available types on the [pricing page](https://www.scaleway.com/en/pricing/).
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType The instance type the image is compatible with.
         * You find all the available types on the [pricing page](https://www.scaleway.com/en/pricing/).
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param label Exact label of the desired image. You can use [this endpoint](https://api-marketplace.scaleway.com/images?page=1&amp;per_page=100)
         * to find the right `label`.
         * 
         * @return builder
         * 
         */
        public Builder label(Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label Exact label of the desired image. You can use [this endpoint](https://api-marketplace.scaleway.com/images?page=1&amp;per_page=100)
         * to find the right `label`.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param zone `zone`) The zone in which the image exists.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone `zone`) The zone in which the image exists.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public GetMarketplaceImageArgs build() {
            $.label = Objects.requireNonNull($.label, "expected parameter 'label' to be non-null");
            return $;
        }
    }

}
