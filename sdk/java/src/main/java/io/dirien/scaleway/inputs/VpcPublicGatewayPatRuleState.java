// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcPublicGatewayPatRuleState extends com.pulumi.resources.ResourceArgs {

    public static final VpcPublicGatewayPatRuleState Empty = new VpcPublicGatewayPatRuleState();

    /**
     * The date and time of the creation of the pat rule config.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The date and time of the creation of the pat rule config.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The ID of the public gateway.
     * 
     */
    @Import(name="gatewayId")
    private @Nullable Output<String> gatewayId;

    /**
     * @return The ID of the public gateway.
     * 
     */
    public Optional<Output<String>> gatewayId() {
        return Optional.ofNullable(this.gatewayId);
    }

    /**
     * The organization ID the pat rule config is associated with.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return The organization ID the pat rule config is associated with.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * The Private IP to forward data to (IP address).
     * 
     */
    @Import(name="privateIp")
    private @Nullable Output<String> privateIp;

    /**
     * @return The Private IP to forward data to (IP address).
     * 
     */
    public Optional<Output<String>> privateIp() {
        return Optional.ofNullable(this.privateIp);
    }

    /**
     * The Private port to translate to.
     * 
     */
    @Import(name="privatePort")
    private @Nullable Output<Integer> privatePort;

    /**
     * @return The Private port to translate to.
     * 
     */
    public Optional<Output<Integer>> privatePort() {
        return Optional.ofNullable(this.privatePort);
    }

    /**
     * The Protocol the rule should apply to. Possible values are both, tcp and udp.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return The Protocol the rule should apply to. Possible values are both, tcp and udp.
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * The Public port to listen on.
     * 
     */
    @Import(name="publicPort")
    private @Nullable Output<Integer> publicPort;

    /**
     * @return The Public port to listen on.
     * 
     */
    public Optional<Output<Integer>> publicPort() {
        return Optional.ofNullable(this.publicPort);
    }

    /**
     * The date and time of the last update of the pat rule config.
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return The date and time of the last update of the pat rule config.
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    /**
     * `zone`) The zone in which the public gateway DHCP config should be created.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return `zone`) The zone in which the public gateway DHCP config should be created.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private VpcPublicGatewayPatRuleState() {}

    private VpcPublicGatewayPatRuleState(VpcPublicGatewayPatRuleState $) {
        this.createdAt = $.createdAt;
        this.gatewayId = $.gatewayId;
        this.organizationId = $.organizationId;
        this.privateIp = $.privateIp;
        this.privatePort = $.privatePort;
        this.protocol = $.protocol;
        this.publicPort = $.publicPort;
        this.updatedAt = $.updatedAt;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcPublicGatewayPatRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcPublicGatewayPatRuleState $;

        public Builder() {
            $ = new VpcPublicGatewayPatRuleState();
        }

        public Builder(VpcPublicGatewayPatRuleState defaults) {
            $ = new VpcPublicGatewayPatRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt The date and time of the creation of the pat rule config.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The date and time of the creation of the pat rule config.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param gatewayId The ID of the public gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayId(@Nullable Output<String> gatewayId) {
            $.gatewayId = gatewayId;
            return this;
        }

        /**
         * @param gatewayId The ID of the public gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayId(String gatewayId) {
            return gatewayId(Output.of(gatewayId));
        }

        /**
         * @param organizationId The organization ID the pat rule config is associated with.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId The organization ID the pat rule config is associated with.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param privateIp The Private IP to forward data to (IP address).
         * 
         * @return builder
         * 
         */
        public Builder privateIp(@Nullable Output<String> privateIp) {
            $.privateIp = privateIp;
            return this;
        }

        /**
         * @param privateIp The Private IP to forward data to (IP address).
         * 
         * @return builder
         * 
         */
        public Builder privateIp(String privateIp) {
            return privateIp(Output.of(privateIp));
        }

        /**
         * @param privatePort The Private port to translate to.
         * 
         * @return builder
         * 
         */
        public Builder privatePort(@Nullable Output<Integer> privatePort) {
            $.privatePort = privatePort;
            return this;
        }

        /**
         * @param privatePort The Private port to translate to.
         * 
         * @return builder
         * 
         */
        public Builder privatePort(Integer privatePort) {
            return privatePort(Output.of(privatePort));
        }

        /**
         * @param protocol The Protocol the rule should apply to. Possible values are both, tcp and udp.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol The Protocol the rule should apply to. Possible values are both, tcp and udp.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param publicPort The Public port to listen on.
         * 
         * @return builder
         * 
         */
        public Builder publicPort(@Nullable Output<Integer> publicPort) {
            $.publicPort = publicPort;
            return this;
        }

        /**
         * @param publicPort The Public port to listen on.
         * 
         * @return builder
         * 
         */
        public Builder publicPort(Integer publicPort) {
            return publicPort(Output.of(publicPort));
        }

        /**
         * @param updatedAt The date and time of the last update of the pat rule config.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt The date and time of the last update of the pat rule config.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        /**
         * @param zone `zone`) The zone in which the public gateway DHCP config should be created.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone `zone`) The zone in which the public gateway DHCP config should be created.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public VpcPublicGatewayPatRuleState build() {
            return $;
        }
    }

}
