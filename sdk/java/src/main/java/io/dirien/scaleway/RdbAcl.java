// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.scaleway.RdbAclArgs;
import io.dirien.scaleway.Utilities;
import io.dirien.scaleway.inputs.RdbAclState;
import io.dirien.scaleway.outputs.RdbAclAclRule;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Creates and manages Scaleway Database instance authorized IPs.
 * For more information, see [the documentation](https://developers.scaleway.com/en/products/rdb/api/#acl-rules-allowed-ips).
 * 
 * ## Examples
 * 
 * ### Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.RdbAcl;
 * import com.pulumi.scaleway.RdbAclArgs;
 * import com.pulumi.scaleway.inputs.RdbAclAclRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var main = new RdbAcl(&#34;main&#34;, RdbAclArgs.builder()        
 *             .instanceId(scaleway_rdb_instance.main().id())
 *             .aclRules(RdbAclAclRuleArgs.builder()
 *                 .ip(&#34;1.2.3.4/32&#34;)
 *                 .description(&#34;foo&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Database Instance can be imported using the `{region}/{id}`, e.g. bash
 * 
 * ```sh
 *  $ pulumi import scaleway:index/rdbAcl:RdbAcl acl01 fr-par/11111111-1111-1111-1111-111111111111
 * ```
 * 
 */
@ResourceType(type="scaleway:index/rdbAcl:RdbAcl")
public class RdbAcl extends com.pulumi.resources.CustomResource {
    /**
     * A list of ACLs (structure is described below)
     * 
     */
    @Export(name="aclRules", refs={List.class,RdbAclAclRule.class}, tree="[0,1]")
    private Output<List<RdbAclAclRule>> aclRules;

    /**
     * @return A list of ACLs (structure is described below)
     * 
     */
    public Output<List<RdbAclAclRule>> aclRules() {
        return this.aclRules;
    }
    /**
     * UUID of the rdb instance.
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return UUID of the rdb instance.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * `region`) The region in which the Database Instance should be created.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return `region`) The region in which the Database Instance should be created.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RdbAcl(String name) {
        this(name, RdbAclArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RdbAcl(String name, RdbAclArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RdbAcl(String name, RdbAclArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/rdbAcl:RdbAcl", name, args == null ? RdbAclArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RdbAcl(String name, Output<String> id, @Nullable RdbAclState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/rdbAcl:RdbAcl", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RdbAcl get(String name, Output<String> id, @Nullable RdbAclState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RdbAcl(name, id, state, options);
    }
}
