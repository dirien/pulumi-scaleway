// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetContainerNamespacePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetContainerNamespacePlainArgs Empty = new GetContainerNamespacePlainArgs();

    /**
     * The namespace name.
     * Only one of `name` and `namespace_id` should be specified.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The namespace name.
     * Only one of `name` and `namespace_id` should be specified.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The namespace id.
     * Only one of `name` and `namespace_id` should be specified.
     * 
     */
    @Import(name="namespaceId")
    private @Nullable String namespaceId;

    /**
     * @return The namespace id.
     * Only one of `name` and `namespace_id` should be specified.
     * 
     */
    public Optional<String> namespaceId() {
        return Optional.ofNullable(this.namespaceId);
    }

    /**
     * `region`) The region in which the namespace exists.
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return `region`) The region in which the namespace exists.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    private GetContainerNamespacePlainArgs() {}

    private GetContainerNamespacePlainArgs(GetContainerNamespacePlainArgs $) {
        this.name = $.name;
        this.namespaceId = $.namespaceId;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetContainerNamespacePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetContainerNamespacePlainArgs $;

        public Builder() {
            $ = new GetContainerNamespacePlainArgs();
        }

        public Builder(GetContainerNamespacePlainArgs defaults) {
            $ = new GetContainerNamespacePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The namespace name.
         * Only one of `name` and `namespace_id` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param namespaceId The namespace id.
         * Only one of `name` and `namespace_id` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(@Nullable String namespaceId) {
            $.namespaceId = namespaceId;
            return this;
        }

        /**
         * @param region `region`) The region in which the namespace exists.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        public GetContainerNamespacePlainArgs build() {
            return $;
        }
    }

}
