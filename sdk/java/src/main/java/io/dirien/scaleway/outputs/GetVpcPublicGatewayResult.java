// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVpcPublicGatewayResult {
    private Boolean bastionEnabled;
    private Integer bastionPort;
    private String createdAt;
    private Boolean enableSmtp;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String ipId;
    private @Nullable String name;
    private String organizationId;
    private String projectId;
    private @Nullable String publicGatewayId;
    private List<String> tags;
    private String type;
    private String updatedAt;
    private List<String> upstreamDnsServers;
    private @Nullable String zone;

    private GetVpcPublicGatewayResult() {}
    public Boolean bastionEnabled() {
        return this.bastionEnabled;
    }
    public Integer bastionPort() {
        return this.bastionPort;
    }
    public String createdAt() {
        return this.createdAt;
    }
    public Boolean enableSmtp() {
        return this.enableSmtp;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String ipId() {
        return this.ipId;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String organizationId() {
        return this.organizationId;
    }
    public String projectId() {
        return this.projectId;
    }
    public Optional<String> publicGatewayId() {
        return Optional.ofNullable(this.publicGatewayId);
    }
    public List<String> tags() {
        return this.tags;
    }
    public String type() {
        return this.type;
    }
    public String updatedAt() {
        return this.updatedAt;
    }
    public List<String> upstreamDnsServers() {
        return this.upstreamDnsServers;
    }
    public Optional<String> zone() {
        return Optional.ofNullable(this.zone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcPublicGatewayResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean bastionEnabled;
        private Integer bastionPort;
        private String createdAt;
        private Boolean enableSmtp;
        private String id;
        private String ipId;
        private @Nullable String name;
        private String organizationId;
        private String projectId;
        private @Nullable String publicGatewayId;
        private List<String> tags;
        private String type;
        private String updatedAt;
        private List<String> upstreamDnsServers;
        private @Nullable String zone;
        public Builder() {}
        public Builder(GetVpcPublicGatewayResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bastionEnabled = defaults.bastionEnabled;
    	      this.bastionPort = defaults.bastionPort;
    	      this.createdAt = defaults.createdAt;
    	      this.enableSmtp = defaults.enableSmtp;
    	      this.id = defaults.id;
    	      this.ipId = defaults.ipId;
    	      this.name = defaults.name;
    	      this.organizationId = defaults.organizationId;
    	      this.projectId = defaults.projectId;
    	      this.publicGatewayId = defaults.publicGatewayId;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.updatedAt = defaults.updatedAt;
    	      this.upstreamDnsServers = defaults.upstreamDnsServers;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder bastionEnabled(Boolean bastionEnabled) {
            this.bastionEnabled = Objects.requireNonNull(bastionEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder bastionPort(Integer bastionPort) {
            this.bastionPort = Objects.requireNonNull(bastionPort);
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder enableSmtp(Boolean enableSmtp) {
            this.enableSmtp = Objects.requireNonNull(enableSmtp);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipId(String ipId) {
            this.ipId = Objects.requireNonNull(ipId);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder publicGatewayId(@Nullable String publicGatewayId) {
            this.publicGatewayId = publicGatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt);
            return this;
        }
        @CustomType.Setter
        public Builder upstreamDnsServers(List<String> upstreamDnsServers) {
            this.upstreamDnsServers = Objects.requireNonNull(upstreamDnsServers);
            return this;
        }
        public Builder upstreamDnsServers(String... upstreamDnsServers) {
            return upstreamDnsServers(List.of(upstreamDnsServers));
        }
        @CustomType.Setter
        public Builder zone(@Nullable String zone) {
            this.zone = zone;
            return this;
        }
        public GetVpcPublicGatewayResult build() {
            final var o = new GetVpcPublicGatewayResult();
            o.bastionEnabled = bastionEnabled;
            o.bastionPort = bastionPort;
            o.createdAt = createdAt;
            o.enableSmtp = enableSmtp;
            o.id = id;
            o.ipId = ipId;
            o.name = name;
            o.organizationId = organizationId;
            o.projectId = projectId;
            o.publicGatewayId = publicGatewayId;
            o.tags = tags;
            o.type = type;
            o.updatedAt = updatedAt;
            o.upstreamDnsServers = upstreamDnsServers;
            o.zone = zone;
            return o;
        }
    }
}
