// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import io.dirien.scaleway.Utilities;
import io.dirien.scaleway.inputs.GetAccountProjectArgs;
import io.dirien.scaleway.inputs.GetAccountProjectPlainArgs;
import io.dirien.scaleway.inputs.GetAccountSshKeyArgs;
import io.dirien.scaleway.inputs.GetAccountSshKeyPlainArgs;
import io.dirien.scaleway.inputs.GetAvailabilityZonesArgs;
import io.dirien.scaleway.inputs.GetAvailabilityZonesPlainArgs;
import io.dirien.scaleway.inputs.GetBaremetalOfferArgs;
import io.dirien.scaleway.inputs.GetBaremetalOfferPlainArgs;
import io.dirien.scaleway.inputs.GetBaremetalOptionArgs;
import io.dirien.scaleway.inputs.GetBaremetalOptionPlainArgs;
import io.dirien.scaleway.inputs.GetBaremetalOsArgs;
import io.dirien.scaleway.inputs.GetBaremetalOsPlainArgs;
import io.dirien.scaleway.inputs.GetBaremetalServerArgs;
import io.dirien.scaleway.inputs.GetBaremetalServerPlainArgs;
import io.dirien.scaleway.inputs.GetCockpitArgs;
import io.dirien.scaleway.inputs.GetCockpitPlainArgs;
import io.dirien.scaleway.inputs.GetContainerArgs;
import io.dirien.scaleway.inputs.GetContainerNamespaceArgs;
import io.dirien.scaleway.inputs.GetContainerNamespacePlainArgs;
import io.dirien.scaleway.inputs.GetContainerPlainArgs;
import io.dirien.scaleway.inputs.GetDomainRecordArgs;
import io.dirien.scaleway.inputs.GetDomainRecordPlainArgs;
import io.dirien.scaleway.inputs.GetDomainZoneArgs;
import io.dirien.scaleway.inputs.GetDomainZonePlainArgs;
import io.dirien.scaleway.inputs.GetFlexibleIpArgs;
import io.dirien.scaleway.inputs.GetFlexibleIpPlainArgs;
import io.dirien.scaleway.inputs.GetFunctionArgs;
import io.dirien.scaleway.inputs.GetFunctionNamespaceArgs;
import io.dirien.scaleway.inputs.GetFunctionNamespacePlainArgs;
import io.dirien.scaleway.inputs.GetFunctionPlainArgs;
import io.dirien.scaleway.inputs.GetIamApplicationArgs;
import io.dirien.scaleway.inputs.GetIamApplicationPlainArgs;
import io.dirien.scaleway.inputs.GetIamGroupArgs;
import io.dirien.scaleway.inputs.GetIamGroupPlainArgs;
import io.dirien.scaleway.inputs.GetIamSshKeyArgs;
import io.dirien.scaleway.inputs.GetIamSshKeyPlainArgs;
import io.dirien.scaleway.inputs.GetIamUserArgs;
import io.dirien.scaleway.inputs.GetIamUserPlainArgs;
import io.dirien.scaleway.inputs.GetInstanceImageArgs;
import io.dirien.scaleway.inputs.GetInstanceImagePlainArgs;
import io.dirien.scaleway.inputs.GetInstanceIpArgs;
import io.dirien.scaleway.inputs.GetInstanceIpPlainArgs;
import io.dirien.scaleway.inputs.GetInstancePrivateNicArgs;
import io.dirien.scaleway.inputs.GetInstancePrivateNicPlainArgs;
import io.dirien.scaleway.inputs.GetInstanceSecurityGroupArgs;
import io.dirien.scaleway.inputs.GetInstanceSecurityGroupPlainArgs;
import io.dirien.scaleway.inputs.GetInstanceServerArgs;
import io.dirien.scaleway.inputs.GetInstanceServerPlainArgs;
import io.dirien.scaleway.inputs.GetInstanceServersArgs;
import io.dirien.scaleway.inputs.GetInstanceServersPlainArgs;
import io.dirien.scaleway.inputs.GetInstanceSnapshotArgs;
import io.dirien.scaleway.inputs.GetInstanceSnapshotPlainArgs;
import io.dirien.scaleway.inputs.GetInstanceVolumeArgs;
import io.dirien.scaleway.inputs.GetInstanceVolumePlainArgs;
import io.dirien.scaleway.inputs.GetIotDeviceArgs;
import io.dirien.scaleway.inputs.GetIotDevicePlainArgs;
import io.dirien.scaleway.inputs.GetIotHubArgs;
import io.dirien.scaleway.inputs.GetIotHubPlainArgs;
import io.dirien.scaleway.inputs.GetK8sClusterArgs;
import io.dirien.scaleway.inputs.GetK8sClusterPlainArgs;
import io.dirien.scaleway.inputs.GetK8sPoolArgs;
import io.dirien.scaleway.inputs.GetK8sPoolPlainArgs;
import io.dirien.scaleway.inputs.GetK8sVersionArgs;
import io.dirien.scaleway.inputs.GetK8sVersionPlainArgs;
import io.dirien.scaleway.inputs.GetLbAclsArgs;
import io.dirien.scaleway.inputs.GetLbAclsPlainArgs;
import io.dirien.scaleway.inputs.GetLbArgs;
import io.dirien.scaleway.inputs.GetLbBackendArgs;
import io.dirien.scaleway.inputs.GetLbBackendPlainArgs;
import io.dirien.scaleway.inputs.GetLbBackendsArgs;
import io.dirien.scaleway.inputs.GetLbBackendsPlainArgs;
import io.dirien.scaleway.inputs.GetLbCertificateArgs;
import io.dirien.scaleway.inputs.GetLbCertificatePlainArgs;
import io.dirien.scaleway.inputs.GetLbFrontendArgs;
import io.dirien.scaleway.inputs.GetLbFrontendPlainArgs;
import io.dirien.scaleway.inputs.GetLbFrontendsArgs;
import io.dirien.scaleway.inputs.GetLbFrontendsPlainArgs;
import io.dirien.scaleway.inputs.GetLbIpArgs;
import io.dirien.scaleway.inputs.GetLbIpPlainArgs;
import io.dirien.scaleway.inputs.GetLbIpsArgs;
import io.dirien.scaleway.inputs.GetLbIpsPlainArgs;
import io.dirien.scaleway.inputs.GetLbPlainArgs;
import io.dirien.scaleway.inputs.GetLbRouteArgs;
import io.dirien.scaleway.inputs.GetLbRoutePlainArgs;
import io.dirien.scaleway.inputs.GetLbRoutesArgs;
import io.dirien.scaleway.inputs.GetLbRoutesPlainArgs;
import io.dirien.scaleway.inputs.GetLbsArgs;
import io.dirien.scaleway.inputs.GetLbsPlainArgs;
import io.dirien.scaleway.inputs.GetMarketplaceImageArgs;
import io.dirien.scaleway.inputs.GetMarketplaceImagePlainArgs;
import io.dirien.scaleway.inputs.GetObjectBucketArgs;
import io.dirien.scaleway.inputs.GetObjectBucketPlainArgs;
import io.dirien.scaleway.inputs.GetObjectBucketPolicyArgs;
import io.dirien.scaleway.inputs.GetObjectBucketPolicyPlainArgs;
import io.dirien.scaleway.inputs.GetRdbAclArgs;
import io.dirien.scaleway.inputs.GetRdbAclPlainArgs;
import io.dirien.scaleway.inputs.GetRdbDatabaseArgs;
import io.dirien.scaleway.inputs.GetRdbDatabaseBackupArgs;
import io.dirien.scaleway.inputs.GetRdbDatabaseBackupPlainArgs;
import io.dirien.scaleway.inputs.GetRdbDatabasePlainArgs;
import io.dirien.scaleway.inputs.GetRdbInstanceArgs;
import io.dirien.scaleway.inputs.GetRdbInstancePlainArgs;
import io.dirien.scaleway.inputs.GetRdbPrivilegeArgs;
import io.dirien.scaleway.inputs.GetRdbPrivilegePlainArgs;
import io.dirien.scaleway.inputs.GetRedisClusterArgs;
import io.dirien.scaleway.inputs.GetRedisClusterPlainArgs;
import io.dirien.scaleway.inputs.GetRegistryImageArgs;
import io.dirien.scaleway.inputs.GetRegistryImagePlainArgs;
import io.dirien.scaleway.inputs.GetRegistryNamespaceArgs;
import io.dirien.scaleway.inputs.GetRegistryNamespacePlainArgs;
import io.dirien.scaleway.inputs.GetSecretArgs;
import io.dirien.scaleway.inputs.GetSecretPlainArgs;
import io.dirien.scaleway.inputs.GetSecretVersionArgs;
import io.dirien.scaleway.inputs.GetSecretVersionPlainArgs;
import io.dirien.scaleway.inputs.GetTemDomainArgs;
import io.dirien.scaleway.inputs.GetTemDomainPlainArgs;
import io.dirien.scaleway.inputs.GetVpcGatewayNetworkArgs;
import io.dirien.scaleway.inputs.GetVpcGatewayNetworkPlainArgs;
import io.dirien.scaleway.inputs.GetVpcPrivateNetworkArgs;
import io.dirien.scaleway.inputs.GetVpcPrivateNetworkPlainArgs;
import io.dirien.scaleway.inputs.GetVpcPublicGatewayArgs;
import io.dirien.scaleway.inputs.GetVpcPublicGatewayDhcpArgs;
import io.dirien.scaleway.inputs.GetVpcPublicGatewayDhcpPlainArgs;
import io.dirien.scaleway.inputs.GetVpcPublicGatewayDhcpReservationArgs;
import io.dirien.scaleway.inputs.GetVpcPublicGatewayDhcpReservationPlainArgs;
import io.dirien.scaleway.inputs.GetVpcPublicGatewayIpArgs;
import io.dirien.scaleway.inputs.GetVpcPublicGatewayIpPlainArgs;
import io.dirien.scaleway.inputs.GetVpcPublicGatewayPatRuleArgs;
import io.dirien.scaleway.inputs.GetVpcPublicGatewayPatRulePlainArgs;
import io.dirien.scaleway.inputs.GetVpcPublicGatewayPlainArgs;
import io.dirien.scaleway.inputs.GetWebHostOfferArgs;
import io.dirien.scaleway.inputs.GetWebHostOfferPlainArgs;
import io.dirien.scaleway.outputs.GetAccountProjectResult;
import io.dirien.scaleway.outputs.GetAccountSshKeyResult;
import io.dirien.scaleway.outputs.GetAvailabilityZonesResult;
import io.dirien.scaleway.outputs.GetBaremetalOfferResult;
import io.dirien.scaleway.outputs.GetBaremetalOptionResult;
import io.dirien.scaleway.outputs.GetBaremetalOsResult;
import io.dirien.scaleway.outputs.GetBaremetalServerResult;
import io.dirien.scaleway.outputs.GetCockpitResult;
import io.dirien.scaleway.outputs.GetContainerNamespaceResult;
import io.dirien.scaleway.outputs.GetContainerResult;
import io.dirien.scaleway.outputs.GetDomainRecordResult;
import io.dirien.scaleway.outputs.GetDomainZoneResult;
import io.dirien.scaleway.outputs.GetFlexibleIpResult;
import io.dirien.scaleway.outputs.GetFunctionNamespaceResult;
import io.dirien.scaleway.outputs.GetFunctionResult;
import io.dirien.scaleway.outputs.GetIamApplicationResult;
import io.dirien.scaleway.outputs.GetIamGroupResult;
import io.dirien.scaleway.outputs.GetIamSshKeyResult;
import io.dirien.scaleway.outputs.GetIamUserResult;
import io.dirien.scaleway.outputs.GetInstanceImageResult;
import io.dirien.scaleway.outputs.GetInstanceIpResult;
import io.dirien.scaleway.outputs.GetInstancePrivateNicResult;
import io.dirien.scaleway.outputs.GetInstanceSecurityGroupResult;
import io.dirien.scaleway.outputs.GetInstanceServerResult;
import io.dirien.scaleway.outputs.GetInstanceServersResult;
import io.dirien.scaleway.outputs.GetInstanceSnapshotResult;
import io.dirien.scaleway.outputs.GetInstanceVolumeResult;
import io.dirien.scaleway.outputs.GetIotDeviceResult;
import io.dirien.scaleway.outputs.GetIotHubResult;
import io.dirien.scaleway.outputs.GetK8sClusterResult;
import io.dirien.scaleway.outputs.GetK8sPoolResult;
import io.dirien.scaleway.outputs.GetK8sVersionResult;
import io.dirien.scaleway.outputs.GetLbAclsResult;
import io.dirien.scaleway.outputs.GetLbBackendResult;
import io.dirien.scaleway.outputs.GetLbBackendsResult;
import io.dirien.scaleway.outputs.GetLbCertificateResult;
import io.dirien.scaleway.outputs.GetLbFrontendResult;
import io.dirien.scaleway.outputs.GetLbFrontendsResult;
import io.dirien.scaleway.outputs.GetLbIpResult;
import io.dirien.scaleway.outputs.GetLbIpsResult;
import io.dirien.scaleway.outputs.GetLbResult;
import io.dirien.scaleway.outputs.GetLbRouteResult;
import io.dirien.scaleway.outputs.GetLbRoutesResult;
import io.dirien.scaleway.outputs.GetLbsResult;
import io.dirien.scaleway.outputs.GetMarketplaceImageResult;
import io.dirien.scaleway.outputs.GetObjectBucketPolicyResult;
import io.dirien.scaleway.outputs.GetObjectBucketResult;
import io.dirien.scaleway.outputs.GetRdbAclResult;
import io.dirien.scaleway.outputs.GetRdbDatabaseBackupResult;
import io.dirien.scaleway.outputs.GetRdbDatabaseResult;
import io.dirien.scaleway.outputs.GetRdbInstanceResult;
import io.dirien.scaleway.outputs.GetRdbPrivilegeResult;
import io.dirien.scaleway.outputs.GetRedisClusterResult;
import io.dirien.scaleway.outputs.GetRegistryImageResult;
import io.dirien.scaleway.outputs.GetRegistryNamespaceResult;
import io.dirien.scaleway.outputs.GetSecretResult;
import io.dirien.scaleway.outputs.GetSecretVersionResult;
import io.dirien.scaleway.outputs.GetTemDomainResult;
import io.dirien.scaleway.outputs.GetVpcGatewayNetworkResult;
import io.dirien.scaleway.outputs.GetVpcPrivateNetworkResult;
import io.dirien.scaleway.outputs.GetVpcPublicGatewayDhcpReservationResult;
import io.dirien.scaleway.outputs.GetVpcPublicGatewayDhcpResult;
import io.dirien.scaleway.outputs.GetVpcPublicGatewayIpResult;
import io.dirien.scaleway.outputs.GetVpcPublicGatewayPatRuleResult;
import io.dirien.scaleway.outputs.GetVpcPublicGatewayResult;
import io.dirien.scaleway.outputs.GetWebHostOfferResult;
import java.util.concurrent.CompletableFuture;

public final class ScalewayFunctions {
    /**
     * Gets information about an existing Project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAccountProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getAccountProject(GetAccountProjectArgs.builder()
     *             .name(&#34;default&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getAccountProject(GetAccountProjectArgs.builder()
     *             .projectId(&#34;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAccountProjectResult> getAccountProject() {
        return getAccountProject(GetAccountProjectArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing Project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAccountProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getAccountProject(GetAccountProjectArgs.builder()
     *             .name(&#34;default&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getAccountProject(GetAccountProjectArgs.builder()
     *             .projectId(&#34;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAccountProjectResult> getAccountProjectPlain() {
        return getAccountProjectPlain(GetAccountProjectPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing Project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAccountProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getAccountProject(GetAccountProjectArgs.builder()
     *             .name(&#34;default&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getAccountProject(GetAccountProjectArgs.builder()
     *             .projectId(&#34;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAccountProjectResult> getAccountProject(GetAccountProjectArgs args) {
        return getAccountProject(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing Project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAccountProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getAccountProject(GetAccountProjectArgs.builder()
     *             .name(&#34;default&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getAccountProject(GetAccountProjectArgs.builder()
     *             .projectId(&#34;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAccountProjectResult> getAccountProjectPlain(GetAccountProjectPlainArgs args) {
        return getAccountProjectPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing Project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAccountProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getAccountProject(GetAccountProjectArgs.builder()
     *             .name(&#34;default&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getAccountProject(GetAccountProjectArgs.builder()
     *             .projectId(&#34;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAccountProjectResult> getAccountProject(GetAccountProjectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getAccountProject:getAccountProject", TypeShape.of(GetAccountProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an existing Project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAccountProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getAccountProject(GetAccountProjectArgs.builder()
     *             .name(&#34;default&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getAccountProject(GetAccountProjectArgs.builder()
     *             .projectId(&#34;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAccountProjectResult> getAccountProjectPlain(GetAccountProjectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getAccountProject:getAccountProject", TypeShape.of(GetAccountProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get SSH key information based on its ID or name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAccountSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getAccountSshKey(GetAccountSshKeyArgs.builder()
     *             .sshKeyId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAccountSshKeyResult> getAccountSshKey() {
        return getAccountSshKey(GetAccountSshKeyArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get SSH key information based on its ID or name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAccountSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getAccountSshKey(GetAccountSshKeyArgs.builder()
     *             .sshKeyId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAccountSshKeyResult> getAccountSshKeyPlain() {
        return getAccountSshKeyPlain(GetAccountSshKeyPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get SSH key information based on its ID or name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAccountSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getAccountSshKey(GetAccountSshKeyArgs.builder()
     *             .sshKeyId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAccountSshKeyResult> getAccountSshKey(GetAccountSshKeyArgs args) {
        return getAccountSshKey(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get SSH key information based on its ID or name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAccountSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getAccountSshKey(GetAccountSshKeyArgs.builder()
     *             .sshKeyId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAccountSshKeyResult> getAccountSshKeyPlain(GetAccountSshKeyPlainArgs args) {
        return getAccountSshKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get SSH key information based on its ID or name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAccountSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getAccountSshKey(GetAccountSshKeyArgs.builder()
     *             .sshKeyId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAccountSshKeyResult> getAccountSshKey(GetAccountSshKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getAccountSshKey:getAccountSshKey", TypeShape.of(GetAccountSshKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get SSH key information based on its ID or name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAccountSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getAccountSshKey(GetAccountSshKeyArgs.builder()
     *             .sshKeyId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAccountSshKeyResult> getAccountSshKeyPlain(GetAccountSshKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getAccountSshKey:getAccountSshKey", TypeShape.of(GetAccountSshKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the available zones information based on its Region.
     * 
     * For technical and legal reasons, some products are split by Region or by Availability Zones. When using such product,
     * you can choose the location that better fits your need (country, latency, …).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAvailabilityZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getAvailabilityZones(GetAvailabilityZonesArgs.builder()
     *             .region(&#34;nl-ams&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAvailabilityZonesResult> getAvailabilityZones() {
        return getAvailabilityZones(GetAvailabilityZonesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the available zones information based on its Region.
     * 
     * For technical and legal reasons, some products are split by Region or by Availability Zones. When using such product,
     * you can choose the location that better fits your need (country, latency, …).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAvailabilityZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getAvailabilityZones(GetAvailabilityZonesArgs.builder()
     *             .region(&#34;nl-ams&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAvailabilityZonesResult> getAvailabilityZonesPlain() {
        return getAvailabilityZonesPlain(GetAvailabilityZonesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the available zones information based on its Region.
     * 
     * For technical and legal reasons, some products are split by Region or by Availability Zones. When using such product,
     * you can choose the location that better fits your need (country, latency, …).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAvailabilityZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getAvailabilityZones(GetAvailabilityZonesArgs.builder()
     *             .region(&#34;nl-ams&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAvailabilityZonesResult> getAvailabilityZones(GetAvailabilityZonesArgs args) {
        return getAvailabilityZones(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the available zones information based on its Region.
     * 
     * For technical and legal reasons, some products are split by Region or by Availability Zones. When using such product,
     * you can choose the location that better fits your need (country, latency, …).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAvailabilityZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getAvailabilityZones(GetAvailabilityZonesArgs.builder()
     *             .region(&#34;nl-ams&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAvailabilityZonesResult> getAvailabilityZonesPlain(GetAvailabilityZonesPlainArgs args) {
        return getAvailabilityZonesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the available zones information based on its Region.
     * 
     * For technical and legal reasons, some products are split by Region or by Availability Zones. When using such product,
     * you can choose the location that better fits your need (country, latency, …).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAvailabilityZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getAvailabilityZones(GetAvailabilityZonesArgs.builder()
     *             .region(&#34;nl-ams&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAvailabilityZonesResult> getAvailabilityZones(GetAvailabilityZonesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getAvailabilityZones:getAvailabilityZones", TypeShape.of(GetAvailabilityZonesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the available zones information based on its Region.
     * 
     * For technical and legal reasons, some products are split by Region or by Availability Zones. When using such product,
     * you can choose the location that better fits your need (country, latency, …).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetAvailabilityZonesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getAvailabilityZones(GetAvailabilityZonesArgs.builder()
     *             .region(&#34;nl-ams&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAvailabilityZonesResult> getAvailabilityZonesPlain(GetAvailabilityZonesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getAvailabilityZones:getAvailabilityZones", TypeShape.of(GetAvailabilityZonesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a baremetal offer. For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOfferArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myOffer = ScalewayFunctions.getBaremetalOffer(GetBaremetalOfferArgs.builder()
     *             .offerId(&#34;25dcf38b-c90c-4b18-97a2-6956e9d1e113&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBaremetalOfferResult> getBaremetalOffer() {
        return getBaremetalOffer(GetBaremetalOfferArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal offer. For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOfferArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myOffer = ScalewayFunctions.getBaremetalOffer(GetBaremetalOfferArgs.builder()
     *             .offerId(&#34;25dcf38b-c90c-4b18-97a2-6956e9d1e113&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBaremetalOfferResult> getBaremetalOfferPlain() {
        return getBaremetalOfferPlain(GetBaremetalOfferPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal offer. For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOfferArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myOffer = ScalewayFunctions.getBaremetalOffer(GetBaremetalOfferArgs.builder()
     *             .offerId(&#34;25dcf38b-c90c-4b18-97a2-6956e9d1e113&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBaremetalOfferResult> getBaremetalOffer(GetBaremetalOfferArgs args) {
        return getBaremetalOffer(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal offer. For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOfferArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myOffer = ScalewayFunctions.getBaremetalOffer(GetBaremetalOfferArgs.builder()
     *             .offerId(&#34;25dcf38b-c90c-4b18-97a2-6956e9d1e113&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBaremetalOfferResult> getBaremetalOfferPlain(GetBaremetalOfferPlainArgs args) {
        return getBaremetalOfferPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal offer. For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOfferArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myOffer = ScalewayFunctions.getBaremetalOffer(GetBaremetalOfferArgs.builder()
     *             .offerId(&#34;25dcf38b-c90c-4b18-97a2-6956e9d1e113&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBaremetalOfferResult> getBaremetalOffer(GetBaremetalOfferArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getBaremetalOffer:getBaremetalOffer", TypeShape.of(GetBaremetalOfferResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a baremetal offer. For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOfferArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myOffer = ScalewayFunctions.getBaremetalOffer(GetBaremetalOfferArgs.builder()
     *             .offerId(&#34;25dcf38b-c90c-4b18-97a2-6956e9d1e113&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBaremetalOfferResult> getBaremetalOfferPlain(GetBaremetalOfferPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getBaremetalOffer:getBaremetalOffer", TypeShape.of(GetBaremetalOfferResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a baremetal option.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalOption(GetBaremetalOptionArgs.builder()
     *             .name(&#34;Remote Access&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalOption(GetBaremetalOptionArgs.builder()
     *             .optionId(&#34;931df052-d713-4674-8b58-96a63244c8e2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBaremetalOptionResult> getBaremetalOption() {
        return getBaremetalOption(GetBaremetalOptionArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal option.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalOption(GetBaremetalOptionArgs.builder()
     *             .name(&#34;Remote Access&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalOption(GetBaremetalOptionArgs.builder()
     *             .optionId(&#34;931df052-d713-4674-8b58-96a63244c8e2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBaremetalOptionResult> getBaremetalOptionPlain() {
        return getBaremetalOptionPlain(GetBaremetalOptionPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal option.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalOption(GetBaremetalOptionArgs.builder()
     *             .name(&#34;Remote Access&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalOption(GetBaremetalOptionArgs.builder()
     *             .optionId(&#34;931df052-d713-4674-8b58-96a63244c8e2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBaremetalOptionResult> getBaremetalOption(GetBaremetalOptionArgs args) {
        return getBaremetalOption(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal option.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalOption(GetBaremetalOptionArgs.builder()
     *             .name(&#34;Remote Access&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalOption(GetBaremetalOptionArgs.builder()
     *             .optionId(&#34;931df052-d713-4674-8b58-96a63244c8e2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBaremetalOptionResult> getBaremetalOptionPlain(GetBaremetalOptionPlainArgs args) {
        return getBaremetalOptionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal option.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalOption(GetBaremetalOptionArgs.builder()
     *             .name(&#34;Remote Access&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalOption(GetBaremetalOptionArgs.builder()
     *             .optionId(&#34;931df052-d713-4674-8b58-96a63244c8e2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBaremetalOptionResult> getBaremetalOption(GetBaremetalOptionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getBaremetalOption:getBaremetalOption", TypeShape.of(GetBaremetalOptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a baremetal option.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOptionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalOption(GetBaremetalOptionArgs.builder()
     *             .name(&#34;Remote Access&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalOption(GetBaremetalOptionArgs.builder()
     *             .optionId(&#34;931df052-d713-4674-8b58-96a63244c8e2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBaremetalOptionResult> getBaremetalOptionPlain(GetBaremetalOptionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getBaremetalOption:getBaremetalOption", TypeShape.of(GetBaremetalOptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a baremetal operating system.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * You can also use the [scaleway-cli](https://github.com/scaleway/scaleway-cli) with `scw baremetal os list` to list all available operating systems.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalOs(GetBaremetalOsArgs.builder()
     *             .name(&#34;Ubuntu&#34;)
     *             .version(&#34;20.04 LTS (Focal Fossa)&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalOs(GetBaremetalOsArgs.builder()
     *             .osId(&#34;03b7f4ba-a6a1-4305-984e-b54fafbf1681&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBaremetalOsResult> getBaremetalOs() {
        return getBaremetalOs(GetBaremetalOsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal operating system.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * You can also use the [scaleway-cli](https://github.com/scaleway/scaleway-cli) with `scw baremetal os list` to list all available operating systems.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalOs(GetBaremetalOsArgs.builder()
     *             .name(&#34;Ubuntu&#34;)
     *             .version(&#34;20.04 LTS (Focal Fossa)&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalOs(GetBaremetalOsArgs.builder()
     *             .osId(&#34;03b7f4ba-a6a1-4305-984e-b54fafbf1681&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBaremetalOsResult> getBaremetalOsPlain() {
        return getBaremetalOsPlain(GetBaremetalOsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal operating system.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * You can also use the [scaleway-cli](https://github.com/scaleway/scaleway-cli) with `scw baremetal os list` to list all available operating systems.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalOs(GetBaremetalOsArgs.builder()
     *             .name(&#34;Ubuntu&#34;)
     *             .version(&#34;20.04 LTS (Focal Fossa)&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalOs(GetBaremetalOsArgs.builder()
     *             .osId(&#34;03b7f4ba-a6a1-4305-984e-b54fafbf1681&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBaremetalOsResult> getBaremetalOs(GetBaremetalOsArgs args) {
        return getBaremetalOs(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal operating system.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * You can also use the [scaleway-cli](https://github.com/scaleway/scaleway-cli) with `scw baremetal os list` to list all available operating systems.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalOs(GetBaremetalOsArgs.builder()
     *             .name(&#34;Ubuntu&#34;)
     *             .version(&#34;20.04 LTS (Focal Fossa)&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalOs(GetBaremetalOsArgs.builder()
     *             .osId(&#34;03b7f4ba-a6a1-4305-984e-b54fafbf1681&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBaremetalOsResult> getBaremetalOsPlain(GetBaremetalOsPlainArgs args) {
        return getBaremetalOsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal operating system.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * You can also use the [scaleway-cli](https://github.com/scaleway/scaleway-cli) with `scw baremetal os list` to list all available operating systems.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalOs(GetBaremetalOsArgs.builder()
     *             .name(&#34;Ubuntu&#34;)
     *             .version(&#34;20.04 LTS (Focal Fossa)&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalOs(GetBaremetalOsArgs.builder()
     *             .osId(&#34;03b7f4ba-a6a1-4305-984e-b54fafbf1681&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBaremetalOsResult> getBaremetalOs(GetBaremetalOsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getBaremetalOs:getBaremetalOs", TypeShape.of(GetBaremetalOsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a baremetal operating system.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * You can also use the [scaleway-cli](https://github.com/scaleway/scaleway-cli) with `scw baremetal os list` to list all available operating systems.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalOsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalOs(GetBaremetalOsArgs.builder()
     *             .name(&#34;Ubuntu&#34;)
     *             .version(&#34;20.04 LTS (Focal Fossa)&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalOs(GetBaremetalOsArgs.builder()
     *             .osId(&#34;03b7f4ba-a6a1-4305-984e-b54fafbf1681&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBaremetalOsResult> getBaremetalOsPlain(GetBaremetalOsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getBaremetalOs:getBaremetalOs", TypeShape.of(GetBaremetalOsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a baremetal server.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalServer(GetBaremetalServerArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalServer(GetBaremetalServerArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBaremetalServerResult> getBaremetalServer() {
        return getBaremetalServer(GetBaremetalServerArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal server.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalServer(GetBaremetalServerArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalServer(GetBaremetalServerArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBaremetalServerResult> getBaremetalServerPlain() {
        return getBaremetalServerPlain(GetBaremetalServerPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal server.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalServer(GetBaremetalServerArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalServer(GetBaremetalServerArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBaremetalServerResult> getBaremetalServer(GetBaremetalServerArgs args) {
        return getBaremetalServer(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal server.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalServer(GetBaremetalServerArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalServer(GetBaremetalServerArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBaremetalServerResult> getBaremetalServerPlain(GetBaremetalServerPlainArgs args) {
        return getBaremetalServerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a baremetal server.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalServer(GetBaremetalServerArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalServer(GetBaremetalServerArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBaremetalServerResult> getBaremetalServer(GetBaremetalServerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getBaremetalServer:getBaremetalServer", TypeShape.of(GetBaremetalServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a baremetal server.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/baremetal/api).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetBaremetalServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getBaremetalServer(GetBaremetalServerArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getBaremetalServer(GetBaremetalServerArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBaremetalServerResult> getBaremetalServerPlain(GetBaremetalServerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getBaremetalServer:getBaremetalServer", TypeShape.of(GetBaremetalServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the Scaleway Cockpit.
     * 
     * For more information consult the [documentation](https://www.scaleway.com/en/docs/observability/cockpit/concepts/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetCockpitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getCockpit();
     * 
     *     }
     * }
     * ```
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetCockpitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getCockpit(GetCockpitArgs.builder()
     *             .projectId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetCockpitResult> getCockpit() {
        return getCockpit(GetCockpitArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about the Scaleway Cockpit.
     * 
     * For more information consult the [documentation](https://www.scaleway.com/en/docs/observability/cockpit/concepts/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetCockpitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getCockpit();
     * 
     *     }
     * }
     * ```
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetCockpitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getCockpit(GetCockpitArgs.builder()
     *             .projectId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetCockpitResult> getCockpitPlain() {
        return getCockpitPlain(GetCockpitPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about the Scaleway Cockpit.
     * 
     * For more information consult the [documentation](https://www.scaleway.com/en/docs/observability/cockpit/concepts/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetCockpitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getCockpit();
     * 
     *     }
     * }
     * ```
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetCockpitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getCockpit(GetCockpitArgs.builder()
     *             .projectId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetCockpitResult> getCockpit(GetCockpitArgs args) {
        return getCockpit(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the Scaleway Cockpit.
     * 
     * For more information consult the [documentation](https://www.scaleway.com/en/docs/observability/cockpit/concepts/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetCockpitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getCockpit();
     * 
     *     }
     * }
     * ```
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetCockpitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getCockpit(GetCockpitArgs.builder()
     *             .projectId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetCockpitResult> getCockpitPlain(GetCockpitPlainArgs args) {
        return getCockpitPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the Scaleway Cockpit.
     * 
     * For more information consult the [documentation](https://www.scaleway.com/en/docs/observability/cockpit/concepts/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetCockpitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getCockpit();
     * 
     *     }
     * }
     * ```
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetCockpitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getCockpit(GetCockpitArgs.builder()
     *             .projectId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetCockpitResult> getCockpit(GetCockpitArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getCockpit:getCockpit", TypeShape.of(GetCockpitResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the Scaleway Cockpit.
     * 
     * For more information consult the [documentation](https://www.scaleway.com/en/docs/observability/cockpit/concepts/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetCockpitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getCockpit();
     * 
     *     }
     * }
     * ```
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetCockpitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getCockpit(GetCockpitArgs.builder()
     *             .projectId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetCockpitResult> getCockpitPlain(GetCockpitPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getCockpit:getCockpit", TypeShape.of(GetCockpitResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the Scaleway Container.
     * 
     * For more information consult the [documentation](https://www.scaleway.com/en/docs/faq/serverless-containers/).
     * 
     * For more details about the limitation check [containers-limitations](https://www.scaleway.com/en/docs/compute/containers/reference-content/containers-limitations/).
     * 
     * You can check also our [containers guide](https://www.scaleway.com/en/docs/compute/containers/concepts/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ContainerNamespace;
     * import com.pulumi.scaleway.Container;
     * import com.pulumi.scaleway.ContainerArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetContainerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var mainContainerNamespace = new ContainerNamespace(&#34;mainContainerNamespace&#34;);
     * 
     *         var mainContainer = new Container(&#34;mainContainer&#34;, ContainerArgs.builder()        
     *             .namespaceId(mainContainerNamespace.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getContainer(GetContainerArgs.builder()
     *             .namespaceId(mainContainerNamespace.id())
     *             .name(mainContainer.name())
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getContainer(GetContainerArgs.builder()
     *             .namespaceId(mainContainerNamespace.id())
     *             .containerId(mainContainer.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetContainerResult> getContainer(GetContainerArgs args) {
        return getContainer(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the Scaleway Container.
     * 
     * For more information consult the [documentation](https://www.scaleway.com/en/docs/faq/serverless-containers/).
     * 
     * For more details about the limitation check [containers-limitations](https://www.scaleway.com/en/docs/compute/containers/reference-content/containers-limitations/).
     * 
     * You can check also our [containers guide](https://www.scaleway.com/en/docs/compute/containers/concepts/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ContainerNamespace;
     * import com.pulumi.scaleway.Container;
     * import com.pulumi.scaleway.ContainerArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetContainerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var mainContainerNamespace = new ContainerNamespace(&#34;mainContainerNamespace&#34;);
     * 
     *         var mainContainer = new Container(&#34;mainContainer&#34;, ContainerArgs.builder()        
     *             .namespaceId(mainContainerNamespace.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getContainer(GetContainerArgs.builder()
     *             .namespaceId(mainContainerNamespace.id())
     *             .name(mainContainer.name())
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getContainer(GetContainerArgs.builder()
     *             .namespaceId(mainContainerNamespace.id())
     *             .containerId(mainContainer.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetContainerResult> getContainerPlain(GetContainerPlainArgs args) {
        return getContainerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the Scaleway Container.
     * 
     * For more information consult the [documentation](https://www.scaleway.com/en/docs/faq/serverless-containers/).
     * 
     * For more details about the limitation check [containers-limitations](https://www.scaleway.com/en/docs/compute/containers/reference-content/containers-limitations/).
     * 
     * You can check also our [containers guide](https://www.scaleway.com/en/docs/compute/containers/concepts/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ContainerNamespace;
     * import com.pulumi.scaleway.Container;
     * import com.pulumi.scaleway.ContainerArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetContainerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var mainContainerNamespace = new ContainerNamespace(&#34;mainContainerNamespace&#34;);
     * 
     *         var mainContainer = new Container(&#34;mainContainer&#34;, ContainerArgs.builder()        
     *             .namespaceId(mainContainerNamespace.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getContainer(GetContainerArgs.builder()
     *             .namespaceId(mainContainerNamespace.id())
     *             .name(mainContainer.name())
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getContainer(GetContainerArgs.builder()
     *             .namespaceId(mainContainerNamespace.id())
     *             .containerId(mainContainer.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetContainerResult> getContainer(GetContainerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getContainer:getContainer", TypeShape.of(GetContainerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the Scaleway Container.
     * 
     * For more information consult the [documentation](https://www.scaleway.com/en/docs/faq/serverless-containers/).
     * 
     * For more details about the limitation check [containers-limitations](https://www.scaleway.com/en/docs/compute/containers/reference-content/containers-limitations/).
     * 
     * You can check also our [containers guide](https://www.scaleway.com/en/docs/compute/containers/concepts/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ContainerNamespace;
     * import com.pulumi.scaleway.Container;
     * import com.pulumi.scaleway.ContainerArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetContainerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var mainContainerNamespace = new ContainerNamespace(&#34;mainContainerNamespace&#34;);
     * 
     *         var mainContainer = new Container(&#34;mainContainer&#34;, ContainerArgs.builder()        
     *             .namespaceId(mainContainerNamespace.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getContainer(GetContainerArgs.builder()
     *             .namespaceId(mainContainerNamespace.id())
     *             .name(mainContainer.name())
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getContainer(GetContainerArgs.builder()
     *             .namespaceId(mainContainerNamespace.id())
     *             .containerId(mainContainer.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetContainerResult> getContainerPlain(GetContainerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getContainer:getContainer", TypeShape.of(GetContainerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a container namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetContainerNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getContainerNamespace(GetContainerNamespaceArgs.builder()
     *             .name(&#34;my-namespace-name&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getContainerNamespace(GetContainerNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetContainerNamespaceResult> getContainerNamespace() {
        return getContainerNamespace(GetContainerNamespaceArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a container namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetContainerNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getContainerNamespace(GetContainerNamespaceArgs.builder()
     *             .name(&#34;my-namespace-name&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getContainerNamespace(GetContainerNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetContainerNamespaceResult> getContainerNamespacePlain() {
        return getContainerNamespacePlain(GetContainerNamespacePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a container namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetContainerNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getContainerNamespace(GetContainerNamespaceArgs.builder()
     *             .name(&#34;my-namespace-name&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getContainerNamespace(GetContainerNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetContainerNamespaceResult> getContainerNamespace(GetContainerNamespaceArgs args) {
        return getContainerNamespace(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a container namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetContainerNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getContainerNamespace(GetContainerNamespaceArgs.builder()
     *             .name(&#34;my-namespace-name&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getContainerNamespace(GetContainerNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetContainerNamespaceResult> getContainerNamespacePlain(GetContainerNamespacePlainArgs args) {
        return getContainerNamespacePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a container namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetContainerNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getContainerNamespace(GetContainerNamespaceArgs.builder()
     *             .name(&#34;my-namespace-name&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getContainerNamespace(GetContainerNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetContainerNamespaceResult> getContainerNamespace(GetContainerNamespaceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getContainerNamespace:getContainerNamespace", TypeShape.of(GetContainerNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a container namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetContainerNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getContainerNamespace(GetContainerNamespaceArgs.builder()
     *             .name(&#34;my-namespace-name&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getContainerNamespace(GetContainerNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetContainerNamespaceResult> getContainerNamespacePlain(GetContainerNamespacePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getContainerNamespace:getContainerNamespace", TypeShape.of(GetContainerNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a domain record.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetDomainRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byContent = ScalewayFunctions.getDomainRecord(GetDomainRecordArgs.builder()
     *             .data(&#34;1.2.3.4&#34;)
     *             .dnsZone(&#34;domain.tld&#34;)
     *             .name(&#34;www&#34;)
     *             .type(&#34;A&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getDomainRecord(GetDomainRecordArgs.builder()
     *             .dnsZone(&#34;domain.tld&#34;)
     *             .recordId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDomainRecordResult> getDomainRecord() {
        return getDomainRecord(GetDomainRecordArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a domain record.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetDomainRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byContent = ScalewayFunctions.getDomainRecord(GetDomainRecordArgs.builder()
     *             .data(&#34;1.2.3.4&#34;)
     *             .dnsZone(&#34;domain.tld&#34;)
     *             .name(&#34;www&#34;)
     *             .type(&#34;A&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getDomainRecord(GetDomainRecordArgs.builder()
     *             .dnsZone(&#34;domain.tld&#34;)
     *             .recordId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDomainRecordResult> getDomainRecordPlain() {
        return getDomainRecordPlain(GetDomainRecordPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a domain record.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetDomainRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byContent = ScalewayFunctions.getDomainRecord(GetDomainRecordArgs.builder()
     *             .data(&#34;1.2.3.4&#34;)
     *             .dnsZone(&#34;domain.tld&#34;)
     *             .name(&#34;www&#34;)
     *             .type(&#34;A&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getDomainRecord(GetDomainRecordArgs.builder()
     *             .dnsZone(&#34;domain.tld&#34;)
     *             .recordId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDomainRecordResult> getDomainRecord(GetDomainRecordArgs args) {
        return getDomainRecord(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a domain record.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetDomainRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byContent = ScalewayFunctions.getDomainRecord(GetDomainRecordArgs.builder()
     *             .data(&#34;1.2.3.4&#34;)
     *             .dnsZone(&#34;domain.tld&#34;)
     *             .name(&#34;www&#34;)
     *             .type(&#34;A&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getDomainRecord(GetDomainRecordArgs.builder()
     *             .dnsZone(&#34;domain.tld&#34;)
     *             .recordId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDomainRecordResult> getDomainRecordPlain(GetDomainRecordPlainArgs args) {
        return getDomainRecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a domain record.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetDomainRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byContent = ScalewayFunctions.getDomainRecord(GetDomainRecordArgs.builder()
     *             .data(&#34;1.2.3.4&#34;)
     *             .dnsZone(&#34;domain.tld&#34;)
     *             .name(&#34;www&#34;)
     *             .type(&#34;A&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getDomainRecord(GetDomainRecordArgs.builder()
     *             .dnsZone(&#34;domain.tld&#34;)
     *             .recordId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDomainRecordResult> getDomainRecord(GetDomainRecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getDomainRecord:getDomainRecord", TypeShape.of(GetDomainRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a domain record.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetDomainRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byContent = ScalewayFunctions.getDomainRecord(GetDomainRecordArgs.builder()
     *             .data(&#34;1.2.3.4&#34;)
     *             .dnsZone(&#34;domain.tld&#34;)
     *             .name(&#34;www&#34;)
     *             .type(&#34;A&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getDomainRecord(GetDomainRecordArgs.builder()
     *             .dnsZone(&#34;domain.tld&#34;)
     *             .recordId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDomainRecordResult> getDomainRecordPlain(GetDomainRecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getDomainRecord:getDomainRecord", TypeShape.of(GetDomainRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a domain zone.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetDomainZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getDomainZone(GetDomainZoneArgs.builder()
     *             .domain(&#34;scaleway-terraform.com&#34;)
     *             .subdomain(&#34;test&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDomainZoneResult> getDomainZone() {
        return getDomainZone(GetDomainZoneArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a domain zone.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetDomainZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getDomainZone(GetDomainZoneArgs.builder()
     *             .domain(&#34;scaleway-terraform.com&#34;)
     *             .subdomain(&#34;test&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDomainZoneResult> getDomainZonePlain() {
        return getDomainZonePlain(GetDomainZonePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a domain zone.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetDomainZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getDomainZone(GetDomainZoneArgs.builder()
     *             .domain(&#34;scaleway-terraform.com&#34;)
     *             .subdomain(&#34;test&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDomainZoneResult> getDomainZone(GetDomainZoneArgs args) {
        return getDomainZone(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a domain zone.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetDomainZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getDomainZone(GetDomainZoneArgs.builder()
     *             .domain(&#34;scaleway-terraform.com&#34;)
     *             .subdomain(&#34;test&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDomainZoneResult> getDomainZonePlain(GetDomainZonePlainArgs args) {
        return getDomainZonePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a domain zone.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetDomainZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getDomainZone(GetDomainZoneArgs.builder()
     *             .domain(&#34;scaleway-terraform.com&#34;)
     *             .subdomain(&#34;test&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDomainZoneResult> getDomainZone(GetDomainZoneArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getDomainZone:getDomainZone", TypeShape.of(GetDomainZoneResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a domain zone.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetDomainZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getDomainZone(GetDomainZoneArgs.builder()
     *             .domain(&#34;scaleway-terraform.com&#34;)
     *             .subdomain(&#34;test&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDomainZoneResult> getDomainZonePlain(GetDomainZonePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getDomainZone:getDomainZone", TypeShape.of(GetDomainZoneResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Flexible IP.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetFlexibleIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getFlexibleIp(GetFlexibleIpArgs.builder()
     *             .ipId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFlexibleIpResult> getFlexibleIp() {
        return getFlexibleIp(GetFlexibleIpArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Flexible IP.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetFlexibleIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getFlexibleIp(GetFlexibleIpArgs.builder()
     *             .ipId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFlexibleIpResult> getFlexibleIpPlain() {
        return getFlexibleIpPlain(GetFlexibleIpPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Flexible IP.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetFlexibleIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getFlexibleIp(GetFlexibleIpArgs.builder()
     *             .ipId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFlexibleIpResult> getFlexibleIp(GetFlexibleIpArgs args) {
        return getFlexibleIp(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Flexible IP.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetFlexibleIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getFlexibleIp(GetFlexibleIpArgs.builder()
     *             .ipId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFlexibleIpResult> getFlexibleIpPlain(GetFlexibleIpPlainArgs args) {
        return getFlexibleIpPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Flexible IP.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetFlexibleIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getFlexibleIp(GetFlexibleIpArgs.builder()
     *             .ipId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFlexibleIpResult> getFlexibleIp(GetFlexibleIpArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getFlexibleIp:getFlexibleIp", TypeShape.of(GetFlexibleIpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Flexible IP.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetFlexibleIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getFlexibleIp(GetFlexibleIpArgs.builder()
     *             .ipId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFlexibleIpResult> getFlexibleIpPlain(GetFlexibleIpPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getFlexibleIp:getFlexibleIp", TypeShape.of(GetFlexibleIpResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetFunctionResult> getFunction(GetFunctionArgs args) {
        return getFunction(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetFunctionResult> getFunctionPlain(GetFunctionPlainArgs args) {
        return getFunctionPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetFunctionResult> getFunction(GetFunctionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getFunction:getFunction", TypeShape.of(GetFunctionResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetFunctionResult> getFunctionPlain(GetFunctionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getFunction:getFunction", TypeShape.of(GetFunctionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a function namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetFunctionNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myNamespace = ScalewayFunctions.getFunctionNamespace(GetFunctionNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFunctionNamespaceResult> getFunctionNamespace() {
        return getFunctionNamespace(GetFunctionNamespaceArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a function namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetFunctionNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myNamespace = ScalewayFunctions.getFunctionNamespace(GetFunctionNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFunctionNamespaceResult> getFunctionNamespacePlain() {
        return getFunctionNamespacePlain(GetFunctionNamespacePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a function namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetFunctionNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myNamespace = ScalewayFunctions.getFunctionNamespace(GetFunctionNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFunctionNamespaceResult> getFunctionNamespace(GetFunctionNamespaceArgs args) {
        return getFunctionNamespace(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a function namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetFunctionNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myNamespace = ScalewayFunctions.getFunctionNamespace(GetFunctionNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFunctionNamespaceResult> getFunctionNamespacePlain(GetFunctionNamespacePlainArgs args) {
        return getFunctionNamespacePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a function namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetFunctionNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myNamespace = ScalewayFunctions.getFunctionNamespace(GetFunctionNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFunctionNamespaceResult> getFunctionNamespace(GetFunctionNamespaceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getFunctionNamespace:getFunctionNamespace", TypeShape.of(GetFunctionNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a function namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetFunctionNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myNamespace = ScalewayFunctions.getFunctionNamespace(GetFunctionNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFunctionNamespaceResult> getFunctionNamespacePlain(GetFunctionNamespacePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getFunctionNamespace:getFunctionNamespace", TypeShape.of(GetFunctionNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an existing IAM application.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getIamApplication(GetIamApplicationArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getIamApplication(GetIamApplicationArgs.builder()
     *             .applicationId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIamApplicationResult> getIamApplication() {
        return getIamApplication(GetIamApplicationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing IAM application.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getIamApplication(GetIamApplicationArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getIamApplication(GetIamApplicationArgs.builder()
     *             .applicationId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIamApplicationResult> getIamApplicationPlain() {
        return getIamApplicationPlain(GetIamApplicationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing IAM application.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getIamApplication(GetIamApplicationArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getIamApplication(GetIamApplicationArgs.builder()
     *             .applicationId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIamApplicationResult> getIamApplication(GetIamApplicationArgs args) {
        return getIamApplication(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing IAM application.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getIamApplication(GetIamApplicationArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getIamApplication(GetIamApplicationArgs.builder()
     *             .applicationId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIamApplicationResult> getIamApplicationPlain(GetIamApplicationPlainArgs args) {
        return getIamApplicationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing IAM application.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getIamApplication(GetIamApplicationArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getIamApplication(GetIamApplicationArgs.builder()
     *             .applicationId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIamApplicationResult> getIamApplication(GetIamApplicationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getIamApplication:getIamApplication", TypeShape.of(GetIamApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an existing IAM application.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamApplicationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getIamApplication(GetIamApplicationArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getIamApplication(GetIamApplicationArgs.builder()
     *             .applicationId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIamApplicationResult> getIamApplicationPlain(GetIamApplicationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getIamApplication:getIamApplication", TypeShape.of(GetIamApplicationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an existing IAM group. For more information, please
     * check [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#applications-83ce5e)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getIamGroup(GetIamGroupArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getIamGroup(GetIamGroupArgs.builder()
     *             .groupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIamGroupResult> getIamGroup() {
        return getIamGroup(GetIamGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing IAM group. For more information, please
     * check [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#applications-83ce5e)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getIamGroup(GetIamGroupArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getIamGroup(GetIamGroupArgs.builder()
     *             .groupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIamGroupResult> getIamGroupPlain() {
        return getIamGroupPlain(GetIamGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing IAM group. For more information, please
     * check [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#applications-83ce5e)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getIamGroup(GetIamGroupArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getIamGroup(GetIamGroupArgs.builder()
     *             .groupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIamGroupResult> getIamGroup(GetIamGroupArgs args) {
        return getIamGroup(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing IAM group. For more information, please
     * check [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#applications-83ce5e)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getIamGroup(GetIamGroupArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getIamGroup(GetIamGroupArgs.builder()
     *             .groupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIamGroupResult> getIamGroupPlain(GetIamGroupPlainArgs args) {
        return getIamGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an existing IAM group. For more information, please
     * check [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#applications-83ce5e)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getIamGroup(GetIamGroupArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getIamGroup(GetIamGroupArgs.builder()
     *             .groupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIamGroupResult> getIamGroup(GetIamGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getIamGroup:getIamGroup", TypeShape.of(GetIamGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an existing IAM group. For more information, please
     * check [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#applications-83ce5e)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getIamGroup(GetIamGroupArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getIamGroup(GetIamGroupArgs.builder()
     *             .groupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIamGroupResult> getIamGroupPlain(GetIamGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getIamGroup:getIamGroup", TypeShape.of(GetIamGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get SSH key information based on its ID or name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getIamSshKey(GetIamSshKeyArgs.builder()
     *             .sshKeyId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIamSshKeyResult> getIamSshKey() {
        return getIamSshKey(GetIamSshKeyArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get SSH key information based on its ID or name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getIamSshKey(GetIamSshKeyArgs.builder()
     *             .sshKeyId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIamSshKeyResult> getIamSshKeyPlain() {
        return getIamSshKeyPlain(GetIamSshKeyPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get SSH key information based on its ID or name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getIamSshKey(GetIamSshKeyArgs.builder()
     *             .sshKeyId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIamSshKeyResult> getIamSshKey(GetIamSshKeyArgs args) {
        return getIamSshKey(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get SSH key information based on its ID or name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getIamSshKey(GetIamSshKeyArgs.builder()
     *             .sshKeyId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIamSshKeyResult> getIamSshKeyPlain(GetIamSshKeyPlainArgs args) {
        return getIamSshKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get SSH key information based on its ID or name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getIamSshKey(GetIamSshKeyArgs.builder()
     *             .sshKeyId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIamSshKeyResult> getIamSshKey(GetIamSshKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getIamSshKey:getIamSshKey", TypeShape.of(GetIamSshKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get SSH key information based on its ID or name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamSshKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getIamSshKey(GetIamSshKeyArgs.builder()
     *             .sshKeyId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIamSshKeyResult> getIamSshKeyPlain(GetIamSshKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getIamSshKey:getIamSshKey", TypeShape.of(GetIamSshKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information on an existing IAM user based on its ID or email address.
     * For more information,
     * see [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#users-06bdcf).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findById = ScalewayFunctions.getIamUser(GetIamUserArgs.builder()
     *             .userId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var findByEmail = ScalewayFunctions.getIamUser(GetIamUserArgs.builder()
     *             .email(&#34;foo@bar.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIamUserResult> getIamUser() {
        return getIamUser(GetIamUserArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on an existing IAM user based on its ID or email address.
     * For more information,
     * see [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#users-06bdcf).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findById = ScalewayFunctions.getIamUser(GetIamUserArgs.builder()
     *             .userId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var findByEmail = ScalewayFunctions.getIamUser(GetIamUserArgs.builder()
     *             .email(&#34;foo@bar.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIamUserResult> getIamUserPlain() {
        return getIamUserPlain(GetIamUserPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on an existing IAM user based on its ID or email address.
     * For more information,
     * see [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#users-06bdcf).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findById = ScalewayFunctions.getIamUser(GetIamUserArgs.builder()
     *             .userId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var findByEmail = ScalewayFunctions.getIamUser(GetIamUserArgs.builder()
     *             .email(&#34;foo@bar.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIamUserResult> getIamUser(GetIamUserArgs args) {
        return getIamUser(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on an existing IAM user based on its ID or email address.
     * For more information,
     * see [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#users-06bdcf).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findById = ScalewayFunctions.getIamUser(GetIamUserArgs.builder()
     *             .userId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var findByEmail = ScalewayFunctions.getIamUser(GetIamUserArgs.builder()
     *             .email(&#34;foo@bar.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIamUserResult> getIamUserPlain(GetIamUserPlainArgs args) {
        return getIamUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information on an existing IAM user based on its ID or email address.
     * For more information,
     * see [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#users-06bdcf).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findById = ScalewayFunctions.getIamUser(GetIamUserArgs.builder()
     *             .userId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var findByEmail = ScalewayFunctions.getIamUser(GetIamUserArgs.builder()
     *             .email(&#34;foo@bar.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIamUserResult> getIamUser(GetIamUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getIamUser:getIamUser", TypeShape.of(GetIamUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information on an existing IAM user based on its ID or email address.
     * For more information,
     * see [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#users-06bdcf).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIamUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findById = ScalewayFunctions.getIamUser(GetIamUserArgs.builder()
     *             .userId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var findByEmail = ScalewayFunctions.getIamUser(GetIamUserArgs.builder()
     *             .email(&#34;foo@bar.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIamUserResult> getIamUserPlain(GetIamUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getIamUser:getIamUser", TypeShape.of(GetIamUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an instance image.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getInstanceImage(GetInstanceImageArgs.builder()
     *             .imageId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceImageResult> getInstanceImage() {
        return getInstanceImage(GetInstanceImageArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance image.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getInstanceImage(GetInstanceImageArgs.builder()
     *             .imageId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceImageResult> getInstanceImagePlain() {
        return getInstanceImagePlain(GetInstanceImagePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance image.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getInstanceImage(GetInstanceImageArgs.builder()
     *             .imageId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceImageResult> getInstanceImage(GetInstanceImageArgs args) {
        return getInstanceImage(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance image.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getInstanceImage(GetInstanceImageArgs.builder()
     *             .imageId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceImageResult> getInstanceImagePlain(GetInstanceImagePlainArgs args) {
        return getInstanceImagePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance image.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getInstanceImage(GetInstanceImageArgs.builder()
     *             .imageId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceImageResult> getInstanceImage(GetInstanceImageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getInstanceImage:getInstanceImage", TypeShape.of(GetInstanceImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an instance image.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getInstanceImage(GetInstanceImageArgs.builder()
     *             .imageId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceImageResult> getInstanceImagePlain(GetInstanceImagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getInstanceImage:getInstanceImage", TypeShape.of(GetInstanceImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an instance IP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getInstanceIp(GetInstanceIpArgs.builder()
     *             .id(&#34;fr-par-1/11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceIpResult> getInstanceIp() {
        return getInstanceIp(GetInstanceIpArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance IP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getInstanceIp(GetInstanceIpArgs.builder()
     *             .id(&#34;fr-par-1/11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceIpResult> getInstanceIpPlain() {
        return getInstanceIpPlain(GetInstanceIpPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance IP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getInstanceIp(GetInstanceIpArgs.builder()
     *             .id(&#34;fr-par-1/11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceIpResult> getInstanceIp(GetInstanceIpArgs args) {
        return getInstanceIp(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance IP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getInstanceIp(GetInstanceIpArgs.builder()
     *             .id(&#34;fr-par-1/11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceIpResult> getInstanceIpPlain(GetInstanceIpPlainArgs args) {
        return getInstanceIpPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance IP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getInstanceIp(GetInstanceIpArgs.builder()
     *             .id(&#34;fr-par-1/11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceIpResult> getInstanceIp(GetInstanceIpArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getInstanceIp:getInstanceIp", TypeShape.of(GetInstanceIpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an instance IP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getInstanceIp(GetInstanceIpArgs.builder()
     *             .id(&#34;fr-par-1/11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceIpResult> getInstanceIpPlain(GetInstanceIpPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getInstanceIp:getInstanceIp", TypeShape.of(GetInstanceIpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an instance private NIC.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstancePrivateNicArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byNicId = ScalewayFunctions.getInstancePrivateNic(GetInstancePrivateNicArgs.builder()
     *             .privateNicId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byPnId = ScalewayFunctions.getInstancePrivateNic(GetInstancePrivateNicArgs.builder()
     *             .privateNetworkId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byTags = ScalewayFunctions.getInstancePrivateNic(GetInstancePrivateNicArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .tags(&#34;mytag&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstancePrivateNicResult> getInstancePrivateNic(GetInstancePrivateNicArgs args) {
        return getInstancePrivateNic(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance private NIC.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstancePrivateNicArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byNicId = ScalewayFunctions.getInstancePrivateNic(GetInstancePrivateNicArgs.builder()
     *             .privateNicId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byPnId = ScalewayFunctions.getInstancePrivateNic(GetInstancePrivateNicArgs.builder()
     *             .privateNetworkId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byTags = ScalewayFunctions.getInstancePrivateNic(GetInstancePrivateNicArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .tags(&#34;mytag&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstancePrivateNicResult> getInstancePrivateNicPlain(GetInstancePrivateNicPlainArgs args) {
        return getInstancePrivateNicPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance private NIC.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstancePrivateNicArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byNicId = ScalewayFunctions.getInstancePrivateNic(GetInstancePrivateNicArgs.builder()
     *             .privateNicId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byPnId = ScalewayFunctions.getInstancePrivateNic(GetInstancePrivateNicArgs.builder()
     *             .privateNetworkId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byTags = ScalewayFunctions.getInstancePrivateNic(GetInstancePrivateNicArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .tags(&#34;mytag&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstancePrivateNicResult> getInstancePrivateNic(GetInstancePrivateNicArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getInstancePrivateNic:getInstancePrivateNic", TypeShape.of(GetInstancePrivateNicResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an instance private NIC.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstancePrivateNicArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byNicId = ScalewayFunctions.getInstancePrivateNic(GetInstancePrivateNicArgs.builder()
     *             .privateNicId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byPnId = ScalewayFunctions.getInstancePrivateNic(GetInstancePrivateNicArgs.builder()
     *             .privateNetworkId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byTags = ScalewayFunctions.getInstancePrivateNic(GetInstancePrivateNicArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .tags(&#34;mytag&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstancePrivateNicResult> getInstancePrivateNicPlain(GetInstancePrivateNicPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getInstancePrivateNic:getInstancePrivateNic", TypeShape.of(GetInstancePrivateNicResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Security Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceSecurityGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceSecurityGroup(GetInstanceSecurityGroupArgs.builder()
     *             .securityGroupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceSecurityGroupResult> getInstanceSecurityGroup() {
        return getInstanceSecurityGroup(GetInstanceSecurityGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Security Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceSecurityGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceSecurityGroup(GetInstanceSecurityGroupArgs.builder()
     *             .securityGroupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceSecurityGroupResult> getInstanceSecurityGroupPlain() {
        return getInstanceSecurityGroupPlain(GetInstanceSecurityGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Security Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceSecurityGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceSecurityGroup(GetInstanceSecurityGroupArgs.builder()
     *             .securityGroupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceSecurityGroupResult> getInstanceSecurityGroup(GetInstanceSecurityGroupArgs args) {
        return getInstanceSecurityGroup(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Security Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceSecurityGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceSecurityGroup(GetInstanceSecurityGroupArgs.builder()
     *             .securityGroupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceSecurityGroupResult> getInstanceSecurityGroupPlain(GetInstanceSecurityGroupPlainArgs args) {
        return getInstanceSecurityGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Security Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceSecurityGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceSecurityGroup(GetInstanceSecurityGroupArgs.builder()
     *             .securityGroupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceSecurityGroupResult> getInstanceSecurityGroup(GetInstanceSecurityGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getInstanceSecurityGroup:getInstanceSecurityGroup", TypeShape.of(GetInstanceSecurityGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Security Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceSecurityGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceSecurityGroup(GetInstanceSecurityGroupArgs.builder()
     *             .securityGroupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceSecurityGroupResult> getInstanceSecurityGroupPlain(GetInstanceSecurityGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getInstanceSecurityGroup:getInstanceSecurityGroup", TypeShape.of(GetInstanceSecurityGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an instance server.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceServer(GetInstanceServerArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceServerResult> getInstanceServer() {
        return getInstanceServer(GetInstanceServerArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance server.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceServer(GetInstanceServerArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceServerResult> getInstanceServerPlain() {
        return getInstanceServerPlain(GetInstanceServerPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance server.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceServer(GetInstanceServerArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceServerResult> getInstanceServer(GetInstanceServerArgs args) {
        return getInstanceServer(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance server.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceServer(GetInstanceServerArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceServerResult> getInstanceServerPlain(GetInstanceServerPlainArgs args) {
        return getInstanceServerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance server.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceServer(GetInstanceServerArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceServerResult> getInstanceServer(GetInstanceServerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getInstanceServer:getInstanceServer", TypeShape.of(GetInstanceServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an instance server.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceServer(GetInstanceServerArgs.builder()
     *             .serverId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceServerResult> getInstanceServerPlain(GetInstanceServerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getInstanceServer:getInstanceServer", TypeShape.of(GetInstanceServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple instance servers.
     * 
     * ## Examples
     * 
     * ### Basic
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceServers(GetInstanceServersArgs.builder()
     *             .name(&#34;myserver&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceServersResult> getInstanceServers() {
        return getInstanceServers(GetInstanceServersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple instance servers.
     * 
     * ## Examples
     * 
     * ### Basic
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceServers(GetInstanceServersArgs.builder()
     *             .name(&#34;myserver&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceServersResult> getInstanceServersPlain() {
        return getInstanceServersPlain(GetInstanceServersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple instance servers.
     * 
     * ## Examples
     * 
     * ### Basic
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceServers(GetInstanceServersArgs.builder()
     *             .name(&#34;myserver&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceServersResult> getInstanceServers(GetInstanceServersArgs args) {
        return getInstanceServers(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple instance servers.
     * 
     * ## Examples
     * 
     * ### Basic
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceServers(GetInstanceServersArgs.builder()
     *             .name(&#34;myserver&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceServersResult> getInstanceServersPlain(GetInstanceServersPlainArgs args) {
        return getInstanceServersPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple instance servers.
     * 
     * ## Examples
     * 
     * ### Basic
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceServers(GetInstanceServersArgs.builder()
     *             .name(&#34;myserver&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceServersResult> getInstanceServers(GetInstanceServersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getInstanceServers:getInstanceServers", TypeShape.of(GetInstanceServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple instance servers.
     * 
     * ## Examples
     * 
     * ### Basic
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getInstanceServers(GetInstanceServersArgs.builder()
     *             .name(&#34;myserver&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceServersResult> getInstanceServersPlain(GetInstanceServersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getInstanceServers:getInstanceServers", TypeShape.of(GetInstanceServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an instance snapshot.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getInstanceSnapshot(GetInstanceSnapshotArgs.builder()
     *             .name(&#34;my-snapshot-name&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getInstanceSnapshot(GetInstanceSnapshotArgs.builder()
     *             .snapshotId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceSnapshotResult> getInstanceSnapshot() {
        return getInstanceSnapshot(GetInstanceSnapshotArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance snapshot.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getInstanceSnapshot(GetInstanceSnapshotArgs.builder()
     *             .name(&#34;my-snapshot-name&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getInstanceSnapshot(GetInstanceSnapshotArgs.builder()
     *             .snapshotId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceSnapshotResult> getInstanceSnapshotPlain() {
        return getInstanceSnapshotPlain(GetInstanceSnapshotPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance snapshot.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getInstanceSnapshot(GetInstanceSnapshotArgs.builder()
     *             .name(&#34;my-snapshot-name&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getInstanceSnapshot(GetInstanceSnapshotArgs.builder()
     *             .snapshotId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceSnapshotResult> getInstanceSnapshot(GetInstanceSnapshotArgs args) {
        return getInstanceSnapshot(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance snapshot.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getInstanceSnapshot(GetInstanceSnapshotArgs.builder()
     *             .name(&#34;my-snapshot-name&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getInstanceSnapshot(GetInstanceSnapshotArgs.builder()
     *             .snapshotId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceSnapshotResult> getInstanceSnapshotPlain(GetInstanceSnapshotPlainArgs args) {
        return getInstanceSnapshotPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance snapshot.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getInstanceSnapshot(GetInstanceSnapshotArgs.builder()
     *             .name(&#34;my-snapshot-name&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getInstanceSnapshot(GetInstanceSnapshotArgs.builder()
     *             .snapshotId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceSnapshotResult> getInstanceSnapshot(GetInstanceSnapshotArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getInstanceSnapshot:getInstanceSnapshot", TypeShape.of(GetInstanceSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an instance snapshot.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getInstanceSnapshot(GetInstanceSnapshotArgs.builder()
     *             .name(&#34;my-snapshot-name&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getInstanceSnapshot(GetInstanceSnapshotArgs.builder()
     *             .snapshotId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceSnapshotResult> getInstanceSnapshotPlain(GetInstanceSnapshotPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getInstanceSnapshot:getInstanceSnapshot", TypeShape.of(GetInstanceSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an instance volume.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceVolumeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myVolume = ScalewayFunctions.getInstanceVolume(GetInstanceVolumeArgs.builder()
     *             .volumeId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceVolumeResult> getInstanceVolume() {
        return getInstanceVolume(GetInstanceVolumeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance volume.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceVolumeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myVolume = ScalewayFunctions.getInstanceVolume(GetInstanceVolumeArgs.builder()
     *             .volumeId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceVolumeResult> getInstanceVolumePlain() {
        return getInstanceVolumePlain(GetInstanceVolumePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance volume.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceVolumeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myVolume = ScalewayFunctions.getInstanceVolume(GetInstanceVolumeArgs.builder()
     *             .volumeId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceVolumeResult> getInstanceVolume(GetInstanceVolumeArgs args) {
        return getInstanceVolume(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance volume.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceVolumeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myVolume = ScalewayFunctions.getInstanceVolume(GetInstanceVolumeArgs.builder()
     *             .volumeId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceVolumeResult> getInstanceVolumePlain(GetInstanceVolumePlainArgs args) {
        return getInstanceVolumePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an instance volume.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceVolumeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myVolume = ScalewayFunctions.getInstanceVolume(GetInstanceVolumeArgs.builder()
     *             .volumeId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceVolumeResult> getInstanceVolume(GetInstanceVolumeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getInstanceVolume:getInstanceVolume", TypeShape.of(GetInstanceVolumeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an instance volume.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetInstanceVolumeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myVolume = ScalewayFunctions.getInstanceVolume(GetInstanceVolumeArgs.builder()
     *             .volumeId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceVolumeResult> getInstanceVolumePlain(GetInstanceVolumePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getInstanceVolume:getInstanceVolume", TypeShape.of(GetInstanceVolumeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an IOT Device.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIotDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDevice = ScalewayFunctions.getIotDevice(GetIotDeviceArgs.builder()
     *             .deviceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIotDeviceResult> getIotDevice() {
        return getIotDevice(GetIotDeviceArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an IOT Device.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIotDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDevice = ScalewayFunctions.getIotDevice(GetIotDeviceArgs.builder()
     *             .deviceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIotDeviceResult> getIotDevicePlain() {
        return getIotDevicePlain(GetIotDevicePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an IOT Device.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIotDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDevice = ScalewayFunctions.getIotDevice(GetIotDeviceArgs.builder()
     *             .deviceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIotDeviceResult> getIotDevice(GetIotDeviceArgs args) {
        return getIotDevice(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an IOT Device.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIotDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDevice = ScalewayFunctions.getIotDevice(GetIotDeviceArgs.builder()
     *             .deviceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIotDeviceResult> getIotDevicePlain(GetIotDevicePlainArgs args) {
        return getIotDevicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an IOT Device.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIotDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDevice = ScalewayFunctions.getIotDevice(GetIotDeviceArgs.builder()
     *             .deviceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIotDeviceResult> getIotDevice(GetIotDeviceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getIotDevice:getIotDevice", TypeShape.of(GetIotDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an IOT Device.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIotDeviceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDevice = ScalewayFunctions.getIotDevice(GetIotDeviceArgs.builder()
     *             .deviceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIotDeviceResult> getIotDevicePlain(GetIotDevicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getIotDevice:getIotDevice", TypeShape.of(GetIotDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an IOT Hub.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIotHubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myHub = ScalewayFunctions.getIotHub(GetIotHubArgs.builder()
     *             .hubId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIotHubResult> getIotHub() {
        return getIotHub(GetIotHubArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an IOT Hub.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIotHubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myHub = ScalewayFunctions.getIotHub(GetIotHubArgs.builder()
     *             .hubId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIotHubResult> getIotHubPlain() {
        return getIotHubPlain(GetIotHubPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an IOT Hub.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIotHubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myHub = ScalewayFunctions.getIotHub(GetIotHubArgs.builder()
     *             .hubId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIotHubResult> getIotHub(GetIotHubArgs args) {
        return getIotHub(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an IOT Hub.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIotHubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myHub = ScalewayFunctions.getIotHub(GetIotHubArgs.builder()
     *             .hubId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIotHubResult> getIotHubPlain(GetIotHubPlainArgs args) {
        return getIotHubPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an IOT Hub.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIotHubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myHub = ScalewayFunctions.getIotHub(GetIotHubArgs.builder()
     *             .hubId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIotHubResult> getIotHub(GetIotHubArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getIotHub:getIotHub", TypeShape.of(GetIotHubResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an IOT Hub.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetIotHubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myHub = ScalewayFunctions.getIotHub(GetIotHubArgs.builder()
     *             .hubId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIotHubResult> getIotHubPlain(GetIotHubPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getIotHub:getIotHub", TypeShape.of(GetIotHubResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Kubernetes Cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getK8sCluster(GetK8sClusterArgs.builder()
     *             .clusterId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetK8sClusterResult> getK8sCluster() {
        return getK8sCluster(GetK8sClusterArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Kubernetes Cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getK8sCluster(GetK8sClusterArgs.builder()
     *             .clusterId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetK8sClusterResult> getK8sClusterPlain() {
        return getK8sClusterPlain(GetK8sClusterPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Kubernetes Cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getK8sCluster(GetK8sClusterArgs.builder()
     *             .clusterId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetK8sClusterResult> getK8sCluster(GetK8sClusterArgs args) {
        return getK8sCluster(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Kubernetes Cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getK8sCluster(GetK8sClusterArgs.builder()
     *             .clusterId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetK8sClusterResult> getK8sClusterPlain(GetK8sClusterPlainArgs args) {
        return getK8sClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Kubernetes Cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getK8sCluster(GetK8sClusterArgs.builder()
     *             .clusterId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetK8sClusterResult> getK8sCluster(GetK8sClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getK8sCluster:getK8sCluster", TypeShape.of(GetK8sClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Kubernetes Cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getK8sCluster(GetK8sClusterArgs.builder()
     *             .clusterId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetK8sClusterResult> getK8sClusterPlain(GetK8sClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getK8sCluster:getK8sCluster", TypeShape.of(GetK8sClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Kubernetes Cluster&#39;s Pool.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getK8sPool(GetK8sPoolArgs.builder()
     *             .poolId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetK8sPoolResult> getK8sPool() {
        return getK8sPool(GetK8sPoolArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Kubernetes Cluster&#39;s Pool.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getK8sPool(GetK8sPoolArgs.builder()
     *             .poolId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetK8sPoolResult> getK8sPoolPlain() {
        return getK8sPoolPlain(GetK8sPoolPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Kubernetes Cluster&#39;s Pool.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getK8sPool(GetK8sPoolArgs.builder()
     *             .poolId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetK8sPoolResult> getK8sPool(GetK8sPoolArgs args) {
        return getK8sPool(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Kubernetes Cluster&#39;s Pool.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getK8sPool(GetK8sPoolArgs.builder()
     *             .poolId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetK8sPoolResult> getK8sPoolPlain(GetK8sPoolPlainArgs args) {
        return getK8sPoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Kubernetes Cluster&#39;s Pool.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getK8sPool(GetK8sPoolArgs.builder()
     *             .poolId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetK8sPoolResult> getK8sPool(GetK8sPoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getK8sPool:getK8sPool", TypeShape.of(GetK8sPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Kubernetes Cluster&#39;s Pool.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getK8sPool(GetK8sPoolArgs.builder()
     *             .poolId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetK8sPoolResult> getK8sPoolPlain(GetK8sPoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getK8sPool:getK8sPool", TypeShape.of(GetK8sPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Kubernetes version.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/k8s/api).
     * 
     * You can also use the [scaleway-cli](https://github.com/scaleway/scaleway-cli) with `scw k8s version list` to list all available versions.
     * 
     * ## Example Usage
     * ### Use the latest version
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var latest = ScalewayFunctions.getK8sVersion(GetK8sVersionArgs.builder()
     *             .name(&#34;latest&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Use a specific version
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getK8sVersion(GetK8sVersionArgs.builder()
     *             .name(&#34;1.26.0&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetK8sVersionResult> getK8sVersion(GetK8sVersionArgs args) {
        return getK8sVersion(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Kubernetes version.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/k8s/api).
     * 
     * You can also use the [scaleway-cli](https://github.com/scaleway/scaleway-cli) with `scw k8s version list` to list all available versions.
     * 
     * ## Example Usage
     * ### Use the latest version
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var latest = ScalewayFunctions.getK8sVersion(GetK8sVersionArgs.builder()
     *             .name(&#34;latest&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Use a specific version
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getK8sVersion(GetK8sVersionArgs.builder()
     *             .name(&#34;1.26.0&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetK8sVersionResult> getK8sVersionPlain(GetK8sVersionPlainArgs args) {
        return getK8sVersionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Kubernetes version.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/k8s/api).
     * 
     * You can also use the [scaleway-cli](https://github.com/scaleway/scaleway-cli) with `scw k8s version list` to list all available versions.
     * 
     * ## Example Usage
     * ### Use the latest version
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var latest = ScalewayFunctions.getK8sVersion(GetK8sVersionArgs.builder()
     *             .name(&#34;latest&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Use a specific version
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getK8sVersion(GetK8sVersionArgs.builder()
     *             .name(&#34;1.26.0&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetK8sVersionResult> getK8sVersion(GetK8sVersionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getK8sVersion:getK8sVersion", TypeShape.of(GetK8sVersionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Kubernetes version.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/k8s/api).
     * 
     * You can also use the [scaleway-cli](https://github.com/scaleway/scaleway-cli) with `scw k8s version list` to list all available versions.
     * 
     * ## Example Usage
     * ### Use the latest version
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var latest = ScalewayFunctions.getK8sVersion(GetK8sVersionArgs.builder()
     *             .name(&#34;latest&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Use a specific version
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetK8sVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getK8sVersion(GetK8sVersionArgs.builder()
     *             .name(&#34;1.26.0&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetK8sVersionResult> getK8sVersionPlain(GetK8sVersionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getK8sVersion:getK8sVersion", TypeShape.of(GetK8sVersionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Load Balancer.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getLb(GetLbArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getLb(GetLbArgs.builder()
     *             .lbId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbResult> getLb() {
        return getLb(GetLbArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Load Balancer.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getLb(GetLbArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getLb(GetLbArgs.builder()
     *             .lbId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbResult> getLbPlain() {
        return getLbPlain(GetLbPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Load Balancer.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getLb(GetLbArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getLb(GetLbArgs.builder()
     *             .lbId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbResult> getLb(GetLbArgs args) {
        return getLb(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Load Balancer.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getLb(GetLbArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getLb(GetLbArgs.builder()
     *             .lbId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbResult> getLbPlain(GetLbPlainArgs args) {
        return getLbPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Load Balancer.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getLb(GetLbArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getLb(GetLbArgs.builder()
     *             .lbId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbResult> getLb(GetLbArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getLb:getLb", TypeShape.of(GetLbResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Load Balancer.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getLb(GetLbArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getLb(GetLbArgs.builder()
     *             .lbId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbResult> getLbPlain(GetLbPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getLb:getLb", TypeShape.of(GetLbResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple Load Balancer ACLs.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byFrontID = ScalewayFunctions.getLbAcls(GetLbAclsArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .build());
     * 
     *         final var byFrontIDAndName = ScalewayFunctions.getLbAcls(GetLbAclsArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .name(&#34;tf-acls-datasource&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbAclsResult> getLbAcls(GetLbAclsArgs args) {
        return getLbAcls(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer ACLs.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byFrontID = ScalewayFunctions.getLbAcls(GetLbAclsArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .build());
     * 
     *         final var byFrontIDAndName = ScalewayFunctions.getLbAcls(GetLbAclsArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .name(&#34;tf-acls-datasource&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbAclsResult> getLbAclsPlain(GetLbAclsPlainArgs args) {
        return getLbAclsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer ACLs.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byFrontID = ScalewayFunctions.getLbAcls(GetLbAclsArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .build());
     * 
     *         final var byFrontIDAndName = ScalewayFunctions.getLbAcls(GetLbAclsArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .name(&#34;tf-acls-datasource&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbAclsResult> getLbAcls(GetLbAclsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getLbAcls:getLbAcls", TypeShape.of(GetLbAclsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple Load Balancer ACLs.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbAclsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byFrontID = ScalewayFunctions.getLbAcls(GetLbAclsArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .build());
     * 
     *         final var byFrontIDAndName = ScalewayFunctions.getLbAcls(GetLbAclsArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .name(&#34;tf-acls-datasource&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbAclsResult> getLbAclsPlain(GetLbAclsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getLbAcls:getLbAcls", TypeShape.of(GetLbAclsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about Scaleway Load-Balancer Backends.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#backends-cbf4eb).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbBackendArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var mainLbIp = new LbIp(&#34;mainLbIp&#34;);
     * 
     *         var mainLb = new Lb(&#34;mainLb&#34;, LbArgs.builder()        
     *             .ipId(mainLbIp.id())
     *             .type(&#34;LB-S&#34;)
     *             .build());
     * 
     *         var mainLbBackend = new LbBackend(&#34;mainLbBackend&#34;, LbBackendArgs.builder()        
     *             .lbId(mainLb.id())
     *             .forwardProtocol(&#34;http&#34;)
     *             .forwardPort(&#34;80&#34;)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbBackend(GetLbBackendArgs.builder()
     *             .backendId(mainLbBackend.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getLbBackend(GetLbBackendArgs.builder()
     *             .name(mainLbBackend.name())
     *             .lbId(mainLb.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbBackendResult> getLbBackend() {
        return getLbBackend(GetLbBackendArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Backends.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#backends-cbf4eb).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbBackendArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var mainLbIp = new LbIp(&#34;mainLbIp&#34;);
     * 
     *         var mainLb = new Lb(&#34;mainLb&#34;, LbArgs.builder()        
     *             .ipId(mainLbIp.id())
     *             .type(&#34;LB-S&#34;)
     *             .build());
     * 
     *         var mainLbBackend = new LbBackend(&#34;mainLbBackend&#34;, LbBackendArgs.builder()        
     *             .lbId(mainLb.id())
     *             .forwardProtocol(&#34;http&#34;)
     *             .forwardPort(&#34;80&#34;)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbBackend(GetLbBackendArgs.builder()
     *             .backendId(mainLbBackend.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getLbBackend(GetLbBackendArgs.builder()
     *             .name(mainLbBackend.name())
     *             .lbId(mainLb.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbBackendResult> getLbBackendPlain() {
        return getLbBackendPlain(GetLbBackendPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Backends.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#backends-cbf4eb).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbBackendArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var mainLbIp = new LbIp(&#34;mainLbIp&#34;);
     * 
     *         var mainLb = new Lb(&#34;mainLb&#34;, LbArgs.builder()        
     *             .ipId(mainLbIp.id())
     *             .type(&#34;LB-S&#34;)
     *             .build());
     * 
     *         var mainLbBackend = new LbBackend(&#34;mainLbBackend&#34;, LbBackendArgs.builder()        
     *             .lbId(mainLb.id())
     *             .forwardProtocol(&#34;http&#34;)
     *             .forwardPort(&#34;80&#34;)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbBackend(GetLbBackendArgs.builder()
     *             .backendId(mainLbBackend.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getLbBackend(GetLbBackendArgs.builder()
     *             .name(mainLbBackend.name())
     *             .lbId(mainLb.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbBackendResult> getLbBackend(GetLbBackendArgs args) {
        return getLbBackend(args, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Backends.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#backends-cbf4eb).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbBackendArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var mainLbIp = new LbIp(&#34;mainLbIp&#34;);
     * 
     *         var mainLb = new Lb(&#34;mainLb&#34;, LbArgs.builder()        
     *             .ipId(mainLbIp.id())
     *             .type(&#34;LB-S&#34;)
     *             .build());
     * 
     *         var mainLbBackend = new LbBackend(&#34;mainLbBackend&#34;, LbBackendArgs.builder()        
     *             .lbId(mainLb.id())
     *             .forwardProtocol(&#34;http&#34;)
     *             .forwardPort(&#34;80&#34;)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbBackend(GetLbBackendArgs.builder()
     *             .backendId(mainLbBackend.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getLbBackend(GetLbBackendArgs.builder()
     *             .name(mainLbBackend.name())
     *             .lbId(mainLb.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbBackendResult> getLbBackendPlain(GetLbBackendPlainArgs args) {
        return getLbBackendPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Backends.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#backends-cbf4eb).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbBackendArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var mainLbIp = new LbIp(&#34;mainLbIp&#34;);
     * 
     *         var mainLb = new Lb(&#34;mainLb&#34;, LbArgs.builder()        
     *             .ipId(mainLbIp.id())
     *             .type(&#34;LB-S&#34;)
     *             .build());
     * 
     *         var mainLbBackend = new LbBackend(&#34;mainLbBackend&#34;, LbBackendArgs.builder()        
     *             .lbId(mainLb.id())
     *             .forwardProtocol(&#34;http&#34;)
     *             .forwardPort(&#34;80&#34;)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbBackend(GetLbBackendArgs.builder()
     *             .backendId(mainLbBackend.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getLbBackend(GetLbBackendArgs.builder()
     *             .name(mainLbBackend.name())
     *             .lbId(mainLb.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbBackendResult> getLbBackend(GetLbBackendArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getLbBackend:getLbBackend", TypeShape.of(GetLbBackendResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about Scaleway Load-Balancer Backends.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#backends-cbf4eb).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbBackendArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var mainLbIp = new LbIp(&#34;mainLbIp&#34;);
     * 
     *         var mainLb = new Lb(&#34;mainLb&#34;, LbArgs.builder()        
     *             .ipId(mainLbIp.id())
     *             .type(&#34;LB-S&#34;)
     *             .build());
     * 
     *         var mainLbBackend = new LbBackend(&#34;mainLbBackend&#34;, LbBackendArgs.builder()        
     *             .lbId(mainLb.id())
     *             .forwardProtocol(&#34;http&#34;)
     *             .forwardPort(&#34;80&#34;)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbBackend(GetLbBackendArgs.builder()
     *             .backendId(mainLbBackend.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getLbBackend(GetLbBackendArgs.builder()
     *             .name(mainLbBackend.name())
     *             .lbId(mainLb.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbBackendResult> getLbBackendPlain(GetLbBackendPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getLbBackend:getLbBackend", TypeShape.of(GetLbBackendResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple Load Balancer Backends.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbBackendsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byLBID = ScalewayFunctions.getLbBackends(GetLbBackendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .build());
     * 
     *         final var byLBIDAndName = ScalewayFunctions.getLbBackends(GetLbBackendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .name(&#34;tf-backend-datasource&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbBackendsResult> getLbBackends(GetLbBackendsArgs args) {
        return getLbBackends(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer Backends.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbBackendsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byLBID = ScalewayFunctions.getLbBackends(GetLbBackendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .build());
     * 
     *         final var byLBIDAndName = ScalewayFunctions.getLbBackends(GetLbBackendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .name(&#34;tf-backend-datasource&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbBackendsResult> getLbBackendsPlain(GetLbBackendsPlainArgs args) {
        return getLbBackendsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer Backends.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbBackendsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byLBID = ScalewayFunctions.getLbBackends(GetLbBackendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .build());
     * 
     *         final var byLBIDAndName = ScalewayFunctions.getLbBackends(GetLbBackendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .name(&#34;tf-backend-datasource&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbBackendsResult> getLbBackends(GetLbBackendsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getLbBackends:getLbBackends", TypeShape.of(GetLbBackendsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple Load Balancer Backends.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbBackendsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byLBID = ScalewayFunctions.getLbBackends(GetLbBackendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .build());
     * 
     *         final var byLBIDAndName = ScalewayFunctions.getLbBackends(GetLbBackendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .name(&#34;tf-backend-datasource&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbBackendsResult> getLbBackendsPlain(GetLbBackendsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getLbBackends:getLbBackends", TypeShape.of(GetLbBackendsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about Scaleway Load-Balancer Certificates.
     * 
     * This data source can prove useful when a module accepts an LB Certificate as an input variable and needs to, for example, determine the security of a certificate for your LB Frontend associated with your domain, etc.
     * 
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#certificate-330754).
     * 
     * ## Examples
     * 
     */
    public static Output<GetLbCertificateResult> getLbCertificate() {
        return getLbCertificate(GetLbCertificateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Certificates.
     * 
     * This data source can prove useful when a module accepts an LB Certificate as an input variable and needs to, for example, determine the security of a certificate for your LB Frontend associated with your domain, etc.
     * 
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#certificate-330754).
     * 
     * ## Examples
     * 
     */
    public static CompletableFuture<GetLbCertificateResult> getLbCertificatePlain() {
        return getLbCertificatePlain(GetLbCertificatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Certificates.
     * 
     * This data source can prove useful when a module accepts an LB Certificate as an input variable and needs to, for example, determine the security of a certificate for your LB Frontend associated with your domain, etc.
     * 
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#certificate-330754).
     * 
     * ## Examples
     * 
     */
    public static Output<GetLbCertificateResult> getLbCertificate(GetLbCertificateArgs args) {
        return getLbCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Certificates.
     * 
     * This data source can prove useful when a module accepts an LB Certificate as an input variable and needs to, for example, determine the security of a certificate for your LB Frontend associated with your domain, etc.
     * 
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#certificate-330754).
     * 
     * ## Examples
     * 
     */
    public static CompletableFuture<GetLbCertificateResult> getLbCertificatePlain(GetLbCertificatePlainArgs args) {
        return getLbCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Certificates.
     * 
     * This data source can prove useful when a module accepts an LB Certificate as an input variable and needs to, for example, determine the security of a certificate for your LB Frontend associated with your domain, etc.
     * 
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#certificate-330754).
     * 
     * ## Examples
     * 
     */
    public static Output<GetLbCertificateResult> getLbCertificate(GetLbCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getLbCertificate:getLbCertificate", TypeShape.of(GetLbCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about Scaleway Load-Balancer Certificates.
     * 
     * This data source can prove useful when a module accepts an LB Certificate as an input variable and needs to, for example, determine the security of a certificate for your LB Frontend associated with your domain, etc.
     * 
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#certificate-330754).
     * 
     * ## Examples
     * 
     */
    public static CompletableFuture<GetLbCertificateResult> getLbCertificatePlain(GetLbCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getLbCertificate:getLbCertificate", TypeShape.of(GetLbCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about Scaleway Load-Balancer Frontends.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#frontends-a6a28d).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.LbFrontend;
     * import com.pulumi.scaleway.LbFrontendArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbFrontendArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var ip01 = new LbIp(&#34;ip01&#34;);
     * 
     *         var lb01 = new Lb(&#34;lb01&#34;, LbArgs.builder()        
     *             .ipId(ip01.id())
     *             .type(&#34;lb-s&#34;)
     *             .build());
     * 
     *         var bkd01 = new LbBackend(&#34;bkd01&#34;, LbBackendArgs.builder()        
     *             .lbId(lb01.id())
     *             .forwardProtocol(&#34;tcp&#34;)
     *             .forwardPort(80)
     *             .proxyProtocol(&#34;none&#34;)
     *             .build());
     * 
     *         var frt01 = new LbFrontend(&#34;frt01&#34;, LbFrontendArgs.builder()        
     *             .lbId(lb01.id())
     *             .backendId(bkd01.id())
     *             .inboundPort(80)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbFrontend(GetLbFrontendArgs.builder()
     *             .frontendId(frt01.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getLbFrontend(GetLbFrontendArgs.builder()
     *             .name(frt01.name())
     *             .lbId(lb01.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbFrontendResult> getLbFrontend() {
        return getLbFrontend(GetLbFrontendArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Frontends.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#frontends-a6a28d).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.LbFrontend;
     * import com.pulumi.scaleway.LbFrontendArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbFrontendArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var ip01 = new LbIp(&#34;ip01&#34;);
     * 
     *         var lb01 = new Lb(&#34;lb01&#34;, LbArgs.builder()        
     *             .ipId(ip01.id())
     *             .type(&#34;lb-s&#34;)
     *             .build());
     * 
     *         var bkd01 = new LbBackend(&#34;bkd01&#34;, LbBackendArgs.builder()        
     *             .lbId(lb01.id())
     *             .forwardProtocol(&#34;tcp&#34;)
     *             .forwardPort(80)
     *             .proxyProtocol(&#34;none&#34;)
     *             .build());
     * 
     *         var frt01 = new LbFrontend(&#34;frt01&#34;, LbFrontendArgs.builder()        
     *             .lbId(lb01.id())
     *             .backendId(bkd01.id())
     *             .inboundPort(80)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbFrontend(GetLbFrontendArgs.builder()
     *             .frontendId(frt01.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getLbFrontend(GetLbFrontendArgs.builder()
     *             .name(frt01.name())
     *             .lbId(lb01.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbFrontendResult> getLbFrontendPlain() {
        return getLbFrontendPlain(GetLbFrontendPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Frontends.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#frontends-a6a28d).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.LbFrontend;
     * import com.pulumi.scaleway.LbFrontendArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbFrontendArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var ip01 = new LbIp(&#34;ip01&#34;);
     * 
     *         var lb01 = new Lb(&#34;lb01&#34;, LbArgs.builder()        
     *             .ipId(ip01.id())
     *             .type(&#34;lb-s&#34;)
     *             .build());
     * 
     *         var bkd01 = new LbBackend(&#34;bkd01&#34;, LbBackendArgs.builder()        
     *             .lbId(lb01.id())
     *             .forwardProtocol(&#34;tcp&#34;)
     *             .forwardPort(80)
     *             .proxyProtocol(&#34;none&#34;)
     *             .build());
     * 
     *         var frt01 = new LbFrontend(&#34;frt01&#34;, LbFrontendArgs.builder()        
     *             .lbId(lb01.id())
     *             .backendId(bkd01.id())
     *             .inboundPort(80)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbFrontend(GetLbFrontendArgs.builder()
     *             .frontendId(frt01.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getLbFrontend(GetLbFrontendArgs.builder()
     *             .name(frt01.name())
     *             .lbId(lb01.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbFrontendResult> getLbFrontend(GetLbFrontendArgs args) {
        return getLbFrontend(args, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Frontends.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#frontends-a6a28d).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.LbFrontend;
     * import com.pulumi.scaleway.LbFrontendArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbFrontendArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var ip01 = new LbIp(&#34;ip01&#34;);
     * 
     *         var lb01 = new Lb(&#34;lb01&#34;, LbArgs.builder()        
     *             .ipId(ip01.id())
     *             .type(&#34;lb-s&#34;)
     *             .build());
     * 
     *         var bkd01 = new LbBackend(&#34;bkd01&#34;, LbBackendArgs.builder()        
     *             .lbId(lb01.id())
     *             .forwardProtocol(&#34;tcp&#34;)
     *             .forwardPort(80)
     *             .proxyProtocol(&#34;none&#34;)
     *             .build());
     * 
     *         var frt01 = new LbFrontend(&#34;frt01&#34;, LbFrontendArgs.builder()        
     *             .lbId(lb01.id())
     *             .backendId(bkd01.id())
     *             .inboundPort(80)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbFrontend(GetLbFrontendArgs.builder()
     *             .frontendId(frt01.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getLbFrontend(GetLbFrontendArgs.builder()
     *             .name(frt01.name())
     *             .lbId(lb01.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbFrontendResult> getLbFrontendPlain(GetLbFrontendPlainArgs args) {
        return getLbFrontendPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Frontends.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#frontends-a6a28d).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.LbFrontend;
     * import com.pulumi.scaleway.LbFrontendArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbFrontendArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var ip01 = new LbIp(&#34;ip01&#34;);
     * 
     *         var lb01 = new Lb(&#34;lb01&#34;, LbArgs.builder()        
     *             .ipId(ip01.id())
     *             .type(&#34;lb-s&#34;)
     *             .build());
     * 
     *         var bkd01 = new LbBackend(&#34;bkd01&#34;, LbBackendArgs.builder()        
     *             .lbId(lb01.id())
     *             .forwardProtocol(&#34;tcp&#34;)
     *             .forwardPort(80)
     *             .proxyProtocol(&#34;none&#34;)
     *             .build());
     * 
     *         var frt01 = new LbFrontend(&#34;frt01&#34;, LbFrontendArgs.builder()        
     *             .lbId(lb01.id())
     *             .backendId(bkd01.id())
     *             .inboundPort(80)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbFrontend(GetLbFrontendArgs.builder()
     *             .frontendId(frt01.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getLbFrontend(GetLbFrontendArgs.builder()
     *             .name(frt01.name())
     *             .lbId(lb01.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbFrontendResult> getLbFrontend(GetLbFrontendArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getLbFrontend:getLbFrontend", TypeShape.of(GetLbFrontendResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about Scaleway Load-Balancer Frontends.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#frontends-a6a28d).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.LbFrontend;
     * import com.pulumi.scaleway.LbFrontendArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbFrontendArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var ip01 = new LbIp(&#34;ip01&#34;);
     * 
     *         var lb01 = new Lb(&#34;lb01&#34;, LbArgs.builder()        
     *             .ipId(ip01.id())
     *             .type(&#34;lb-s&#34;)
     *             .build());
     * 
     *         var bkd01 = new LbBackend(&#34;bkd01&#34;, LbBackendArgs.builder()        
     *             .lbId(lb01.id())
     *             .forwardProtocol(&#34;tcp&#34;)
     *             .forwardPort(80)
     *             .proxyProtocol(&#34;none&#34;)
     *             .build());
     * 
     *         var frt01 = new LbFrontend(&#34;frt01&#34;, LbFrontendArgs.builder()        
     *             .lbId(lb01.id())
     *             .backendId(bkd01.id())
     *             .inboundPort(80)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbFrontend(GetLbFrontendArgs.builder()
     *             .frontendId(frt01.id())
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getLbFrontend(GetLbFrontendArgs.builder()
     *             .name(frt01.name())
     *             .lbId(lb01.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbFrontendResult> getLbFrontendPlain(GetLbFrontendPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getLbFrontend:getLbFrontend", TypeShape.of(GetLbFrontendResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple Load Balancer Frontends.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbFrontendsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byLBID = ScalewayFunctions.getLbFrontends(GetLbFrontendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .build());
     * 
     *         final var byLBIDAndName = ScalewayFunctions.getLbFrontends(GetLbFrontendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .name(&#34;tf-frontend-datasource&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbFrontendsResult> getLbFrontends(GetLbFrontendsArgs args) {
        return getLbFrontends(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer Frontends.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbFrontendsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byLBID = ScalewayFunctions.getLbFrontends(GetLbFrontendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .build());
     * 
     *         final var byLBIDAndName = ScalewayFunctions.getLbFrontends(GetLbFrontendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .name(&#34;tf-frontend-datasource&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbFrontendsResult> getLbFrontendsPlain(GetLbFrontendsPlainArgs args) {
        return getLbFrontendsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer Frontends.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbFrontendsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byLBID = ScalewayFunctions.getLbFrontends(GetLbFrontendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .build());
     * 
     *         final var byLBIDAndName = ScalewayFunctions.getLbFrontends(GetLbFrontendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .name(&#34;tf-frontend-datasource&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbFrontendsResult> getLbFrontends(GetLbFrontendsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getLbFrontends:getLbFrontends", TypeShape.of(GetLbFrontendsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple Load Balancer Frontends.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbFrontendsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byLBID = ScalewayFunctions.getLbFrontends(GetLbFrontendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .build());
     * 
     *         final var byLBIDAndName = ScalewayFunctions.getLbFrontends(GetLbFrontendsArgs.builder()
     *             .lbId(scaleway_lb.lb01().id())
     *             .name(&#34;tf-frontend-datasource&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbFrontendsResult> getLbFrontendsPlain(GetLbFrontendsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getLbFrontends:getLbFrontends", TypeShape.of(GetLbFrontendsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Load Balancer IP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getLbIp(GetLbIpArgs.builder()
     *             .ipId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbIpResult> getLbIp() {
        return getLbIp(GetLbIpArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Load Balancer IP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getLbIp(GetLbIpArgs.builder()
     *             .ipId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbIpResult> getLbIpPlain() {
        return getLbIpPlain(GetLbIpPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Load Balancer IP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getLbIp(GetLbIpArgs.builder()
     *             .ipId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbIpResult> getLbIp(GetLbIpArgs args) {
        return getLbIp(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Load Balancer IP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getLbIp(GetLbIpArgs.builder()
     *             .ipId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbIpResult> getLbIpPlain(GetLbIpPlainArgs args) {
        return getLbIpPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Load Balancer IP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getLbIp(GetLbIpArgs.builder()
     *             .ipId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbIpResult> getLbIp(GetLbIpArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getLbIp:getLbIp", TypeShape.of(GetLbIpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Load Balancer IP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myIp = ScalewayFunctions.getLbIp(GetLbIpArgs.builder()
     *             .ipId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbIpResult> getLbIpPlain(GetLbIpPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getLbIp:getLbIp", TypeShape.of(GetLbIpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple Load Balancer IPs.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbIpsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getLbIps(GetLbIpsArgs.builder()
     *             .ipCidrRange(&#34;0.0.0.0/0&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbIpsResult> getLbIps() {
        return getLbIps(GetLbIpsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer IPs.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbIpsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getLbIps(GetLbIpsArgs.builder()
     *             .ipCidrRange(&#34;0.0.0.0/0&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbIpsResult> getLbIpsPlain() {
        return getLbIpsPlain(GetLbIpsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer IPs.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbIpsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getLbIps(GetLbIpsArgs.builder()
     *             .ipCidrRange(&#34;0.0.0.0/0&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbIpsResult> getLbIps(GetLbIpsArgs args) {
        return getLbIps(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer IPs.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbIpsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getLbIps(GetLbIpsArgs.builder()
     *             .ipCidrRange(&#34;0.0.0.0/0&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbIpsResult> getLbIpsPlain(GetLbIpsPlainArgs args) {
        return getLbIpsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer IPs.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbIpsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getLbIps(GetLbIpsArgs.builder()
     *             .ipCidrRange(&#34;0.0.0.0/0&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbIpsResult> getLbIps(GetLbIpsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getLbIps:getLbIps", TypeShape.of(GetLbIpsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple Load Balancer IPs.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbIpsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getLbIps(GetLbIpsArgs.builder()
     *             .ipCidrRange(&#34;0.0.0.0/0&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbIpsResult> getLbIpsPlain(GetLbIpsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getLbIps:getLbIps", TypeShape.of(GetLbIpsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about Scaleway Load-Balancer Routes.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#route-ff94b7).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.LbFrontend;
     * import com.pulumi.scaleway.LbFrontendArgs;
     * import com.pulumi.scaleway.LbRoute;
     * import com.pulumi.scaleway.LbRouteArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var ip01 = new LbIp(&#34;ip01&#34;);
     * 
     *         var lb01 = new Lb(&#34;lb01&#34;, LbArgs.builder()        
     *             .ipId(ip01.id())
     *             .type(&#34;lb-s&#34;)
     *             .build());
     * 
     *         var bkd01 = new LbBackend(&#34;bkd01&#34;, LbBackendArgs.builder()        
     *             .lbId(lb01.id())
     *             .forwardProtocol(&#34;tcp&#34;)
     *             .forwardPort(80)
     *             .proxyProtocol(&#34;none&#34;)
     *             .build());
     * 
     *         var frt01 = new LbFrontend(&#34;frt01&#34;, LbFrontendArgs.builder()        
     *             .lbId(lb01.id())
     *             .backendId(bkd01.id())
     *             .inboundPort(80)
     *             .build());
     * 
     *         var rt01 = new LbRoute(&#34;rt01&#34;, LbRouteArgs.builder()        
     *             .frontendId(frt01.id())
     *             .backendId(bkd01.id())
     *             .matchSni(&#34;sni.scaleway.com&#34;)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbRoute(GetLbRouteArgs.builder()
     *             .routeId(rt01.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbRouteResult> getLbRoute(GetLbRouteArgs args) {
        return getLbRoute(args, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Routes.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#route-ff94b7).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.LbFrontend;
     * import com.pulumi.scaleway.LbFrontendArgs;
     * import com.pulumi.scaleway.LbRoute;
     * import com.pulumi.scaleway.LbRouteArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var ip01 = new LbIp(&#34;ip01&#34;);
     * 
     *         var lb01 = new Lb(&#34;lb01&#34;, LbArgs.builder()        
     *             .ipId(ip01.id())
     *             .type(&#34;lb-s&#34;)
     *             .build());
     * 
     *         var bkd01 = new LbBackend(&#34;bkd01&#34;, LbBackendArgs.builder()        
     *             .lbId(lb01.id())
     *             .forwardProtocol(&#34;tcp&#34;)
     *             .forwardPort(80)
     *             .proxyProtocol(&#34;none&#34;)
     *             .build());
     * 
     *         var frt01 = new LbFrontend(&#34;frt01&#34;, LbFrontendArgs.builder()        
     *             .lbId(lb01.id())
     *             .backendId(bkd01.id())
     *             .inboundPort(80)
     *             .build());
     * 
     *         var rt01 = new LbRoute(&#34;rt01&#34;, LbRouteArgs.builder()        
     *             .frontendId(frt01.id())
     *             .backendId(bkd01.id())
     *             .matchSni(&#34;sni.scaleway.com&#34;)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbRoute(GetLbRouteArgs.builder()
     *             .routeId(rt01.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbRouteResult> getLbRoutePlain(GetLbRoutePlainArgs args) {
        return getLbRoutePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about Scaleway Load-Balancer Routes.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#route-ff94b7).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.LbFrontend;
     * import com.pulumi.scaleway.LbFrontendArgs;
     * import com.pulumi.scaleway.LbRoute;
     * import com.pulumi.scaleway.LbRouteArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var ip01 = new LbIp(&#34;ip01&#34;);
     * 
     *         var lb01 = new Lb(&#34;lb01&#34;, LbArgs.builder()        
     *             .ipId(ip01.id())
     *             .type(&#34;lb-s&#34;)
     *             .build());
     * 
     *         var bkd01 = new LbBackend(&#34;bkd01&#34;, LbBackendArgs.builder()        
     *             .lbId(lb01.id())
     *             .forwardProtocol(&#34;tcp&#34;)
     *             .forwardPort(80)
     *             .proxyProtocol(&#34;none&#34;)
     *             .build());
     * 
     *         var frt01 = new LbFrontend(&#34;frt01&#34;, LbFrontendArgs.builder()        
     *             .lbId(lb01.id())
     *             .backendId(bkd01.id())
     *             .inboundPort(80)
     *             .build());
     * 
     *         var rt01 = new LbRoute(&#34;rt01&#34;, LbRouteArgs.builder()        
     *             .frontendId(frt01.id())
     *             .backendId(bkd01.id())
     *             .matchSni(&#34;sni.scaleway.com&#34;)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbRoute(GetLbRouteArgs.builder()
     *             .routeId(rt01.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbRouteResult> getLbRoute(GetLbRouteArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getLbRoute:getLbRoute", TypeShape.of(GetLbRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about Scaleway Load-Balancer Routes.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#route-ff94b7).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.LbIp;
     * import com.pulumi.scaleway.Lb;
     * import com.pulumi.scaleway.LbArgs;
     * import com.pulumi.scaleway.LbBackend;
     * import com.pulumi.scaleway.LbBackendArgs;
     * import com.pulumi.scaleway.LbFrontend;
     * import com.pulumi.scaleway.LbFrontendArgs;
     * import com.pulumi.scaleway.LbRoute;
     * import com.pulumi.scaleway.LbRouteArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbRouteArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var ip01 = new LbIp(&#34;ip01&#34;);
     * 
     *         var lb01 = new Lb(&#34;lb01&#34;, LbArgs.builder()        
     *             .ipId(ip01.id())
     *             .type(&#34;lb-s&#34;)
     *             .build());
     * 
     *         var bkd01 = new LbBackend(&#34;bkd01&#34;, LbBackendArgs.builder()        
     *             .lbId(lb01.id())
     *             .forwardProtocol(&#34;tcp&#34;)
     *             .forwardPort(80)
     *             .proxyProtocol(&#34;none&#34;)
     *             .build());
     * 
     *         var frt01 = new LbFrontend(&#34;frt01&#34;, LbFrontendArgs.builder()        
     *             .lbId(lb01.id())
     *             .backendId(bkd01.id())
     *             .inboundPort(80)
     *             .build());
     * 
     *         var rt01 = new LbRoute(&#34;rt01&#34;, LbRouteArgs.builder()        
     *             .frontendId(frt01.id())
     *             .backendId(bkd01.id())
     *             .matchSni(&#34;sni.scaleway.com&#34;)
     *             .build());
     * 
     *         final var byID = ScalewayFunctions.getLbRoute(GetLbRouteArgs.builder()
     *             .routeId(rt01.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbRouteResult> getLbRoutePlain(GetLbRoutePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getLbRoute:getLbRoute", TypeShape.of(GetLbRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple Load Balancer Routes.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byFrontendID = ScalewayFunctions.getLbRoutes(GetLbRoutesArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .build());
     * 
     *         final var myKey = ScalewayFunctions.getLbRoutes(GetLbRoutesArgs.builder()
     *             .frontendId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbRoutesResult> getLbRoutes() {
        return getLbRoutes(GetLbRoutesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer Routes.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byFrontendID = ScalewayFunctions.getLbRoutes(GetLbRoutesArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .build());
     * 
     *         final var myKey = ScalewayFunctions.getLbRoutes(GetLbRoutesArgs.builder()
     *             .frontendId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbRoutesResult> getLbRoutesPlain() {
        return getLbRoutesPlain(GetLbRoutesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer Routes.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byFrontendID = ScalewayFunctions.getLbRoutes(GetLbRoutesArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .build());
     * 
     *         final var myKey = ScalewayFunctions.getLbRoutes(GetLbRoutesArgs.builder()
     *             .frontendId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbRoutesResult> getLbRoutes(GetLbRoutesArgs args) {
        return getLbRoutes(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer Routes.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byFrontendID = ScalewayFunctions.getLbRoutes(GetLbRoutesArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .build());
     * 
     *         final var myKey = ScalewayFunctions.getLbRoutes(GetLbRoutesArgs.builder()
     *             .frontendId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbRoutesResult> getLbRoutesPlain(GetLbRoutesPlainArgs args) {
        return getLbRoutesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancer Routes.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byFrontendID = ScalewayFunctions.getLbRoutes(GetLbRoutesArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .build());
     * 
     *         final var myKey = ScalewayFunctions.getLbRoutes(GetLbRoutesArgs.builder()
     *             .frontendId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbRoutesResult> getLbRoutes(GetLbRoutesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getLbRoutes:getLbRoutes", TypeShape.of(GetLbRoutesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple Load Balancer Routes.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbRoutesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byFrontendID = ScalewayFunctions.getLbRoutes(GetLbRoutesArgs.builder()
     *             .frontendId(scaleway_lb_frontend.frt01().id())
     *             .build());
     * 
     *         final var myKey = ScalewayFunctions.getLbRoutes(GetLbRoutesArgs.builder()
     *             .frontendId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbRoutesResult> getLbRoutesPlain(GetLbRoutesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getLbRoutes:getLbRoutes", TypeShape.of(GetLbRoutesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple Load Balancers.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getLbs(GetLbsArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbsResult> getLbs() {
        return getLbs(GetLbsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancers.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getLbs(GetLbsArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbsResult> getLbsPlain() {
        return getLbsPlain(GetLbsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancers.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getLbs(GetLbsArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbsResult> getLbs(GetLbsArgs args) {
        return getLbs(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancers.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getLbs(GetLbsArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbsResult> getLbsPlain(GetLbsPlainArgs args) {
        return getLbsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about multiple Load Balancers.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getLbs(GetLbsArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLbsResult> getLbs(GetLbsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getLbs:getLbs", TypeShape.of(GetLbsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about multiple Load Balancers.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetLbsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myKey = ScalewayFunctions.getLbs(GetLbsArgs.builder()
     *             .name(&#34;foobar&#34;)
     *             .zone(&#34;fr-par-2&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLbsResult> getLbsPlain(GetLbsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getLbs:getLbs", TypeShape.of(GetLbsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets local image ID of an image from its label name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetMarketplaceImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getMarketplaceImage(GetMarketplaceImageArgs.builder()
     *             .label(&#34;ubuntu_jammy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetMarketplaceImageResult> getMarketplaceImage(GetMarketplaceImageArgs args) {
        return getMarketplaceImage(args, InvokeOptions.Empty);
    }
    /**
     * Gets local image ID of an image from its label name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetMarketplaceImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getMarketplaceImage(GetMarketplaceImageArgs.builder()
     *             .label(&#34;ubuntu_jammy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetMarketplaceImageResult> getMarketplaceImagePlain(GetMarketplaceImagePlainArgs args) {
        return getMarketplaceImagePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets local image ID of an image from its label name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetMarketplaceImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getMarketplaceImage(GetMarketplaceImageArgs.builder()
     *             .label(&#34;ubuntu_jammy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetMarketplaceImageResult> getMarketplaceImage(GetMarketplaceImageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getMarketplaceImage:getMarketplaceImage", TypeShape.of(GetMarketplaceImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets local image ID of an image from its label name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetMarketplaceImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getMarketplaceImage(GetMarketplaceImageArgs.builder()
     *             .label(&#34;ubuntu_jammy&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetMarketplaceImageResult> getMarketplaceImagePlain(GetMarketplaceImagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getMarketplaceImage:getMarketplaceImage", TypeShape.of(GetMarketplaceImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the Bucket.
     * For more information, see [the documentation](https://www.scaleway.com/en/docs/object-storage-feature/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ObjectBucket;
     * import com.pulumi.scaleway.ObjectBucketArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new ObjectBucket(&#34;main&#34;, ObjectBucketArgs.builder()        
     *             .tags(Map.of(&#34;foo&#34;, &#34;bar&#34;))
     *             .build());
     * 
     *         final var selected = ScalewayFunctions.getObjectBucket(GetObjectBucketArgs.builder()
     *             .name(&#34;bucket.test.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Fetching the bucket from a specific project
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var selected = ScalewayFunctions.getObjectBucket(GetObjectBucketArgs.builder()
     *             .name(&#34;bucket.test.com&#34;)
     *             .projectId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetObjectBucketResult> getObjectBucket() {
        return getObjectBucket(GetObjectBucketArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about the Bucket.
     * For more information, see [the documentation](https://www.scaleway.com/en/docs/object-storage-feature/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ObjectBucket;
     * import com.pulumi.scaleway.ObjectBucketArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new ObjectBucket(&#34;main&#34;, ObjectBucketArgs.builder()        
     *             .tags(Map.of(&#34;foo&#34;, &#34;bar&#34;))
     *             .build());
     * 
     *         final var selected = ScalewayFunctions.getObjectBucket(GetObjectBucketArgs.builder()
     *             .name(&#34;bucket.test.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Fetching the bucket from a specific project
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var selected = ScalewayFunctions.getObjectBucket(GetObjectBucketArgs.builder()
     *             .name(&#34;bucket.test.com&#34;)
     *             .projectId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetObjectBucketResult> getObjectBucketPlain() {
        return getObjectBucketPlain(GetObjectBucketPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about the Bucket.
     * For more information, see [the documentation](https://www.scaleway.com/en/docs/object-storage-feature/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ObjectBucket;
     * import com.pulumi.scaleway.ObjectBucketArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new ObjectBucket(&#34;main&#34;, ObjectBucketArgs.builder()        
     *             .tags(Map.of(&#34;foo&#34;, &#34;bar&#34;))
     *             .build());
     * 
     *         final var selected = ScalewayFunctions.getObjectBucket(GetObjectBucketArgs.builder()
     *             .name(&#34;bucket.test.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Fetching the bucket from a specific project
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var selected = ScalewayFunctions.getObjectBucket(GetObjectBucketArgs.builder()
     *             .name(&#34;bucket.test.com&#34;)
     *             .projectId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetObjectBucketResult> getObjectBucket(GetObjectBucketArgs args) {
        return getObjectBucket(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the Bucket.
     * For more information, see [the documentation](https://www.scaleway.com/en/docs/object-storage-feature/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ObjectBucket;
     * import com.pulumi.scaleway.ObjectBucketArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new ObjectBucket(&#34;main&#34;, ObjectBucketArgs.builder()        
     *             .tags(Map.of(&#34;foo&#34;, &#34;bar&#34;))
     *             .build());
     * 
     *         final var selected = ScalewayFunctions.getObjectBucket(GetObjectBucketArgs.builder()
     *             .name(&#34;bucket.test.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Fetching the bucket from a specific project
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var selected = ScalewayFunctions.getObjectBucket(GetObjectBucketArgs.builder()
     *             .name(&#34;bucket.test.com&#34;)
     *             .projectId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetObjectBucketResult> getObjectBucketPlain(GetObjectBucketPlainArgs args) {
        return getObjectBucketPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the Bucket.
     * For more information, see [the documentation](https://www.scaleway.com/en/docs/object-storage-feature/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ObjectBucket;
     * import com.pulumi.scaleway.ObjectBucketArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new ObjectBucket(&#34;main&#34;, ObjectBucketArgs.builder()        
     *             .tags(Map.of(&#34;foo&#34;, &#34;bar&#34;))
     *             .build());
     * 
     *         final var selected = ScalewayFunctions.getObjectBucket(GetObjectBucketArgs.builder()
     *             .name(&#34;bucket.test.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Fetching the bucket from a specific project
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var selected = ScalewayFunctions.getObjectBucket(GetObjectBucketArgs.builder()
     *             .name(&#34;bucket.test.com&#34;)
     *             .projectId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetObjectBucketResult> getObjectBucket(GetObjectBucketArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getObjectBucket:getObjectBucket", TypeShape.of(GetObjectBucketResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the Bucket.
     * For more information, see [the documentation](https://www.scaleway.com/en/docs/object-storage-feature/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ObjectBucket;
     * import com.pulumi.scaleway.ObjectBucketArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new ObjectBucket(&#34;main&#34;, ObjectBucketArgs.builder()        
     *             .tags(Map.of(&#34;foo&#34;, &#34;bar&#34;))
     *             .build());
     * 
     *         final var selected = ScalewayFunctions.getObjectBucket(GetObjectBucketArgs.builder()
     *             .name(&#34;bucket.test.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Fetching the bucket from a specific project
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var selected = ScalewayFunctions.getObjectBucket(GetObjectBucketArgs.builder()
     *             .name(&#34;bucket.test.com&#34;)
     *             .projectId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetObjectBucketResult> getObjectBucketPlain(GetObjectBucketPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getObjectBucket:getObjectBucket", TypeShape.of(GetObjectBucketResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the Bucket&#39;s policy.
     * For more information, see [the documentation](https://www.scaleway.com/en/docs/object-storage-feature/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getObjectBucketPolicy(GetObjectBucketPolicyArgs.builder()
     *             .bucket(&#34;bucket.test.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetObjectBucketPolicyResult> getObjectBucketPolicy(GetObjectBucketPolicyArgs args) {
        return getObjectBucketPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the Bucket&#39;s policy.
     * For more information, see [the documentation](https://www.scaleway.com/en/docs/object-storage-feature/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getObjectBucketPolicy(GetObjectBucketPolicyArgs.builder()
     *             .bucket(&#34;bucket.test.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetObjectBucketPolicyResult> getObjectBucketPolicyPlain(GetObjectBucketPolicyPlainArgs args) {
        return getObjectBucketPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the Bucket&#39;s policy.
     * For more information, see [the documentation](https://www.scaleway.com/en/docs/object-storage-feature/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getObjectBucketPolicy(GetObjectBucketPolicyArgs.builder()
     *             .bucket(&#34;bucket.test.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetObjectBucketPolicyResult> getObjectBucketPolicy(GetObjectBucketPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getObjectBucketPolicy:getObjectBucketPolicy", TypeShape.of(GetObjectBucketPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the Bucket&#39;s policy.
     * For more information, see [the documentation](https://www.scaleway.com/en/docs/object-storage-feature/).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetObjectBucketPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getObjectBucketPolicy(GetObjectBucketPolicyArgs.builder()
     *             .bucket(&#34;bucket.test.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetObjectBucketPolicyResult> getObjectBucketPolicyPlain(GetObjectBucketPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getObjectBucketPolicy:getObjectBucketPolicy", TypeShape.of(GetObjectBucketPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the RDB instance network Access Control List.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myAcl = ScalewayFunctions.getRdbAcl(GetRdbAclArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRdbAclResult> getRdbAcl(GetRdbAclArgs args) {
        return getRdbAcl(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the RDB instance network Access Control List.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myAcl = ScalewayFunctions.getRdbAcl(GetRdbAclArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRdbAclResult> getRdbAclPlain(GetRdbAclPlainArgs args) {
        return getRdbAclPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the RDB instance network Access Control List.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myAcl = ScalewayFunctions.getRdbAcl(GetRdbAclArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRdbAclResult> getRdbAcl(GetRdbAclArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getRdbAcl:getRdbAcl", TypeShape.of(GetRdbAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the RDB instance network Access Control List.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbAclArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myAcl = ScalewayFunctions.getRdbAcl(GetRdbAclArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRdbAclResult> getRdbAclPlain(GetRdbAclPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getRdbAcl:getRdbAcl", TypeShape.of(GetRdbAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a RDB database.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDb = ScalewayFunctions.getRdbDatabase(GetRdbDatabaseArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRdbDatabaseResult> getRdbDatabase(GetRdbDatabaseArgs args) {
        return getRdbDatabase(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a RDB database.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDb = ScalewayFunctions.getRdbDatabase(GetRdbDatabaseArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRdbDatabaseResult> getRdbDatabasePlain(GetRdbDatabasePlainArgs args) {
        return getRdbDatabasePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a RDB database.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDb = ScalewayFunctions.getRdbDatabase(GetRdbDatabaseArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRdbDatabaseResult> getRdbDatabase(GetRdbDatabaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getRdbDatabase:getRdbDatabase", TypeShape.of(GetRdbDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a RDB database.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDb = ScalewayFunctions.getRdbDatabase(GetRdbDatabaseArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .name(&#34;foobar&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRdbDatabaseResult> getRdbDatabasePlain(GetRdbDatabasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getRdbDatabase:getRdbDatabase", TypeShape.of(GetRdbDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an RDB backup.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbDatabaseBackupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .name(&#34;mybackup&#34;)
     *             .build());
     * 
     *         final var findByNameAndInstance = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .name(&#34;mybackup&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .backupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRdbDatabaseBackupResult> getRdbDatabaseBackup() {
        return getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an RDB backup.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbDatabaseBackupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .name(&#34;mybackup&#34;)
     *             .build());
     * 
     *         final var findByNameAndInstance = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .name(&#34;mybackup&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .backupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRdbDatabaseBackupResult> getRdbDatabaseBackupPlain() {
        return getRdbDatabaseBackupPlain(GetRdbDatabaseBackupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an RDB backup.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbDatabaseBackupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .name(&#34;mybackup&#34;)
     *             .build());
     * 
     *         final var findByNameAndInstance = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .name(&#34;mybackup&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .backupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRdbDatabaseBackupResult> getRdbDatabaseBackup(GetRdbDatabaseBackupArgs args) {
        return getRdbDatabaseBackup(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an RDB backup.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbDatabaseBackupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .name(&#34;mybackup&#34;)
     *             .build());
     * 
     *         final var findByNameAndInstance = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .name(&#34;mybackup&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .backupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRdbDatabaseBackupResult> getRdbDatabaseBackupPlain(GetRdbDatabaseBackupPlainArgs args) {
        return getRdbDatabaseBackupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an RDB backup.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbDatabaseBackupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .name(&#34;mybackup&#34;)
     *             .build());
     * 
     *         final var findByNameAndInstance = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .name(&#34;mybackup&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .backupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRdbDatabaseBackupResult> getRdbDatabaseBackup(GetRdbDatabaseBackupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getRdbDatabaseBackup:getRdbDatabaseBackup", TypeShape.of(GetRdbDatabaseBackupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an RDB backup.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbDatabaseBackupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var findByName = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .name(&#34;mybackup&#34;)
     *             .build());
     * 
     *         final var findByNameAndInstance = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .instanceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .name(&#34;mybackup&#34;)
     *             .build());
     * 
     *         final var findById = ScalewayFunctions.getRdbDatabaseBackup(GetRdbDatabaseBackupArgs.builder()
     *             .backupId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRdbDatabaseBackupResult> getRdbDatabaseBackupPlain(GetRdbDatabaseBackupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getRdbDatabaseBackup:getRdbDatabaseBackup", TypeShape.of(GetRdbDatabaseBackupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an RDB instance. For further information see our [developers website](https://developers.scaleway.com/en/products/rdb/api/#database-instance)
     * 
     */
    public static Output<GetRdbInstanceResult> getRdbInstance() {
        return getRdbInstance(GetRdbInstanceArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an RDB instance. For further information see our [developers website](https://developers.scaleway.com/en/products/rdb/api/#database-instance)
     * 
     */
    public static CompletableFuture<GetRdbInstanceResult> getRdbInstancePlain() {
        return getRdbInstancePlain(GetRdbInstancePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about an RDB instance. For further information see our [developers website](https://developers.scaleway.com/en/products/rdb/api/#database-instance)
     * 
     */
    public static Output<GetRdbInstanceResult> getRdbInstance(GetRdbInstanceArgs args) {
        return getRdbInstance(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an RDB instance. For further information see our [developers website](https://developers.scaleway.com/en/products/rdb/api/#database-instance)
     * 
     */
    public static CompletableFuture<GetRdbInstanceResult> getRdbInstancePlain(GetRdbInstancePlainArgs args) {
        return getRdbInstancePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about an RDB instance. For further information see our [developers website](https://developers.scaleway.com/en/products/rdb/api/#database-instance)
     * 
     */
    public static Output<GetRdbInstanceResult> getRdbInstance(GetRdbInstanceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getRdbInstance:getRdbInstance", TypeShape.of(GetRdbInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about an RDB instance. For further information see our [developers website](https://developers.scaleway.com/en/products/rdb/api/#database-instance)
     * 
     */
    public static CompletableFuture<GetRdbInstanceResult> getRdbInstancePlain(GetRdbInstancePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getRdbInstance:getRdbInstance", TypeShape.of(GetRdbInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the privilege on RDB database.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbPrivilegeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getRdbPrivilege(GetRdbPrivilegeArgs.builder()
     *             .databaseName(&#34;my-database&#34;)
     *             .instanceId(&#34;11111111-1111-111111111111&#34;)
     *             .userName(&#34;my-user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRdbPrivilegeResult> getRdbPrivilege(GetRdbPrivilegeArgs args) {
        return getRdbPrivilege(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the privilege on RDB database.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbPrivilegeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getRdbPrivilege(GetRdbPrivilegeArgs.builder()
     *             .databaseName(&#34;my-database&#34;)
     *             .instanceId(&#34;11111111-1111-111111111111&#34;)
     *             .userName(&#34;my-user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRdbPrivilegeResult> getRdbPrivilegePlain(GetRdbPrivilegePlainArgs args) {
        return getRdbPrivilegePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about the privilege on RDB database.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbPrivilegeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getRdbPrivilege(GetRdbPrivilegeArgs.builder()
     *             .databaseName(&#34;my-database&#34;)
     *             .instanceId(&#34;11111111-1111-111111111111&#34;)
     *             .userName(&#34;my-user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRdbPrivilegeResult> getRdbPrivilege(GetRdbPrivilegeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getRdbPrivilege:getRdbPrivilege", TypeShape.of(GetRdbPrivilegeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about the privilege on RDB database.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRdbPrivilegeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var main = ScalewayFunctions.getRdbPrivilege(GetRdbPrivilegeArgs.builder()
     *             .databaseName(&#34;my-database&#34;)
     *             .instanceId(&#34;11111111-1111-111111111111&#34;)
     *             .userName(&#34;my-user&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRdbPrivilegeResult> getRdbPrivilegePlain(GetRdbPrivilegePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getRdbPrivilege:getRdbPrivilege", TypeShape.of(GetRdbPrivilegeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Redis cluster. For further information check our [api documentation](https://developers.scaleway.com/en/products/redis/api/v1alpha1/#clusters-a85816)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRedisClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myCluster = ScalewayFunctions.getRedisCluster(GetRedisClusterArgs.builder()
     *             .clusterId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRedisClusterResult> getRedisCluster() {
        return getRedisCluster(GetRedisClusterArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Redis cluster. For further information check our [api documentation](https://developers.scaleway.com/en/products/redis/api/v1alpha1/#clusters-a85816)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRedisClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myCluster = ScalewayFunctions.getRedisCluster(GetRedisClusterArgs.builder()
     *             .clusterId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRedisClusterResult> getRedisClusterPlain() {
        return getRedisClusterPlain(GetRedisClusterPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Redis cluster. For further information check our [api documentation](https://developers.scaleway.com/en/products/redis/api/v1alpha1/#clusters-a85816)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRedisClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myCluster = ScalewayFunctions.getRedisCluster(GetRedisClusterArgs.builder()
     *             .clusterId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRedisClusterResult> getRedisCluster(GetRedisClusterArgs args) {
        return getRedisCluster(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Redis cluster. For further information check our [api documentation](https://developers.scaleway.com/en/products/redis/api/v1alpha1/#clusters-a85816)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRedisClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myCluster = ScalewayFunctions.getRedisCluster(GetRedisClusterArgs.builder()
     *             .clusterId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRedisClusterResult> getRedisClusterPlain(GetRedisClusterPlainArgs args) {
        return getRedisClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a Redis cluster. For further information check our [api documentation](https://developers.scaleway.com/en/products/redis/api/v1alpha1/#clusters-a85816)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRedisClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myCluster = ScalewayFunctions.getRedisCluster(GetRedisClusterArgs.builder()
     *             .clusterId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRedisClusterResult> getRedisCluster(GetRedisClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getRedisCluster:getRedisCluster", TypeShape.of(GetRedisClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a Redis cluster. For further information check our [api documentation](https://developers.scaleway.com/en/products/redis/api/v1alpha1/#clusters-a85816)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRedisClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myCluster = ScalewayFunctions.getRedisCluster(GetRedisClusterArgs.builder()
     *             .clusterId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRedisClusterResult> getRedisClusterPlain(GetRedisClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getRedisCluster:getRedisCluster", TypeShape.of(GetRedisClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a registry image.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRegistryImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getRegistryImage(GetRegistryImageArgs.builder()
     *             .imageId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRegistryImageResult> getRegistryImage() {
        return getRegistryImage(GetRegistryImageArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a registry image.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRegistryImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getRegistryImage(GetRegistryImageArgs.builder()
     *             .imageId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRegistryImageResult> getRegistryImagePlain() {
        return getRegistryImagePlain(GetRegistryImagePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a registry image.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRegistryImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getRegistryImage(GetRegistryImageArgs.builder()
     *             .imageId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRegistryImageResult> getRegistryImage(GetRegistryImageArgs args) {
        return getRegistryImage(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a registry image.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRegistryImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getRegistryImage(GetRegistryImageArgs.builder()
     *             .imageId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRegistryImageResult> getRegistryImagePlain(GetRegistryImagePlainArgs args) {
        return getRegistryImagePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a registry image.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRegistryImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getRegistryImage(GetRegistryImageArgs.builder()
     *             .imageId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRegistryImageResult> getRegistryImage(GetRegistryImageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getRegistryImage:getRegistryImage", TypeShape.of(GetRegistryImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a registry image.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRegistryImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ScalewayFunctions.getRegistryImage(GetRegistryImageArgs.builder()
     *             .imageId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRegistryImageResult> getRegistryImagePlain(GetRegistryImagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getRegistryImage:getRegistryImage", TypeShape.of(GetRegistryImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a registry namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRegistryNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myNamespace = ScalewayFunctions.getRegistryNamespace(GetRegistryNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRegistryNamespaceResult> getRegistryNamespace() {
        return getRegistryNamespace(GetRegistryNamespaceArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a registry namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRegistryNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myNamespace = ScalewayFunctions.getRegistryNamespace(GetRegistryNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRegistryNamespaceResult> getRegistryNamespacePlain() {
        return getRegistryNamespacePlain(GetRegistryNamespacePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a registry namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRegistryNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myNamespace = ScalewayFunctions.getRegistryNamespace(GetRegistryNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRegistryNamespaceResult> getRegistryNamespace(GetRegistryNamespaceArgs args) {
        return getRegistryNamespace(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a registry namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRegistryNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myNamespace = ScalewayFunctions.getRegistryNamespace(GetRegistryNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRegistryNamespaceResult> getRegistryNamespacePlain(GetRegistryNamespacePlainArgs args) {
        return getRegistryNamespacePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a registry namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRegistryNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myNamespace = ScalewayFunctions.getRegistryNamespace(GetRegistryNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRegistryNamespaceResult> getRegistryNamespace(GetRegistryNamespaceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getRegistryNamespace:getRegistryNamespace", TypeShape.of(GetRegistryNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a registry namespace.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetRegistryNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myNamespace = ScalewayFunctions.getRegistryNamespace(GetRegistryNamespaceArgs.builder()
     *             .namespaceId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRegistryNamespaceResult> getRegistryNamespacePlain(GetRegistryNamespacePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getRegistryNamespace:getRegistryNamespace", TypeShape.of(GetRegistryNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about Scaleway Secrets.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/secret_manager/api/v1alpha1/).
     * 
     * ## Examples
     * 
     * ### Basic
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.Secret;
     * import com.pulumi.scaleway.SecretArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new Secret(&#34;main&#34;, SecretArgs.builder()        
     *             .description(&#34;barr&#34;)
     *             .build());
     * 
     *         final var mySecret = ScalewayFunctions.getSecret(GetSecretArgs.builder()
     *             .secretId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getSecret(GetSecretArgs.builder()
     *             .name(&#34;your_secret_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretResult> getSecret() {
        return getSecret(GetSecretArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about Scaleway Secrets.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/secret_manager/api/v1alpha1/).
     * 
     * ## Examples
     * 
     * ### Basic
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.Secret;
     * import com.pulumi.scaleway.SecretArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new Secret(&#34;main&#34;, SecretArgs.builder()        
     *             .description(&#34;barr&#34;)
     *             .build());
     * 
     *         final var mySecret = ScalewayFunctions.getSecret(GetSecretArgs.builder()
     *             .secretId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getSecret(GetSecretArgs.builder()
     *             .name(&#34;your_secret_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretResult> getSecretPlain() {
        return getSecretPlain(GetSecretPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about Scaleway Secrets.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/secret_manager/api/v1alpha1/).
     * 
     * ## Examples
     * 
     * ### Basic
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.Secret;
     * import com.pulumi.scaleway.SecretArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new Secret(&#34;main&#34;, SecretArgs.builder()        
     *             .description(&#34;barr&#34;)
     *             .build());
     * 
     *         final var mySecret = ScalewayFunctions.getSecret(GetSecretArgs.builder()
     *             .secretId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getSecret(GetSecretArgs.builder()
     *             .name(&#34;your_secret_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretResult> getSecret(GetSecretArgs args) {
        return getSecret(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about Scaleway Secrets.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/secret_manager/api/v1alpha1/).
     * 
     * ## Examples
     * 
     * ### Basic
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.Secret;
     * import com.pulumi.scaleway.SecretArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new Secret(&#34;main&#34;, SecretArgs.builder()        
     *             .description(&#34;barr&#34;)
     *             .build());
     * 
     *         final var mySecret = ScalewayFunctions.getSecret(GetSecretArgs.builder()
     *             .secretId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getSecret(GetSecretArgs.builder()
     *             .name(&#34;your_secret_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretResult> getSecretPlain(GetSecretPlainArgs args) {
        return getSecretPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about Scaleway Secrets.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/secret_manager/api/v1alpha1/).
     * 
     * ## Examples
     * 
     * ### Basic
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.Secret;
     * import com.pulumi.scaleway.SecretArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new Secret(&#34;main&#34;, SecretArgs.builder()        
     *             .description(&#34;barr&#34;)
     *             .build());
     * 
     *         final var mySecret = ScalewayFunctions.getSecret(GetSecretArgs.builder()
     *             .secretId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getSecret(GetSecretArgs.builder()
     *             .name(&#34;your_secret_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretResult> getSecret(GetSecretArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getSecret:getSecret", TypeShape.of(GetSecretResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about Scaleway Secrets.
     * For more information, see [the documentation](https://developers.scaleway.com/en/products/secret_manager/api/v1alpha1/).
     * 
     * ## Examples
     * 
     * ### Basic
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.Secret;
     * import com.pulumi.scaleway.SecretArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new Secret(&#34;main&#34;, SecretArgs.builder()        
     *             .description(&#34;barr&#34;)
     *             .build());
     * 
     *         final var mySecret = ScalewayFunctions.getSecret(GetSecretArgs.builder()
     *             .secretId(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *         final var byName = ScalewayFunctions.getSecret(GetSecretArgs.builder()
     *             .name(&#34;your_secret_name&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretResult> getSecretPlain(GetSecretPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getSecret:getSecret", TypeShape.of(GetSecretResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetSecretVersionResult> getSecretVersion() {
        return getSecretVersion(GetSecretVersionArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSecretVersionResult> getSecretVersionPlain() {
        return getSecretVersionPlain(GetSecretVersionPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetSecretVersionResult> getSecretVersion(GetSecretVersionArgs args) {
        return getSecretVersion(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSecretVersionResult> getSecretVersionPlain(GetSecretVersionPlainArgs args) {
        return getSecretVersionPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetSecretVersionResult> getSecretVersion(GetSecretVersionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getSecretVersion:getSecretVersion", TypeShape.of(GetSecretVersionResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetSecretVersionResult> getSecretVersionPlain(GetSecretVersionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getSecretVersion:getSecretVersion", TypeShape.of(GetSecretVersionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a transactional email domain.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetTemDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDomain = ScalewayFunctions.getTemDomain(GetTemDomainArgs.builder()
     *             .id(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTemDomainResult> getTemDomain() {
        return getTemDomain(GetTemDomainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a transactional email domain.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetTemDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDomain = ScalewayFunctions.getTemDomain(GetTemDomainArgs.builder()
     *             .id(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTemDomainResult> getTemDomainPlain() {
        return getTemDomainPlain(GetTemDomainPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a transactional email domain.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetTemDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDomain = ScalewayFunctions.getTemDomain(GetTemDomainArgs.builder()
     *             .id(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTemDomainResult> getTemDomain(GetTemDomainArgs args) {
        return getTemDomain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a transactional email domain.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetTemDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDomain = ScalewayFunctions.getTemDomain(GetTemDomainArgs.builder()
     *             .id(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTemDomainResult> getTemDomainPlain(GetTemDomainPlainArgs args) {
        return getTemDomainPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a transactional email domain.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetTemDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDomain = ScalewayFunctions.getTemDomain(GetTemDomainArgs.builder()
     *             .id(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTemDomainResult> getTemDomain(GetTemDomainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getTemDomain:getTemDomain", TypeShape.of(GetTemDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a transactional email domain.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetTemDomainArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myDomain = ScalewayFunctions.getTemDomain(GetTemDomainArgs.builder()
     *             .id(&#34;11111111-1111-1111-1111-111111111111&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTemDomainResult> getTemDomainPlain(GetTemDomainPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getTemDomain:getTemDomain", TypeShape.of(GetTemDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a gateway network.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcGatewayNetwork;
     * import com.pulumi.scaleway.VpcGatewayNetworkArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcGatewayNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcGatewayNetwork(&#34;main&#34;, VpcGatewayNetworkArgs.builder()        
     *             .gatewayId(scaleway_vpc_public_gateway.pg01().id())
     *             .privateNetworkId(scaleway_vpc_private_network.pn01().id())
     *             .dhcpId(scaleway_vpc_public_gateway_dhcp.dhcp01().id())
     *             .cleanupDhcp(true)
     *             .enableMasquerade(true)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getVpcGatewayNetwork(GetVpcGatewayNetworkArgs.builder()
     *             .gatewayNetworkId(main.id())
     *             .build());
     * 
     *         final var byGatewayAndPn = ScalewayFunctions.getVpcGatewayNetwork(GetVpcGatewayNetworkArgs.builder()
     *             .gatewayId(scaleway_vpc_public_gateway.pg01().id())
     *             .privateNetworkId(scaleway_vpc_private_network.pn01().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVpcGatewayNetworkResult> getVpcGatewayNetwork() {
        return getVpcGatewayNetwork(GetVpcGatewayNetworkArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a gateway network.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcGatewayNetwork;
     * import com.pulumi.scaleway.VpcGatewayNetworkArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcGatewayNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcGatewayNetwork(&#34;main&#34;, VpcGatewayNetworkArgs.builder()        
     *             .gatewayId(scaleway_vpc_public_gateway.pg01().id())
     *             .privateNetworkId(scaleway_vpc_private_network.pn01().id())
     *             .dhcpId(scaleway_vpc_public_gateway_dhcp.dhcp01().id())
     *             .cleanupDhcp(true)
     *             .enableMasquerade(true)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getVpcGatewayNetwork(GetVpcGatewayNetworkArgs.builder()
     *             .gatewayNetworkId(main.id())
     *             .build());
     * 
     *         final var byGatewayAndPn = ScalewayFunctions.getVpcGatewayNetwork(GetVpcGatewayNetworkArgs.builder()
     *             .gatewayId(scaleway_vpc_public_gateway.pg01().id())
     *             .privateNetworkId(scaleway_vpc_private_network.pn01().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVpcGatewayNetworkResult> getVpcGatewayNetworkPlain() {
        return getVpcGatewayNetworkPlain(GetVpcGatewayNetworkPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a gateway network.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcGatewayNetwork;
     * import com.pulumi.scaleway.VpcGatewayNetworkArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcGatewayNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcGatewayNetwork(&#34;main&#34;, VpcGatewayNetworkArgs.builder()        
     *             .gatewayId(scaleway_vpc_public_gateway.pg01().id())
     *             .privateNetworkId(scaleway_vpc_private_network.pn01().id())
     *             .dhcpId(scaleway_vpc_public_gateway_dhcp.dhcp01().id())
     *             .cleanupDhcp(true)
     *             .enableMasquerade(true)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getVpcGatewayNetwork(GetVpcGatewayNetworkArgs.builder()
     *             .gatewayNetworkId(main.id())
     *             .build());
     * 
     *         final var byGatewayAndPn = ScalewayFunctions.getVpcGatewayNetwork(GetVpcGatewayNetworkArgs.builder()
     *             .gatewayId(scaleway_vpc_public_gateway.pg01().id())
     *             .privateNetworkId(scaleway_vpc_private_network.pn01().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVpcGatewayNetworkResult> getVpcGatewayNetwork(GetVpcGatewayNetworkArgs args) {
        return getVpcGatewayNetwork(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a gateway network.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcGatewayNetwork;
     * import com.pulumi.scaleway.VpcGatewayNetworkArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcGatewayNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcGatewayNetwork(&#34;main&#34;, VpcGatewayNetworkArgs.builder()        
     *             .gatewayId(scaleway_vpc_public_gateway.pg01().id())
     *             .privateNetworkId(scaleway_vpc_private_network.pn01().id())
     *             .dhcpId(scaleway_vpc_public_gateway_dhcp.dhcp01().id())
     *             .cleanupDhcp(true)
     *             .enableMasquerade(true)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getVpcGatewayNetwork(GetVpcGatewayNetworkArgs.builder()
     *             .gatewayNetworkId(main.id())
     *             .build());
     * 
     *         final var byGatewayAndPn = ScalewayFunctions.getVpcGatewayNetwork(GetVpcGatewayNetworkArgs.builder()
     *             .gatewayId(scaleway_vpc_public_gateway.pg01().id())
     *             .privateNetworkId(scaleway_vpc_private_network.pn01().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVpcGatewayNetworkResult> getVpcGatewayNetworkPlain(GetVpcGatewayNetworkPlainArgs args) {
        return getVpcGatewayNetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a gateway network.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcGatewayNetwork;
     * import com.pulumi.scaleway.VpcGatewayNetworkArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcGatewayNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcGatewayNetwork(&#34;main&#34;, VpcGatewayNetworkArgs.builder()        
     *             .gatewayId(scaleway_vpc_public_gateway.pg01().id())
     *             .privateNetworkId(scaleway_vpc_private_network.pn01().id())
     *             .dhcpId(scaleway_vpc_public_gateway_dhcp.dhcp01().id())
     *             .cleanupDhcp(true)
     *             .enableMasquerade(true)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getVpcGatewayNetwork(GetVpcGatewayNetworkArgs.builder()
     *             .gatewayNetworkId(main.id())
     *             .build());
     * 
     *         final var byGatewayAndPn = ScalewayFunctions.getVpcGatewayNetwork(GetVpcGatewayNetworkArgs.builder()
     *             .gatewayId(scaleway_vpc_public_gateway.pg01().id())
     *             .privateNetworkId(scaleway_vpc_private_network.pn01().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVpcGatewayNetworkResult> getVpcGatewayNetwork(GetVpcGatewayNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getVpcGatewayNetwork:getVpcGatewayNetwork", TypeShape.of(GetVpcGatewayNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a gateway network.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcGatewayNetwork;
     * import com.pulumi.scaleway.VpcGatewayNetworkArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcGatewayNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcGatewayNetwork(&#34;main&#34;, VpcGatewayNetworkArgs.builder()        
     *             .gatewayId(scaleway_vpc_public_gateway.pg01().id())
     *             .privateNetworkId(scaleway_vpc_private_network.pn01().id())
     *             .dhcpId(scaleway_vpc_public_gateway_dhcp.dhcp01().id())
     *             .cleanupDhcp(true)
     *             .enableMasquerade(true)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getVpcGatewayNetwork(GetVpcGatewayNetworkArgs.builder()
     *             .gatewayNetworkId(main.id())
     *             .build());
     * 
     *         final var byGatewayAndPn = ScalewayFunctions.getVpcGatewayNetwork(GetVpcGatewayNetworkArgs.builder()
     *             .gatewayId(scaleway_vpc_public_gateway.pg01().id())
     *             .privateNetworkId(scaleway_vpc_private_network.pn01().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVpcGatewayNetworkResult> getVpcGatewayNetworkPlain(GetVpcGatewayNetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getVpcGatewayNetwork:getVpcGatewayNetwork", TypeShape.of(GetVpcGatewayNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a private network.
     * 
     * ## Example Usage
     * 
     * N/A, the usage will be meaningful in the next releases of VPC.
     * 
     */
    public static Output<GetVpcPrivateNetworkResult> getVpcPrivateNetwork() {
        return getVpcPrivateNetwork(GetVpcPrivateNetworkArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a private network.
     * 
     * ## Example Usage
     * 
     * N/A, the usage will be meaningful in the next releases of VPC.
     * 
     */
    public static CompletableFuture<GetVpcPrivateNetworkResult> getVpcPrivateNetworkPlain() {
        return getVpcPrivateNetworkPlain(GetVpcPrivateNetworkPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a private network.
     * 
     * ## Example Usage
     * 
     * N/A, the usage will be meaningful in the next releases of VPC.
     * 
     */
    public static Output<GetVpcPrivateNetworkResult> getVpcPrivateNetwork(GetVpcPrivateNetworkArgs args) {
        return getVpcPrivateNetwork(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a private network.
     * 
     * ## Example Usage
     * 
     * N/A, the usage will be meaningful in the next releases of VPC.
     * 
     */
    public static CompletableFuture<GetVpcPrivateNetworkResult> getVpcPrivateNetworkPlain(GetVpcPrivateNetworkPlainArgs args) {
        return getVpcPrivateNetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a private network.
     * 
     * ## Example Usage
     * 
     * N/A, the usage will be meaningful in the next releases of VPC.
     * 
     */
    public static Output<GetVpcPrivateNetworkResult> getVpcPrivateNetwork(GetVpcPrivateNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getVpcPrivateNetwork:getVpcPrivateNetwork", TypeShape.of(GetVpcPrivateNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a private network.
     * 
     * ## Example Usage
     * 
     * N/A, the usage will be meaningful in the next releases of VPC.
     * 
     */
    public static CompletableFuture<GetVpcPrivateNetworkResult> getVpcPrivateNetworkPlain(GetVpcPrivateNetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getVpcPrivateNetwork:getVpcPrivateNetwork", TypeShape.of(GetVpcPrivateNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a public gateway.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGateway;
     * import com.pulumi.scaleway.VpcPublicGatewayArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGateway(&#34;main&#34;, VpcPublicGatewayArgs.builder()        
     *             .type(&#34;VPC-GW-S&#34;)
     *             .zone(&#34;nl-ams-1&#34;)
     *             .build());
     * 
     *         final var pgTestByName = ScalewayFunctions.getVpcPublicGateway(GetVpcPublicGatewayArgs.builder()
     *             .name(main.name())
     *             .zone(&#34;nl-ams-1&#34;)
     *             .build());
     * 
     *         final var pgTestById = ScalewayFunctions.getVpcPublicGateway(GetVpcPublicGatewayArgs.builder()
     *             .publicGatewayId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVpcPublicGatewayResult> getVpcPublicGateway() {
        return getVpcPublicGateway(GetVpcPublicGatewayArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a public gateway.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGateway;
     * import com.pulumi.scaleway.VpcPublicGatewayArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGateway(&#34;main&#34;, VpcPublicGatewayArgs.builder()        
     *             .type(&#34;VPC-GW-S&#34;)
     *             .zone(&#34;nl-ams-1&#34;)
     *             .build());
     * 
     *         final var pgTestByName = ScalewayFunctions.getVpcPublicGateway(GetVpcPublicGatewayArgs.builder()
     *             .name(main.name())
     *             .zone(&#34;nl-ams-1&#34;)
     *             .build());
     * 
     *         final var pgTestById = ScalewayFunctions.getVpcPublicGateway(GetVpcPublicGatewayArgs.builder()
     *             .publicGatewayId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVpcPublicGatewayResult> getVpcPublicGatewayPlain() {
        return getVpcPublicGatewayPlain(GetVpcPublicGatewayPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a public gateway.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGateway;
     * import com.pulumi.scaleway.VpcPublicGatewayArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGateway(&#34;main&#34;, VpcPublicGatewayArgs.builder()        
     *             .type(&#34;VPC-GW-S&#34;)
     *             .zone(&#34;nl-ams-1&#34;)
     *             .build());
     * 
     *         final var pgTestByName = ScalewayFunctions.getVpcPublicGateway(GetVpcPublicGatewayArgs.builder()
     *             .name(main.name())
     *             .zone(&#34;nl-ams-1&#34;)
     *             .build());
     * 
     *         final var pgTestById = ScalewayFunctions.getVpcPublicGateway(GetVpcPublicGatewayArgs.builder()
     *             .publicGatewayId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVpcPublicGatewayResult> getVpcPublicGateway(GetVpcPublicGatewayArgs args) {
        return getVpcPublicGateway(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a public gateway.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGateway;
     * import com.pulumi.scaleway.VpcPublicGatewayArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGateway(&#34;main&#34;, VpcPublicGatewayArgs.builder()        
     *             .type(&#34;VPC-GW-S&#34;)
     *             .zone(&#34;nl-ams-1&#34;)
     *             .build());
     * 
     *         final var pgTestByName = ScalewayFunctions.getVpcPublicGateway(GetVpcPublicGatewayArgs.builder()
     *             .name(main.name())
     *             .zone(&#34;nl-ams-1&#34;)
     *             .build());
     * 
     *         final var pgTestById = ScalewayFunctions.getVpcPublicGateway(GetVpcPublicGatewayArgs.builder()
     *             .publicGatewayId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVpcPublicGatewayResult> getVpcPublicGatewayPlain(GetVpcPublicGatewayPlainArgs args) {
        return getVpcPublicGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a public gateway.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGateway;
     * import com.pulumi.scaleway.VpcPublicGatewayArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGateway(&#34;main&#34;, VpcPublicGatewayArgs.builder()        
     *             .type(&#34;VPC-GW-S&#34;)
     *             .zone(&#34;nl-ams-1&#34;)
     *             .build());
     * 
     *         final var pgTestByName = ScalewayFunctions.getVpcPublicGateway(GetVpcPublicGatewayArgs.builder()
     *             .name(main.name())
     *             .zone(&#34;nl-ams-1&#34;)
     *             .build());
     * 
     *         final var pgTestById = ScalewayFunctions.getVpcPublicGateway(GetVpcPublicGatewayArgs.builder()
     *             .publicGatewayId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVpcPublicGatewayResult> getVpcPublicGateway(GetVpcPublicGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getVpcPublicGateway:getVpcPublicGateway", TypeShape.of(GetVpcPublicGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a public gateway.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGateway;
     * import com.pulumi.scaleway.VpcPublicGatewayArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGateway(&#34;main&#34;, VpcPublicGatewayArgs.builder()        
     *             .type(&#34;VPC-GW-S&#34;)
     *             .zone(&#34;nl-ams-1&#34;)
     *             .build());
     * 
     *         final var pgTestByName = ScalewayFunctions.getVpcPublicGateway(GetVpcPublicGatewayArgs.builder()
     *             .name(main.name())
     *             .zone(&#34;nl-ams-1&#34;)
     *             .build());
     * 
     *         final var pgTestById = ScalewayFunctions.getVpcPublicGateway(GetVpcPublicGatewayArgs.builder()
     *             .publicGatewayId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVpcPublicGatewayResult> getVpcPublicGatewayPlain(GetVpcPublicGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getVpcPublicGateway:getVpcPublicGateway", TypeShape.of(GetVpcPublicGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a public gateway DHCP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGatewayDhcp;
     * import com.pulumi.scaleway.VpcPublicGatewayDhcpArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGatewayDhcp(&#34;main&#34;, VpcPublicGatewayDhcpArgs.builder()        
     *             .subnet(&#34;192.168.0.0/24&#34;)
     *             .build());
     * 
     *         final var dhcpById = ScalewayFunctions.getVpcPublicGatewayDhcp(GetVpcPublicGatewayDhcpArgs.builder()
     *             .dhcpId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVpcPublicGatewayDhcpResult> getVpcPublicGatewayDhcp(GetVpcPublicGatewayDhcpArgs args) {
        return getVpcPublicGatewayDhcp(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a public gateway DHCP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGatewayDhcp;
     * import com.pulumi.scaleway.VpcPublicGatewayDhcpArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGatewayDhcp(&#34;main&#34;, VpcPublicGatewayDhcpArgs.builder()        
     *             .subnet(&#34;192.168.0.0/24&#34;)
     *             .build());
     * 
     *         final var dhcpById = ScalewayFunctions.getVpcPublicGatewayDhcp(GetVpcPublicGatewayDhcpArgs.builder()
     *             .dhcpId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVpcPublicGatewayDhcpResult> getVpcPublicGatewayDhcpPlain(GetVpcPublicGatewayDhcpPlainArgs args) {
        return getVpcPublicGatewayDhcpPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a public gateway DHCP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGatewayDhcp;
     * import com.pulumi.scaleway.VpcPublicGatewayDhcpArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGatewayDhcp(&#34;main&#34;, VpcPublicGatewayDhcpArgs.builder()        
     *             .subnet(&#34;192.168.0.0/24&#34;)
     *             .build());
     * 
     *         final var dhcpById = ScalewayFunctions.getVpcPublicGatewayDhcp(GetVpcPublicGatewayDhcpArgs.builder()
     *             .dhcpId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVpcPublicGatewayDhcpResult> getVpcPublicGatewayDhcp(GetVpcPublicGatewayDhcpArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getVpcPublicGatewayDhcp:getVpcPublicGatewayDhcp", TypeShape.of(GetVpcPublicGatewayDhcpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a public gateway DHCP.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGatewayDhcp;
     * import com.pulumi.scaleway.VpcPublicGatewayDhcpArgs;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayDhcpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGatewayDhcp(&#34;main&#34;, VpcPublicGatewayDhcpArgs.builder()        
     *             .subnet(&#34;192.168.0.0/24&#34;)
     *             .build());
     * 
     *         final var dhcpById = ScalewayFunctions.getVpcPublicGatewayDhcp(GetVpcPublicGatewayDhcpArgs.builder()
     *             .dhcpId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVpcPublicGatewayDhcpResult> getVpcPublicGatewayDhcpPlain(GetVpcPublicGatewayDhcpPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getVpcPublicGatewayDhcp:getVpcPublicGatewayDhcp", TypeShape.of(GetVpcPublicGatewayDhcpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a dhcp entries. For further information please check the
     * API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#dhcp-entries-e40fb6)
     * 
     */
    public static Output<GetVpcPublicGatewayDhcpReservationResult> getVpcPublicGatewayDhcpReservation() {
        return getVpcPublicGatewayDhcpReservation(GetVpcPublicGatewayDhcpReservationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a dhcp entries. For further information please check the
     * API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#dhcp-entries-e40fb6)
     * 
     */
    public static CompletableFuture<GetVpcPublicGatewayDhcpReservationResult> getVpcPublicGatewayDhcpReservationPlain() {
        return getVpcPublicGatewayDhcpReservationPlain(GetVpcPublicGatewayDhcpReservationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a dhcp entries. For further information please check the
     * API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#dhcp-entries-e40fb6)
     * 
     */
    public static Output<GetVpcPublicGatewayDhcpReservationResult> getVpcPublicGatewayDhcpReservation(GetVpcPublicGatewayDhcpReservationArgs args) {
        return getVpcPublicGatewayDhcpReservation(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a dhcp entries. For further information please check the
     * API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#dhcp-entries-e40fb6)
     * 
     */
    public static CompletableFuture<GetVpcPublicGatewayDhcpReservationResult> getVpcPublicGatewayDhcpReservationPlain(GetVpcPublicGatewayDhcpReservationPlainArgs args) {
        return getVpcPublicGatewayDhcpReservationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a dhcp entries. For further information please check the
     * API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#dhcp-entries-e40fb6)
     * 
     */
    public static Output<GetVpcPublicGatewayDhcpReservationResult> getVpcPublicGatewayDhcpReservation(GetVpcPublicGatewayDhcpReservationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getVpcPublicGatewayDhcpReservation:getVpcPublicGatewayDhcpReservation", TypeShape.of(GetVpcPublicGatewayDhcpReservationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a dhcp entries. For further information please check the
     * API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#dhcp-entries-e40fb6)
     * 
     */
    public static CompletableFuture<GetVpcPublicGatewayDhcpReservationResult> getVpcPublicGatewayDhcpReservationPlain(GetVpcPublicGatewayDhcpReservationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getVpcPublicGatewayDhcpReservation:getVpcPublicGatewayDhcpReservation", TypeShape.of(GetVpcPublicGatewayDhcpReservationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a public gateway IP.
     * 
     * For further information please check the API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#get-66f0c0)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGatewayIp;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGatewayIp(&#34;main&#34;);
     * 
     *         final var ipById = ScalewayFunctions.getVpcPublicGatewayIp(GetVpcPublicGatewayIpArgs.builder()
     *             .ipId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVpcPublicGatewayIpResult> getVpcPublicGatewayIp() {
        return getVpcPublicGatewayIp(GetVpcPublicGatewayIpArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a public gateway IP.
     * 
     * For further information please check the API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#get-66f0c0)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGatewayIp;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGatewayIp(&#34;main&#34;);
     * 
     *         final var ipById = ScalewayFunctions.getVpcPublicGatewayIp(GetVpcPublicGatewayIpArgs.builder()
     *             .ipId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVpcPublicGatewayIpResult> getVpcPublicGatewayIpPlain() {
        return getVpcPublicGatewayIpPlain(GetVpcPublicGatewayIpPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a public gateway IP.
     * 
     * For further information please check the API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#get-66f0c0)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGatewayIp;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGatewayIp(&#34;main&#34;);
     * 
     *         final var ipById = ScalewayFunctions.getVpcPublicGatewayIp(GetVpcPublicGatewayIpArgs.builder()
     *             .ipId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVpcPublicGatewayIpResult> getVpcPublicGatewayIp(GetVpcPublicGatewayIpArgs args) {
        return getVpcPublicGatewayIp(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a public gateway IP.
     * 
     * For further information please check the API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#get-66f0c0)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGatewayIp;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGatewayIp(&#34;main&#34;);
     * 
     *         final var ipById = ScalewayFunctions.getVpcPublicGatewayIp(GetVpcPublicGatewayIpArgs.builder()
     *             .ipId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVpcPublicGatewayIpResult> getVpcPublicGatewayIpPlain(GetVpcPublicGatewayIpPlainArgs args) {
        return getVpcPublicGatewayIpPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a public gateway IP.
     * 
     * For further information please check the API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#get-66f0c0)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGatewayIp;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGatewayIp(&#34;main&#34;);
     * 
     *         final var ipById = ScalewayFunctions.getVpcPublicGatewayIp(GetVpcPublicGatewayIpArgs.builder()
     *             .ipId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVpcPublicGatewayIpResult> getVpcPublicGatewayIp(GetVpcPublicGatewayIpArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getVpcPublicGatewayIp:getVpcPublicGatewayIp", TypeShape.of(GetVpcPublicGatewayIpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a public gateway IP.
     * 
     * For further information please check the API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#get-66f0c0)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.VpcPublicGatewayIp;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetVpcPublicGatewayIpArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var main = new VpcPublicGatewayIp(&#34;main&#34;);
     * 
     *         final var ipById = ScalewayFunctions.getVpcPublicGatewayIp(GetVpcPublicGatewayIpArgs.builder()
     *             .ipId(main.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVpcPublicGatewayIpResult> getVpcPublicGatewayIpPlain(GetVpcPublicGatewayIpPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getVpcPublicGatewayIp:getVpcPublicGatewayIp", TypeShape.of(GetVpcPublicGatewayIpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a public gateway PAT rule. For further information please check the
     * API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#get-8faeea)
     * 
     */
    public static Output<GetVpcPublicGatewayPatRuleResult> getVpcPublicGatewayPatRule(GetVpcPublicGatewayPatRuleArgs args) {
        return getVpcPublicGatewayPatRule(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a public gateway PAT rule. For further information please check the
     * API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#get-8faeea)
     * 
     */
    public static CompletableFuture<GetVpcPublicGatewayPatRuleResult> getVpcPublicGatewayPatRulePlain(GetVpcPublicGatewayPatRulePlainArgs args) {
        return getVpcPublicGatewayPatRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a public gateway PAT rule. For further information please check the
     * API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#get-8faeea)
     * 
     */
    public static Output<GetVpcPublicGatewayPatRuleResult> getVpcPublicGatewayPatRule(GetVpcPublicGatewayPatRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getVpcPublicGatewayPatRule:getVpcPublicGatewayPatRule", TypeShape.of(GetVpcPublicGatewayPatRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a public gateway PAT rule. For further information please check the
     * API [documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#get-8faeea)
     * 
     */
    public static CompletableFuture<GetVpcPublicGatewayPatRuleResult> getVpcPublicGatewayPatRulePlain(GetVpcPublicGatewayPatRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getVpcPublicGatewayPatRule:getVpcPublicGatewayPatRule", TypeShape.of(GetVpcPublicGatewayPatRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a webhosting offer.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetWebHostOfferArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getWebHostOffer(GetWebHostOfferArgs.builder()
     *             .name(&#34;performance&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getWebHostOffer(GetWebHostOfferArgs.builder()
     *             .offerId(&#34;de2426b4-a9e9-11ec-b909-0242ac120002&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetWebHostOfferResult> getWebHostOffer() {
        return getWebHostOffer(GetWebHostOfferArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a webhosting offer.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetWebHostOfferArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getWebHostOffer(GetWebHostOfferArgs.builder()
     *             .name(&#34;performance&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getWebHostOffer(GetWebHostOfferArgs.builder()
     *             .offerId(&#34;de2426b4-a9e9-11ec-b909-0242ac120002&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetWebHostOfferResult> getWebHostOfferPlain() {
        return getWebHostOfferPlain(GetWebHostOfferPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets information about a webhosting offer.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetWebHostOfferArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getWebHostOffer(GetWebHostOfferArgs.builder()
     *             .name(&#34;performance&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getWebHostOffer(GetWebHostOfferArgs.builder()
     *             .offerId(&#34;de2426b4-a9e9-11ec-b909-0242ac120002&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetWebHostOfferResult> getWebHostOffer(GetWebHostOfferArgs args) {
        return getWebHostOffer(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a webhosting offer.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetWebHostOfferArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getWebHostOffer(GetWebHostOfferArgs.builder()
     *             .name(&#34;performance&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getWebHostOffer(GetWebHostOfferArgs.builder()
     *             .offerId(&#34;de2426b4-a9e9-11ec-b909-0242ac120002&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetWebHostOfferResult> getWebHostOfferPlain(GetWebHostOfferPlainArgs args) {
        return getWebHostOfferPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets information about a webhosting offer.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetWebHostOfferArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getWebHostOffer(GetWebHostOfferArgs.builder()
     *             .name(&#34;performance&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getWebHostOffer(GetWebHostOfferArgs.builder()
     *             .offerId(&#34;de2426b4-a9e9-11ec-b909-0242ac120002&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetWebHostOfferResult> getWebHostOffer(GetWebHostOfferArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("scaleway:index/getWebHostOffer:getWebHostOffer", TypeShape.of(GetWebHostOfferResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets information about a webhosting offer.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.scaleway.ScalewayFunctions;
     * import com.pulumi.scaleway.inputs.GetWebHostOfferArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var byName = ScalewayFunctions.getWebHostOffer(GetWebHostOfferArgs.builder()
     *             .name(&#34;performance&#34;)
     *             .build());
     * 
     *         final var byId = ScalewayFunctions.getWebHostOffer(GetWebHostOfferArgs.builder()
     *             .offerId(&#34;de2426b4-a9e9-11ec-b909-0242ac120002&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetWebHostOfferResult> getWebHostOfferPlain(GetWebHostOfferPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("scaleway:index/getWebHostOffer:getWebHostOffer", TypeShape.of(GetWebHostOfferResult.class), args, Utilities.withVersion(options));
    }
}
