// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.scaleway.InstancePrivateNicArgs;
import io.dirien.scaleway.Utilities;
import io.dirien.scaleway.inputs.InstancePrivateNicState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates and manages Scaleway Instance Private NICs. For more information, see
 * [the documentation](https://developers.scaleway.com/en/products/instance/api/#private-nics-a42eea).
 * 
 * ## Examples
 * 
 * ### Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.InstancePrivateNic;
 * import com.pulumi.scaleway.InstancePrivateNicArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var pnic01 = new InstancePrivateNic(&#34;pnic01&#34;, InstancePrivateNicArgs.builder()        
 *             .privateNetworkId(&#34;fr-par-1/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa&#34;)
 *             .serverId(&#34;fr-par-1/11111111-1111-1111-1111-111111111111&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ### With zone
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.VpcPrivateNetwork;
 * import com.pulumi.scaleway.VpcPrivateNetworkArgs;
 * import com.pulumi.scaleway.InstanceServer;
 * import com.pulumi.scaleway.InstanceServerArgs;
 * import com.pulumi.scaleway.InstancePrivateNic;
 * import com.pulumi.scaleway.InstancePrivateNicArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var pn01 = new VpcPrivateNetwork(&#34;pn01&#34;, VpcPrivateNetworkArgs.builder()        
 *             .zone(&#34;fr-par-2&#34;)
 *             .build());
 * 
 *         var base = new InstanceServer(&#34;base&#34;, InstanceServerArgs.builder()        
 *             .image(&#34;ubuntu_jammy&#34;)
 *             .type(&#34;DEV1-S&#34;)
 *             .zone(pn01.zone())
 *             .build());
 * 
 *         var pnic01 = new InstancePrivateNic(&#34;pnic01&#34;, InstancePrivateNicArgs.builder()        
 *             .serverId(base.id())
 *             .privateNetworkId(pn01.id())
 *             .zone(pn01.zone())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Private NICs can be imported using the `{zone}/{server_id}/{private_nic_id}`, e.g. bash
 * 
 * ```sh
 *  $ pulumi import scaleway:index/instancePrivateNic:InstancePrivateNic pnic01 fr-par-1/11111111-1111-1111-1111-111111111111/22222222-2222-2222-2222-222222222222
 * ```
 * 
 */
@ResourceType(type="scaleway:index/instancePrivateNic:InstancePrivateNic")
public class InstancePrivateNic extends com.pulumi.resources.CustomResource {
    /**
     * The MAC address of the private NIC.
     * 
     */
    @Export(name="macAddress", refs={String.class}, tree="[0]")
    private Output<String> macAddress;

    /**
     * @return The MAC address of the private NIC.
     * 
     */
    public Output<String> macAddress() {
        return this.macAddress;
    }
    /**
     * The ID of the private network attached to.
     * 
     */
    @Export(name="privateNetworkId", refs={String.class}, tree="[0]")
    private Output<String> privateNetworkId;

    /**
     * @return The ID of the private network attached to.
     * 
     */
    public Output<String> privateNetworkId() {
        return this.privateNetworkId;
    }
    /**
     * The ID of the server associated with.
     * 
     */
    @Export(name="serverId", refs={String.class}, tree="[0]")
    private Output<String> serverId;

    /**
     * @return The ID of the server associated with.
     * 
     */
    public Output<String> serverId() {
        return this.serverId;
    }
    /**
     * The tags associated with the private NIC.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return The tags associated with the private NIC.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * `zone`) The zone in which the server must be created.
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return `zone`) The zone in which the server must be created.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstancePrivateNic(String name) {
        this(name, InstancePrivateNicArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstancePrivateNic(String name, InstancePrivateNicArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstancePrivateNic(String name, InstancePrivateNicArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/instancePrivateNic:InstancePrivateNic", name, args == null ? InstancePrivateNicArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private InstancePrivateNic(String name, Output<String> id, @Nullable InstancePrivateNicState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/instancePrivateNic:InstancePrivateNic", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstancePrivateNic get(String name, Output<String> id, @Nullable InstancePrivateNicState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InstancePrivateNic(name, id, state, options);
    }
}
