// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVpcPublicGatewayDhcpReservationResult {
    /**
     * @return The date and time of the creation of the public gateway DHCP config.
     * 
     */
    private String createdAt;
    /**
     * @return The ID of the owning GatewayNetwork.
     * 
     */
    private @Nullable String gatewayNetworkId;
    /**
     * @return The Hostname of the client machine.
     * 
     */
    private String hostname;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The IP address to give to the machine (IP address).
     * 
     */
    private String ipAddress;
    private @Nullable String macAddress;
    private @Nullable String reservationId;
    /**
     * @return The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are reservation and lease.
     * 
     */
    private String type;
    /**
     * @return The date and time of the last update of the public gateway DHCP config.
     * 
     */
    private String updatedAt;
    private @Nullable Boolean waitForDhcp;
    private @Nullable String zone;

    private GetVpcPublicGatewayDhcpReservationResult() {}
    /**
     * @return The date and time of the creation of the public gateway DHCP config.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The ID of the owning GatewayNetwork.
     * 
     */
    public Optional<String> gatewayNetworkId() {
        return Optional.ofNullable(this.gatewayNetworkId);
    }
    /**
     * @return The Hostname of the client machine.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The IP address to give to the machine (IP address).
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    public Optional<String> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }
    public Optional<String> reservationId() {
        return Optional.ofNullable(this.reservationId);
    }
    /**
     * @return The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are reservation and lease.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The date and time of the last update of the public gateway DHCP config.
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }
    public Optional<Boolean> waitForDhcp() {
        return Optional.ofNullable(this.waitForDhcp);
    }
    public Optional<String> zone() {
        return Optional.ofNullable(this.zone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcPublicGatewayDhcpReservationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdAt;
        private @Nullable String gatewayNetworkId;
        private String hostname;
        private String id;
        private String ipAddress;
        private @Nullable String macAddress;
        private @Nullable String reservationId;
        private String type;
        private String updatedAt;
        private @Nullable Boolean waitForDhcp;
        private @Nullable String zone;
        public Builder() {}
        public Builder(GetVpcPublicGatewayDhcpReservationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.gatewayNetworkId = defaults.gatewayNetworkId;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.macAddress = defaults.macAddress;
    	      this.reservationId = defaults.reservationId;
    	      this.type = defaults.type;
    	      this.updatedAt = defaults.updatedAt;
    	      this.waitForDhcp = defaults.waitForDhcp;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder gatewayNetworkId(@Nullable String gatewayNetworkId) {
            this.gatewayNetworkId = gatewayNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        @CustomType.Setter
        public Builder macAddress(@Nullable String macAddress) {
            this.macAddress = macAddress;
            return this;
        }
        @CustomType.Setter
        public Builder reservationId(@Nullable String reservationId) {
            this.reservationId = reservationId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt);
            return this;
        }
        @CustomType.Setter
        public Builder waitForDhcp(@Nullable Boolean waitForDhcp) {
            this.waitForDhcp = waitForDhcp;
            return this;
        }
        @CustomType.Setter
        public Builder zone(@Nullable String zone) {
            this.zone = zone;
            return this;
        }
        public GetVpcPublicGatewayDhcpReservationResult build() {
            final var o = new GetVpcPublicGatewayDhcpReservationResult();
            o.createdAt = createdAt;
            o.gatewayNetworkId = gatewayNetworkId;
            o.hostname = hostname;
            o.id = id;
            o.ipAddress = ipAddress;
            o.macAddress = macAddress;
            o.reservationId = reservationId;
            o.type = type;
            o.updatedAt = updatedAt;
            o.waitForDhcp = waitForDhcp;
            o.zone = zone;
            return o;
        }
    }
}
