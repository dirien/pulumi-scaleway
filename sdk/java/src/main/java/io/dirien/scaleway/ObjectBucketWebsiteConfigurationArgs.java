// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.dirien.scaleway.inputs.ObjectBucketWebsiteConfigurationErrorDocumentArgs;
import io.dirien.scaleway.inputs.ObjectBucketWebsiteConfigurationIndexDocumentArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObjectBucketWebsiteConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObjectBucketWebsiteConfigurationArgs Empty = new ObjectBucketWebsiteConfigurationArgs();

    /**
     * (Required, Forces new resource) The name of the bucket.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return (Required, Forces new resource) The name of the bucket.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * (Optional) The name of the error document for the website detailed below.
     * 
     */
    @Import(name="errorDocument")
    private @Nullable Output<ObjectBucketWebsiteConfigurationErrorDocumentArgs> errorDocument;

    /**
     * @return (Optional) The name of the error document for the website detailed below.
     * 
     */
    public Optional<Output<ObjectBucketWebsiteConfigurationErrorDocumentArgs>> errorDocument() {
        return Optional.ofNullable(this.errorDocument);
    }

    /**
     * (Required) The name of the index document for the website detailed below.
     * 
     */
    @Import(name="indexDocument", required=true)
    private Output<ObjectBucketWebsiteConfigurationIndexDocumentArgs> indexDocument;

    /**
     * @return (Required) The name of the index document for the website detailed below.
     * 
     */
    public Output<ObjectBucketWebsiteConfigurationIndexDocumentArgs> indexDocument() {
        return this.indexDocument;
    }

    /**
     * (Defaults to provider `project_id`) The ID of the project the bucket is associated with.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return (Defaults to provider `project_id`) The ID of the project the bucket is associated with.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The region you want to attach the resource to
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region you want to attach the resource to
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private ObjectBucketWebsiteConfigurationArgs() {}

    private ObjectBucketWebsiteConfigurationArgs(ObjectBucketWebsiteConfigurationArgs $) {
        this.bucket = $.bucket;
        this.errorDocument = $.errorDocument;
        this.indexDocument = $.indexDocument;
        this.projectId = $.projectId;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObjectBucketWebsiteConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObjectBucketWebsiteConfigurationArgs $;

        public Builder() {
            $ = new ObjectBucketWebsiteConfigurationArgs();
        }

        public Builder(ObjectBucketWebsiteConfigurationArgs defaults) {
            $ = new ObjectBucketWebsiteConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket (Required, Forces new resource) The name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket (Required, Forces new resource) The name of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param errorDocument (Optional) The name of the error document for the website detailed below.
         * 
         * @return builder
         * 
         */
        public Builder errorDocument(@Nullable Output<ObjectBucketWebsiteConfigurationErrorDocumentArgs> errorDocument) {
            $.errorDocument = errorDocument;
            return this;
        }

        /**
         * @param errorDocument (Optional) The name of the error document for the website detailed below.
         * 
         * @return builder
         * 
         */
        public Builder errorDocument(ObjectBucketWebsiteConfigurationErrorDocumentArgs errorDocument) {
            return errorDocument(Output.of(errorDocument));
        }

        /**
         * @param indexDocument (Required) The name of the index document for the website detailed below.
         * 
         * @return builder
         * 
         */
        public Builder indexDocument(Output<ObjectBucketWebsiteConfigurationIndexDocumentArgs> indexDocument) {
            $.indexDocument = indexDocument;
            return this;
        }

        /**
         * @param indexDocument (Required) The name of the index document for the website detailed below.
         * 
         * @return builder
         * 
         */
        public Builder indexDocument(ObjectBucketWebsiteConfigurationIndexDocumentArgs indexDocument) {
            return indexDocument(Output.of(indexDocument));
        }

        /**
         * @param projectId (Defaults to provider `project_id`) The ID of the project the bucket is associated with.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId (Defaults to provider `project_id`) The ID of the project the bucket is associated with.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param region The region you want to attach the resource to
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region you want to attach the resource to
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public ObjectBucketWebsiteConfigurationArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            $.indexDocument = Objects.requireNonNull($.indexDocument, "expected parameter 'indexDocument' to be non-null");
            return $;
        }
    }

}
