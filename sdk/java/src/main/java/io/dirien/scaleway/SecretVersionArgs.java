// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecretVersionArgs Empty = new SecretVersionArgs();

    /**
     * The data payload of the secret version. Must be no larger than 64KiB. (e.g. `my-secret-version-payload`). more on the data section
     * 
     */
    @Import(name="data", required=true)
    private Output<String> data;

    /**
     * @return The data payload of the secret version. Must be no larger than 64KiB. (e.g. `my-secret-version-payload`). more on the data section
     * 
     */
    public Output<String> data() {
        return this.data;
    }

    /**
     * Description of the secret version (e.g. `my-new-description`).
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the secret version (e.g. `my-new-description`).
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * `region`) The region
     * in which the resource exists.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return `region`) The region
     * in which the resource exists.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The Secret ID associated wit the secret version.
     * 
     */
    @Import(name="secretId", required=true)
    private Output<String> secretId;

    /**
     * @return The Secret ID associated wit the secret version.
     * 
     */
    public Output<String> secretId() {
        return this.secretId;
    }

    private SecretVersionArgs() {}

    private SecretVersionArgs(SecretVersionArgs $) {
        this.data = $.data;
        this.description = $.description;
        this.region = $.region;
        this.secretId = $.secretId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretVersionArgs $;

        public Builder() {
            $ = new SecretVersionArgs();
        }

        public Builder(SecretVersionArgs defaults) {
            $ = new SecretVersionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param data The data payload of the secret version. Must be no larger than 64KiB. (e.g. `my-secret-version-payload`). more on the data section
         * 
         * @return builder
         * 
         */
        public Builder data(Output<String> data) {
            $.data = data;
            return this;
        }

        /**
         * @param data The data payload of the secret version. Must be no larger than 64KiB. (e.g. `my-secret-version-payload`). more on the data section
         * 
         * @return builder
         * 
         */
        public Builder data(String data) {
            return data(Output.of(data));
        }

        /**
         * @param description Description of the secret version (e.g. `my-new-description`).
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the secret version (e.g. `my-new-description`).
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param region `region`) The region
         * in which the resource exists.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region `region`) The region
         * in which the resource exists.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param secretId The Secret ID associated wit the secret version.
         * 
         * @return builder
         * 
         */
        public Builder secretId(Output<String> secretId) {
            $.secretId = secretId;
            return this;
        }

        /**
         * @param secretId The Secret ID associated wit the secret version.
         * 
         * @return builder
         * 
         */
        public Builder secretId(String secretId) {
            return secretId(Output.of(secretId));
        }

        public SecretVersionArgs build() {
            $.data = Objects.requireNonNull($.data, "expected parameter 'data' to be non-null");
            $.secretId = Objects.requireNonNull($.secretId, "expected parameter 'secretId' to be non-null");
            return $;
        }
    }

}
