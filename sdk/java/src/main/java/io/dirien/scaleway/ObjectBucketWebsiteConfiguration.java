// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.scaleway.ObjectBucketWebsiteConfigurationArgs;
import io.dirien.scaleway.Utilities;
import io.dirien.scaleway.inputs.ObjectBucketWebsiteConfigurationState;
import io.dirien.scaleway.outputs.ObjectBucketWebsiteConfigurationErrorDocument;
import io.dirien.scaleway.outputs.ObjectBucketWebsiteConfigurationIndexDocument;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an Object bucket website configuration resource.
 * For more information, see [Hosting Websites on Object bucket](https://www.scaleway.com/en/docs/storage/object/how-to/use-bucket-website/).
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.ObjectBucket;
 * import com.pulumi.scaleway.ObjectBucketArgs;
 * import com.pulumi.scaleway.ObjectBucketWebsiteConfiguration;
 * import com.pulumi.scaleway.ObjectBucketWebsiteConfigurationArgs;
 * import com.pulumi.scaleway.inputs.ObjectBucketWebsiteConfigurationIndexDocumentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var mainObjectBucket = new ObjectBucket(&#34;mainObjectBucket&#34;, ObjectBucketArgs.builder()        
 *             .acl(&#34;public-read&#34;)
 *             .build());
 * 
 *         var mainObjectBucketWebsiteConfiguration = new ObjectBucketWebsiteConfiguration(&#34;mainObjectBucketWebsiteConfiguration&#34;, ObjectBucketWebsiteConfigurationArgs.builder()        
 *             .bucket(mainObjectBucket.name())
 *             .indexDocument(ObjectBucketWebsiteConfigurationIndexDocumentArgs.builder()
 *                 .suffix(&#34;index.html&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ## Example with `policy`
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.ObjectBucket;
 * import com.pulumi.scaleway.ObjectBucketArgs;
 * import com.pulumi.scaleway.ObjectBucketPolicy;
 * import com.pulumi.scaleway.ObjectBucketPolicyArgs;
 * import com.pulumi.scaleway.ObjectBucketWebsiteConfiguration;
 * import com.pulumi.scaleway.ObjectBucketWebsiteConfigurationArgs;
 * import com.pulumi.scaleway.inputs.ObjectBucketWebsiteConfigurationIndexDocumentArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var mainObjectBucket = new ObjectBucket(&#34;mainObjectBucket&#34;, ObjectBucketArgs.builder()        
 *             .acl(&#34;public-read&#34;)
 *             .build());
 * 
 *         var mainObjectBucketPolicy = new ObjectBucketPolicy(&#34;mainObjectBucketPolicy&#34;, ObjectBucketPolicyArgs.builder()        
 *             .bucket(mainObjectBucket.name())
 *             .policy(serializeJson(
 *                 jsonObject(
 *                     jsonProperty(&#34;Version&#34;, &#34;2012-10-17&#34;),
 *                     jsonProperty(&#34;Id&#34;, &#34;MyPolicy&#34;),
 *                     jsonProperty(&#34;Statement&#34;, jsonArray(jsonObject(
 *                         jsonProperty(&#34;Sid&#34;, &#34;GrantToEveryone&#34;),
 *                         jsonProperty(&#34;Effect&#34;, &#34;Allow&#34;),
 *                         jsonProperty(&#34;Principal&#34;, &#34;*&#34;),
 *                         jsonProperty(&#34;Action&#34;, jsonArray(&#34;s3:GetObject&#34;)),
 *                         jsonProperty(&#34;Resource&#34;, jsonArray(&#34;&lt;bucket-name&gt;/*&#34;))
 *                     )))
 *                 )))
 *             .build());
 * 
 *         var mainObjectBucketWebsiteConfiguration = new ObjectBucketWebsiteConfiguration(&#34;mainObjectBucketWebsiteConfiguration&#34;, ObjectBucketWebsiteConfigurationArgs.builder()        
 *             .bucket(mainObjectBucket.name())
 *             .indexDocument(ObjectBucketWebsiteConfigurationIndexDocumentArgs.builder()
 *                 .suffix(&#34;index.html&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## index_document
 * 
 * The `index_document` configuration block supports the following arguments:
 * 
 * * `suffix` - (Required) A suffix that is appended to a request that is for a directory on the website endpoint.
 * 
 * &gt; **Important:** The suffix must not be empty and must not include a slash character. The routing is not supported.
 * 
 * In addition to all above arguments, the following attribute is exported:
 * 
 * * `id` - The region and bucket separated by a slash (/)
 * * `website_domain` - The domain of the website endpoint. This is used to create DNS alias [records](https://www.scaleway.com/en/docs/network/domains-and-dns/how-to/manage-dns-records/).
 * * `website_endpoint` - The website endpoint.
 * 
 * &gt; **Important:** Please check our concepts section to know more about the [endpoint](https://www.scaleway.com/en/docs/storage/object/concepts/#endpoint).
 * 
 * ## error_document
 * 
 * The error_document configuration block supports the following arguments:
 * 
 * * `key` - (Required) The object key name to use when a 4XX class error occurs.
 * 
 * ## Import
 * 
 * Website configuration Bucket can be imported using the `{region}/{bucketName}` identifier, e.g. bash
 * 
 * ```sh
 *  $ pulumi import scaleway:index/objectBucketWebsiteConfiguration:ObjectBucketWebsiteConfiguration some_bucket fr-par/some-bucket
 * ```
 * 
 */
@ResourceType(type="scaleway:index/objectBucketWebsiteConfiguration:ObjectBucketWebsiteConfiguration")
public class ObjectBucketWebsiteConfiguration extends com.pulumi.resources.CustomResource {
    /**
     * (Required, Forces new resource) The name of the bucket.
     * 
     */
    @Export(name="bucket", refs={String.class}, tree="[0]")
    private Output<String> bucket;

    /**
     * @return (Required, Forces new resource) The name of the bucket.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }
    /**
     * (Optional) The name of the error document for the website detailed below.
     * 
     */
    @Export(name="errorDocument", refs={ObjectBucketWebsiteConfigurationErrorDocument.class}, tree="[0]")
    private Output</* @Nullable */ ObjectBucketWebsiteConfigurationErrorDocument> errorDocument;

    /**
     * @return (Optional) The name of the error document for the website detailed below.
     * 
     */
    public Output<Optional<ObjectBucketWebsiteConfigurationErrorDocument>> errorDocument() {
        return Codegen.optional(this.errorDocument);
    }
    /**
     * (Required) The name of the index document for the website detailed below.
     * 
     */
    @Export(name="indexDocument", refs={ObjectBucketWebsiteConfigurationIndexDocument.class}, tree="[0]")
    private Output<ObjectBucketWebsiteConfigurationIndexDocument> indexDocument;

    /**
     * @return (Required) The name of the index document for the website detailed below.
     * 
     */
    public Output<ObjectBucketWebsiteConfigurationIndexDocument> indexDocument() {
        return this.indexDocument;
    }
    /**
     * (Defaults to provider `project_id`) The ID of the project the bucket is associated with.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return (Defaults to provider `project_id`) The ID of the project the bucket is associated with.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * The region you want to attach the resource to
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return The region you want to attach the resource to
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * The website endpoint.
     * 
     */
    @Export(name="websiteDomain", refs={String.class}, tree="[0]")
    private Output<String> websiteDomain;

    /**
     * @return The website endpoint.
     * 
     */
    public Output<String> websiteDomain() {
        return this.websiteDomain;
    }
    /**
     * The domain of the website endpoint.
     * 
     */
    @Export(name="websiteEndpoint", refs={String.class}, tree="[0]")
    private Output<String> websiteEndpoint;

    /**
     * @return The domain of the website endpoint.
     * 
     */
    public Output<String> websiteEndpoint() {
        return this.websiteEndpoint;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ObjectBucketWebsiteConfiguration(String name) {
        this(name, ObjectBucketWebsiteConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ObjectBucketWebsiteConfiguration(String name, ObjectBucketWebsiteConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ObjectBucketWebsiteConfiguration(String name, ObjectBucketWebsiteConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/objectBucketWebsiteConfiguration:ObjectBucketWebsiteConfiguration", name, args == null ? ObjectBucketWebsiteConfigurationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ObjectBucketWebsiteConfiguration(String name, Output<String> id, @Nullable ObjectBucketWebsiteConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/objectBucketWebsiteConfiguration:ObjectBucketWebsiteConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ObjectBucketWebsiteConfiguration get(String name, Output<String> id, @Nullable ObjectBucketWebsiteConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ObjectBucketWebsiteConfiguration(name, id, state, options);
    }
}
