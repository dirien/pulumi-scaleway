// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RedisClusterPublicNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final RedisClusterPublicNetworkArgs Empty = new RedisClusterPublicNetworkArgs();

    /**
     * The UUID of the private network resource.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The UUID of the private network resource.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Lis of IPv4 address of the endpoint (IP address).
     * 
     */
    @Import(name="ips")
    private @Nullable Output<List<String>> ips;

    /**
     * @return Lis of IPv4 address of the endpoint (IP address).
     * 
     */
    public Optional<Output<List<String>>> ips() {
        return Optional.ofNullable(this.ips);
    }

    /**
     * TCP port of the endpoint.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return TCP port of the endpoint.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    private RedisClusterPublicNetworkArgs() {}

    private RedisClusterPublicNetworkArgs(RedisClusterPublicNetworkArgs $) {
        this.id = $.id;
        this.ips = $.ips;
        this.port = $.port;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RedisClusterPublicNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RedisClusterPublicNetworkArgs $;

        public Builder() {
            $ = new RedisClusterPublicNetworkArgs();
        }

        public Builder(RedisClusterPublicNetworkArgs defaults) {
            $ = new RedisClusterPublicNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The UUID of the private network resource.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The UUID of the private network resource.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param ips Lis of IPv4 address of the endpoint (IP address).
         * 
         * @return builder
         * 
         */
        public Builder ips(@Nullable Output<List<String>> ips) {
            $.ips = ips;
            return this;
        }

        /**
         * @param ips Lis of IPv4 address of the endpoint (IP address).
         * 
         * @return builder
         * 
         */
        public Builder ips(List<String> ips) {
            return ips(Output.of(ips));
        }

        /**
         * @param ips Lis of IPv4 address of the endpoint (IP address).
         * 
         * @return builder
         * 
         */
        public Builder ips(String... ips) {
            return ips(List.of(ips));
        }

        /**
         * @param port TCP port of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port TCP port of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public RedisClusterPublicNetworkArgs build() {
            return $;
        }
    }

}
