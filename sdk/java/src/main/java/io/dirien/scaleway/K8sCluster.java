// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.scaleway.K8sClusterArgs;
import io.dirien.scaleway.Utilities;
import io.dirien.scaleway.inputs.K8sClusterState;
import io.dirien.scaleway.outputs.K8sClusterAutoUpgrade;
import io.dirien.scaleway.outputs.K8sClusterAutoscalerConfig;
import io.dirien.scaleway.outputs.K8sClusterKubeconfig;
import io.dirien.scaleway.outputs.K8sClusterOpenIdConnectConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates and manages Scaleway Kubernetes clusters. For more information, see [the documentation](https://developers.scaleway.com/en/products/k8s/api/).
 * 
 * ## Examples
 * 
 * ### Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.K8sCluster;
 * import com.pulumi.scaleway.K8sClusterArgs;
 * import com.pulumi.scaleway.K8sPool;
 * import com.pulumi.scaleway.K8sPoolArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var jack = new K8sCluster(&#34;jack&#34;, K8sClusterArgs.builder()        
 *             .version(&#34;1.24.3&#34;)
 *             .cni(&#34;cilium&#34;)
 *             .deleteAdditionalResources(false)
 *             .build());
 * 
 *         var john = new K8sPool(&#34;john&#34;, K8sPoolArgs.builder()        
 *             .clusterId(jack.id())
 *             .nodeType(&#34;DEV1-M&#34;)
 *             .size(1)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ### Multicloud
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.K8sCluster;
 * import com.pulumi.scaleway.K8sClusterArgs;
 * import com.pulumi.scaleway.K8sPool;
 * import com.pulumi.scaleway.K8sPoolArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var henry = new K8sCluster(&#34;henry&#34;, K8sClusterArgs.builder()        
 *             .type(&#34;multicloud&#34;)
 *             .version(&#34;1.24.3&#34;)
 *             .cni(&#34;kilo&#34;)
 *             .deleteAdditionalResources(false)
 *             .build());
 * 
 *         var friendFromOuterSpace = new K8sPool(&#34;friendFromOuterSpace&#34;, K8sPoolArgs.builder()        
 *             .clusterId(henry.id())
 *             .nodeType(&#34;external&#34;)
 *             .size(0)
 *             .minSize(0)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * For a detailed example of how to add or run Elastic Metal servers instead of instances on your cluster, please refer to this guide.
 * 
 * ### With additional configuration
 * 
 * ## Import
 * 
 * Kubernetes clusters can be imported using the `{region}/{id}`, e.g. bash
 * 
 * ```sh
 *  $ pulumi import scaleway:index/k8sCluster:K8sCluster mycluster fr-par/11111111-1111-1111-1111-111111111111
 * ```
 * 
 */
@ResourceType(type="scaleway:index/k8sCluster:K8sCluster")
public class K8sCluster extends com.pulumi.resources.CustomResource {
    /**
     * The list of [admission plugins](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/) to enable on the cluster.
     * 
     */
    @Export(name="admissionPlugins", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> admissionPlugins;

    /**
     * @return The list of [admission plugins](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/) to enable on the cluster.
     * 
     */
    public Output<Optional<List<String>>> admissionPlugins() {
        return Codegen.optional(this.admissionPlugins);
    }
    /**
     * Additional Subject Alternative Names for the Kubernetes API server certificate
     * 
     */
    @Export(name="apiserverCertSans", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> apiserverCertSans;

    /**
     * @return Additional Subject Alternative Names for the Kubernetes API server certificate
     * 
     */
    public Output<Optional<List<String>>> apiserverCertSans() {
        return Codegen.optional(this.apiserverCertSans);
    }
    /**
     * The URL of the Kubernetes API server.
     * 
     */
    @Export(name="apiserverUrl", refs={String.class}, tree="[0]")
    private Output<String> apiserverUrl;

    /**
     * @return The URL of the Kubernetes API server.
     * 
     */
    public Output<String> apiserverUrl() {
        return this.apiserverUrl;
    }
    /**
     * The auto upgrade configuration.
     * 
     */
    @Export(name="autoUpgrade", refs={K8sClusterAutoUpgrade.class}, tree="[0]")
    private Output<K8sClusterAutoUpgrade> autoUpgrade;

    /**
     * @return The auto upgrade configuration.
     * 
     */
    public Output<K8sClusterAutoUpgrade> autoUpgrade() {
        return this.autoUpgrade;
    }
    /**
     * The configuration options for the [Kubernetes cluster autoscaler](https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler).
     * 
     */
    @Export(name="autoscalerConfig", refs={K8sClusterAutoscalerConfig.class}, tree="[0]")
    private Output<K8sClusterAutoscalerConfig> autoscalerConfig;

    /**
     * @return The configuration options for the [Kubernetes cluster autoscaler](https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler).
     * 
     */
    public Output<K8sClusterAutoscalerConfig> autoscalerConfig() {
        return this.autoscalerConfig;
    }
    /**
     * The Container Network Interface (CNI) for the Kubernetes cluster.
     * &gt; **Important:** Updates to this field will recreate a new resource.
     * 
     */
    @Export(name="cni", refs={String.class}, tree="[0]")
    private Output<String> cni;

    /**
     * @return The Container Network Interface (CNI) for the Kubernetes cluster.
     * &gt; **Important:** Updates to this field will recreate a new resource.
     * 
     */
    public Output<String> cni() {
        return this.cni;
    }
    /**
     * The creation date of the cluster.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The creation date of the cluster.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * Delete additional resources like block volumes, IPs and loadbalancers that were created in Kubernetes on cluster deletion.
     * &gt; **Important:** Setting this field to `true` means that you will lose all your cluster data and network configuration when you delete your cluster.
     * If you prefer keeping it, you should instead set it as `false`.
     * 
     */
    @Export(name="deleteAdditionalResources", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> deleteAdditionalResources;

    /**
     * @return Delete additional resources like block volumes, IPs and loadbalancers that were created in Kubernetes on cluster deletion.
     * &gt; **Important:** Setting this field to `true` means that you will lose all your cluster data and network configuration when you delete your cluster.
     * If you prefer keeping it, you should instead set it as `false`.
     * 
     */
    public Output<Boolean> deleteAdditionalResources() {
        return this.deleteAdditionalResources;
    }
    /**
     * A description for the Kubernetes cluster.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description for the Kubernetes cluster.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The list of [feature gates](https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/) to enable on the cluster.
     * 
     */
    @Export(name="featureGates", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> featureGates;

    /**
     * @return The list of [feature gates](https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/) to enable on the cluster.
     * 
     */
    public Output<Optional<List<String>>> featureGates() {
        return Codegen.optional(this.featureGates);
    }
    /**
     * The kubeconfig configuration file of the Kubernetes cluster
     * 
     */
    @Export(name="kubeconfigs", refs={List.class,K8sClusterKubeconfig.class}, tree="[0,1]")
    private Output<List<K8sClusterKubeconfig>> kubeconfigs;

    /**
     * @return The kubeconfig configuration file of the Kubernetes cluster
     * 
     */
    public Output<List<K8sClusterKubeconfig>> kubeconfigs() {
        return this.kubeconfigs;
    }
    /**
     * The name for the Kubernetes cluster.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name for the Kubernetes cluster.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The OpenID Connect configuration of the cluster
     * 
     */
    @Export(name="openIdConnectConfig", refs={K8sClusterOpenIdConnectConfig.class}, tree="[0]")
    private Output<K8sClusterOpenIdConnectConfig> openIdConnectConfig;

    /**
     * @return The OpenID Connect configuration of the cluster
     * 
     */
    public Output<K8sClusterOpenIdConnectConfig> openIdConnectConfig() {
        return this.openIdConnectConfig;
    }
    /**
     * The organization ID the cluster is associated with.
     * 
     */
    @Export(name="organizationId", refs={String.class}, tree="[0]")
    private Output<String> organizationId;

    /**
     * @return The organization ID the cluster is associated with.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }
    /**
     * The ID of the private network of the cluster.
     * 
     * &gt; **Important:** This field can only be set at cluster creation and cannot be updated later.
     * Changes to this field will cause the cluster to be destroyed then recreated.
     * 
     */
    @Export(name="privateNetworkId", refs={String.class}, tree="[0]")
    private Output<String> privateNetworkId;

    /**
     * @return The ID of the private network of the cluster.
     * 
     * &gt; **Important:** This field can only be set at cluster creation and cannot be updated later.
     * Changes to this field will cause the cluster to be destroyed then recreated.
     * 
     */
    public Output<String> privateNetworkId() {
        return this.privateNetworkId;
    }
    /**
     * `project_id`) The ID of the project the cluster is associated with.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return `project_id`) The ID of the project the cluster is associated with.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * `region`) The region in which the cluster should be created.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return `region`) The region in which the cluster should be created.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * The status of the Kubernetes cluster.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the Kubernetes cluster.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The tags associated with the Kubernetes cluster.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return The tags associated with the Kubernetes cluster.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The type of Kubernetes cluster. Possible values are: `kapsule` or `multicloud`.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of Kubernetes cluster. Possible values are: `kapsule` or `multicloud`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The last update date of the cluster.
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return The last update date of the cluster.
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }
    /**
     * Set to `true` if a newer Kubernetes version is available.
     * 
     */
    @Export(name="upgradeAvailable", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> upgradeAvailable;

    /**
     * @return Set to `true` if a newer Kubernetes version is available.
     * 
     */
    public Output<Boolean> upgradeAvailable() {
        return this.upgradeAvailable;
    }
    /**
     * The version of the Kubernetes cluster.
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    /**
     * @return The version of the Kubernetes cluster.
     * 
     */
    public Output<String> version() {
        return this.version;
    }
    /**
     * The DNS wildcard that points to all ready nodes.
     * 
     */
    @Export(name="wildcardDns", refs={String.class}, tree="[0]")
    private Output<String> wildcardDns;

    /**
     * @return The DNS wildcard that points to all ready nodes.
     * 
     */
    public Output<String> wildcardDns() {
        return this.wildcardDns;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public K8sCluster(String name) {
        this(name, K8sClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public K8sCluster(String name, K8sClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public K8sCluster(String name, K8sClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/k8sCluster:K8sCluster", name, args == null ? K8sClusterArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private K8sCluster(String name, Output<String> id, @Nullable K8sClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/k8sCluster:K8sCluster", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "kubeconfigs"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static K8sCluster get(String name, Output<String> id, @Nullable K8sClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new K8sCluster(name, id, state, options);
    }
}
