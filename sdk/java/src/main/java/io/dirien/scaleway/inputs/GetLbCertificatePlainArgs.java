// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLbCertificatePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLbCertificatePlainArgs Empty = new GetLbCertificatePlainArgs();

    /**
     * The certificate id.
     * - Only one of `name` and `certificate_id` should be specified.
     * 
     */
    @Import(name="certificateId")
    private @Nullable String certificateId;

    /**
     * @return The certificate id.
     * - Only one of `name` and `certificate_id` should be specified.
     * 
     */
    public Optional<String> certificateId() {
        return Optional.ofNullable(this.certificateId);
    }

    /**
     * The load-balancer ID this certificate is attached to.
     * 
     */
    @Import(name="lbId")
    private @Nullable String lbId;

    /**
     * @return The load-balancer ID this certificate is attached to.
     * 
     */
    public Optional<String> lbId() {
        return Optional.ofNullable(this.lbId);
    }

    /**
     * The name of the certificate backend.
     * - When using a certificate `name` you should specify the `lb-id`
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the certificate backend.
     * - When using a certificate `name` you should specify the `lb-id`
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    private GetLbCertificatePlainArgs() {}

    private GetLbCertificatePlainArgs(GetLbCertificatePlainArgs $) {
        this.certificateId = $.certificateId;
        this.lbId = $.lbId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLbCertificatePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLbCertificatePlainArgs $;

        public Builder() {
            $ = new GetLbCertificatePlainArgs();
        }

        public Builder(GetLbCertificatePlainArgs defaults) {
            $ = new GetLbCertificatePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateId The certificate id.
         * - Only one of `name` and `certificate_id` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder certificateId(@Nullable String certificateId) {
            $.certificateId = certificateId;
            return this;
        }

        /**
         * @param lbId The load-balancer ID this certificate is attached to.
         * 
         * @return builder
         * 
         */
        public Builder lbId(@Nullable String lbId) {
            $.lbId = lbId;
            return this;
        }

        /**
         * @param name The name of the certificate backend.
         * - When using a certificate `name` you should specify the `lb-id`
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public GetLbCertificatePlainArgs build() {
            return $;
        }
    }

}
