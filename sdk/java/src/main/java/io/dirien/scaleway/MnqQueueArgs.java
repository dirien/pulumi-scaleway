// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.dirien.scaleway.inputs.MnqQueueNatsArgs;
import io.dirien.scaleway.inputs.MnqQueueSqsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MnqQueueArgs extends com.pulumi.resources.ResourceArgs {

    public static final MnqQueueArgs Empty = new MnqQueueArgs();

    /**
     * The number of seconds the queue retains a message.
     * 
     */
    @Import(name="messageMaxAge")
    private @Nullable Output<Integer> messageMaxAge;

    /**
     * @return The number of seconds the queue retains a message.
     * 
     */
    public Optional<Output<Integer>> messageMaxAge() {
        return Optional.ofNullable(this.messageMaxAge);
    }

    /**
     * The maximum size of a message. Should be in bytes.
     * 
     */
    @Import(name="messageMaxSize")
    private @Nullable Output<Integer> messageMaxSize;

    /**
     * @return The maximum size of a message. Should be in bytes.
     * 
     */
    public Optional<Output<Integer>> messageMaxSize() {
        return Optional.ofNullable(this.messageMaxSize);
    }

    /**
     * The name of the queue. Conflicts with name_prefix.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the queue. Conflicts with name_prefix.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with name.
     * 
     */
    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    /**
     * @return Creates a unique name beginning with the specified prefix. Conflicts with name.
     * 
     */
    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    /**
     * The ID of the Namespace associated to
     * 
     */
    @Import(name="namespaceId", required=true)
    private Output<String> namespaceId;

    /**
     * @return The ID of the Namespace associated to
     * 
     */
    public Output<String> namespaceId() {
        return this.namespaceId;
    }

    /**
     * The NATS attributes of the queue
     * 
     */
    @Import(name="nats")
    private @Nullable Output<MnqQueueNatsArgs> nats;

    /**
     * @return The NATS attributes of the queue
     * 
     */
    public Optional<Output<MnqQueueNatsArgs>> nats() {
        return Optional.ofNullable(this.nats);
    }

    /**
     * The SQS attributes of the queue
     * 
     */
    @Import(name="sqs")
    private @Nullable Output<MnqQueueSqsArgs> sqs;

    /**
     * @return The SQS attributes of the queue
     * 
     */
    public Optional<Output<MnqQueueSqsArgs>> sqs() {
        return Optional.ofNullable(this.sqs);
    }

    private MnqQueueArgs() {}

    private MnqQueueArgs(MnqQueueArgs $) {
        this.messageMaxAge = $.messageMaxAge;
        this.messageMaxSize = $.messageMaxSize;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.namespaceId = $.namespaceId;
        this.nats = $.nats;
        this.sqs = $.sqs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MnqQueueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MnqQueueArgs $;

        public Builder() {
            $ = new MnqQueueArgs();
        }

        public Builder(MnqQueueArgs defaults) {
            $ = new MnqQueueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param messageMaxAge The number of seconds the queue retains a message.
         * 
         * @return builder
         * 
         */
        public Builder messageMaxAge(@Nullable Output<Integer> messageMaxAge) {
            $.messageMaxAge = messageMaxAge;
            return this;
        }

        /**
         * @param messageMaxAge The number of seconds the queue retains a message.
         * 
         * @return builder
         * 
         */
        public Builder messageMaxAge(Integer messageMaxAge) {
            return messageMaxAge(Output.of(messageMaxAge));
        }

        /**
         * @param messageMaxSize The maximum size of a message. Should be in bytes.
         * 
         * @return builder
         * 
         */
        public Builder messageMaxSize(@Nullable Output<Integer> messageMaxSize) {
            $.messageMaxSize = messageMaxSize;
            return this;
        }

        /**
         * @param messageMaxSize The maximum size of a message. Should be in bytes.
         * 
         * @return builder
         * 
         */
        public Builder messageMaxSize(Integer messageMaxSize) {
            return messageMaxSize(Output.of(messageMaxSize));
        }

        /**
         * @param name The name of the queue. Conflicts with name_prefix.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the queue. Conflicts with name_prefix.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namePrefix Creates a unique name beginning with the specified prefix. Conflicts with name.
         * 
         * @return builder
         * 
         */
        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        /**
         * @param namePrefix Creates a unique name beginning with the specified prefix. Conflicts with name.
         * 
         * @return builder
         * 
         */
        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        /**
         * @param namespaceId The ID of the Namespace associated to
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(Output<String> namespaceId) {
            $.namespaceId = namespaceId;
            return this;
        }

        /**
         * @param namespaceId The ID of the Namespace associated to
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(String namespaceId) {
            return namespaceId(Output.of(namespaceId));
        }

        /**
         * @param nats The NATS attributes of the queue
         * 
         * @return builder
         * 
         */
        public Builder nats(@Nullable Output<MnqQueueNatsArgs> nats) {
            $.nats = nats;
            return this;
        }

        /**
         * @param nats The NATS attributes of the queue
         * 
         * @return builder
         * 
         */
        public Builder nats(MnqQueueNatsArgs nats) {
            return nats(Output.of(nats));
        }

        /**
         * @param sqs The SQS attributes of the queue
         * 
         * @return builder
         * 
         */
        public Builder sqs(@Nullable Output<MnqQueueSqsArgs> sqs) {
            $.sqs = sqs;
            return this;
        }

        /**
         * @param sqs The SQS attributes of the queue
         * 
         * @return builder
         * 
         */
        public Builder sqs(MnqQueueSqsArgs sqs) {
            return sqs(Output.of(sqs));
        }

        public MnqQueueArgs build() {
            $.namespaceId = Objects.requireNonNull($.namespaceId, "expected parameter 'namespaceId' to be non-null");
            return $;
        }
    }

}
