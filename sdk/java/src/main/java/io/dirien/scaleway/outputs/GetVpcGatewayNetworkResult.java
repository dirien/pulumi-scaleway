// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVpcGatewayNetworkResult {
    private Boolean cleanupDhcp;
    private String createdAt;
    private @Nullable String dhcpId;
    private Boolean enableDhcp;
    private @Nullable Boolean enableMasquerade;
    private @Nullable String gatewayId;
    private @Nullable String gatewayNetworkId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String macAddress;
    private @Nullable String privateNetworkId;
    private String staticAddress;
    private String updatedAt;
    private String zone;

    private GetVpcGatewayNetworkResult() {}
    public Boolean cleanupDhcp() {
        return this.cleanupDhcp;
    }
    public String createdAt() {
        return this.createdAt;
    }
    public Optional<String> dhcpId() {
        return Optional.ofNullable(this.dhcpId);
    }
    public Boolean enableDhcp() {
        return this.enableDhcp;
    }
    public Optional<Boolean> enableMasquerade() {
        return Optional.ofNullable(this.enableMasquerade);
    }
    public Optional<String> gatewayId() {
        return Optional.ofNullable(this.gatewayId);
    }
    public Optional<String> gatewayNetworkId() {
        return Optional.ofNullable(this.gatewayNetworkId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String macAddress() {
        return this.macAddress;
    }
    public Optional<String> privateNetworkId() {
        return Optional.ofNullable(this.privateNetworkId);
    }
    public String staticAddress() {
        return this.staticAddress;
    }
    public String updatedAt() {
        return this.updatedAt;
    }
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcGatewayNetworkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean cleanupDhcp;
        private String createdAt;
        private @Nullable String dhcpId;
        private Boolean enableDhcp;
        private @Nullable Boolean enableMasquerade;
        private @Nullable String gatewayId;
        private @Nullable String gatewayNetworkId;
        private String id;
        private String macAddress;
        private @Nullable String privateNetworkId;
        private String staticAddress;
        private String updatedAt;
        private String zone;
        public Builder() {}
        public Builder(GetVpcGatewayNetworkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cleanupDhcp = defaults.cleanupDhcp;
    	      this.createdAt = defaults.createdAt;
    	      this.dhcpId = defaults.dhcpId;
    	      this.enableDhcp = defaults.enableDhcp;
    	      this.enableMasquerade = defaults.enableMasquerade;
    	      this.gatewayId = defaults.gatewayId;
    	      this.gatewayNetworkId = defaults.gatewayNetworkId;
    	      this.id = defaults.id;
    	      this.macAddress = defaults.macAddress;
    	      this.privateNetworkId = defaults.privateNetworkId;
    	      this.staticAddress = defaults.staticAddress;
    	      this.updatedAt = defaults.updatedAt;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder cleanupDhcp(Boolean cleanupDhcp) {
            this.cleanupDhcp = Objects.requireNonNull(cleanupDhcp);
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder dhcpId(@Nullable String dhcpId) {
            this.dhcpId = dhcpId;
            return this;
        }
        @CustomType.Setter
        public Builder enableDhcp(Boolean enableDhcp) {
            this.enableDhcp = Objects.requireNonNull(enableDhcp);
            return this;
        }
        @CustomType.Setter
        public Builder enableMasquerade(@Nullable Boolean enableMasquerade) {
            this.enableMasquerade = enableMasquerade;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayId(@Nullable String gatewayId) {
            this.gatewayId = gatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayNetworkId(@Nullable String gatewayNetworkId) {
            this.gatewayNetworkId = gatewayNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder macAddress(String macAddress) {
            this.macAddress = Objects.requireNonNull(macAddress);
            return this;
        }
        @CustomType.Setter
        public Builder privateNetworkId(@Nullable String privateNetworkId) {
            this.privateNetworkId = privateNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder staticAddress(String staticAddress) {
            this.staticAddress = Objects.requireNonNull(staticAddress);
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt);
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }
        public GetVpcGatewayNetworkResult build() {
            final var o = new GetVpcGatewayNetworkResult();
            o.cleanupDhcp = cleanupDhcp;
            o.createdAt = createdAt;
            o.dhcpId = dhcpId;
            o.enableDhcp = enableDhcp;
            o.enableMasquerade = enableMasquerade;
            o.gatewayId = gatewayId;
            o.gatewayNetworkId = gatewayNetworkId;
            o.id = id;
            o.macAddress = macAddress;
            o.privateNetworkId = privateNetworkId;
            o.staticAddress = staticAddress;
            o.updatedAt = updatedAt;
            o.zone = zone;
            return o;
        }
    }
}
