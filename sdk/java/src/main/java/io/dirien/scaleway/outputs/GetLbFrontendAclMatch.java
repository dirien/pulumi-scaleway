// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLbFrontendAclMatch {
    private String httpFilter;
    private String httpFilterOption;
    private List<String> httpFilterValues;
    private Boolean invert;
    private List<String> ipSubnets;

    private GetLbFrontendAclMatch() {}
    public String httpFilter() {
        return this.httpFilter;
    }
    public String httpFilterOption() {
        return this.httpFilterOption;
    }
    public List<String> httpFilterValues() {
        return this.httpFilterValues;
    }
    public Boolean invert() {
        return this.invert;
    }
    public List<String> ipSubnets() {
        return this.ipSubnets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLbFrontendAclMatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String httpFilter;
        private String httpFilterOption;
        private List<String> httpFilterValues;
        private Boolean invert;
        private List<String> ipSubnets;
        public Builder() {}
        public Builder(GetLbFrontendAclMatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.httpFilter = defaults.httpFilter;
    	      this.httpFilterOption = defaults.httpFilterOption;
    	      this.httpFilterValues = defaults.httpFilterValues;
    	      this.invert = defaults.invert;
    	      this.ipSubnets = defaults.ipSubnets;
        }

        @CustomType.Setter
        public Builder httpFilter(String httpFilter) {
            this.httpFilter = Objects.requireNonNull(httpFilter);
            return this;
        }
        @CustomType.Setter
        public Builder httpFilterOption(String httpFilterOption) {
            this.httpFilterOption = Objects.requireNonNull(httpFilterOption);
            return this;
        }
        @CustomType.Setter
        public Builder httpFilterValues(List<String> httpFilterValues) {
            this.httpFilterValues = Objects.requireNonNull(httpFilterValues);
            return this;
        }
        public Builder httpFilterValues(String... httpFilterValues) {
            return httpFilterValues(List.of(httpFilterValues));
        }
        @CustomType.Setter
        public Builder invert(Boolean invert) {
            this.invert = Objects.requireNonNull(invert);
            return this;
        }
        @CustomType.Setter
        public Builder ipSubnets(List<String> ipSubnets) {
            this.ipSubnets = Objects.requireNonNull(ipSubnets);
            return this;
        }
        public Builder ipSubnets(String... ipSubnets) {
            return ipSubnets(List.of(ipSubnets));
        }
        public GetLbFrontendAclMatch build() {
            final var o = new GetLbFrontendAclMatch();
            o.httpFilter = httpFilter;
            o.httpFilterOption = httpFilterOption;
            o.httpFilterValues = httpFilterValues;
            o.invert = invert;
            o.ipSubnets = ipSubnets;
            return o;
        }
    }
}
