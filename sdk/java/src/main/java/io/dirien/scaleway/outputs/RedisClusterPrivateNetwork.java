// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RedisClusterPrivateNetwork {
    private @Nullable String endpointId;
    /**
     * @return The UUID of the private network resource.
     * 
     */
    private String id;
    /**
     * @return Endpoint IPv4 addresses
     * in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation). You must provide at
     * least one IP per node or The IP network address within the private subnet is determined by the IP Address Management (IPAM)
     * service if not set.
     * 
     * &gt; The `private_network` conflict with `acl`. Only one should be specified.
     * 
     */
    private @Nullable List<String> serviceIps;
    /**
     * @return `zone`) The zone in which the
     * Redis Cluster should be created.
     * 
     */
    private @Nullable String zone;

    private RedisClusterPrivateNetwork() {}
    public Optional<String> endpointId() {
        return Optional.ofNullable(this.endpointId);
    }
    /**
     * @return The UUID of the private network resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Endpoint IPv4 addresses
     * in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation). You must provide at
     * least one IP per node or The IP network address within the private subnet is determined by the IP Address Management (IPAM)
     * service if not set.
     * 
     * &gt; The `private_network` conflict with `acl`. Only one should be specified.
     * 
     */
    public List<String> serviceIps() {
        return this.serviceIps == null ? List.of() : this.serviceIps;
    }
    /**
     * @return `zone`) The zone in which the
     * Redis Cluster should be created.
     * 
     */
    public Optional<String> zone() {
        return Optional.ofNullable(this.zone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RedisClusterPrivateNetwork defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String endpointId;
        private String id;
        private @Nullable List<String> serviceIps;
        private @Nullable String zone;
        public Builder() {}
        public Builder(RedisClusterPrivateNetwork defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpointId = defaults.endpointId;
    	      this.id = defaults.id;
    	      this.serviceIps = defaults.serviceIps;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder endpointId(@Nullable String endpointId) {
            this.endpointId = endpointId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder serviceIps(@Nullable List<String> serviceIps) {
            this.serviceIps = serviceIps;
            return this;
        }
        public Builder serviceIps(String... serviceIps) {
            return serviceIps(List.of(serviceIps));
        }
        @CustomType.Setter
        public Builder zone(@Nullable String zone) {
            this.zone = zone;
            return this;
        }
        public RedisClusterPrivateNetwork build() {
            final var o = new RedisClusterPrivateNetwork();
            o.endpointId = endpointId;
            o.id = id;
            o.serviceIps = serviceIps;
            o.zone = zone;
            return o;
        }
    }
}
