// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.scaleway.RdbPrivilegeArgs;
import io.dirien.scaleway.Utilities;
import io.dirien.scaleway.inputs.RdbPrivilegeState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Create and manage Scaleway RDB database privilege.
 * For more information, see [the documentation](https://developers.scaleway.com/en/products/rdb/api/#user-and-permissions).
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.RdbInstance;
 * import com.pulumi.scaleway.RdbInstanceArgs;
 * import com.pulumi.scaleway.RdbDatabase;
 * import com.pulumi.scaleway.RdbDatabaseArgs;
 * import com.pulumi.scaleway.RdbUser;
 * import com.pulumi.scaleway.RdbUserArgs;
 * import com.pulumi.scaleway.RdbPrivilege;
 * import com.pulumi.scaleway.RdbPrivilegeArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var mainRdbInstance = new RdbInstance(&#34;mainRdbInstance&#34;, RdbInstanceArgs.builder()        
 *             .nodeType(&#34;DB-DEV-S&#34;)
 *             .engine(&#34;PostgreSQL-11&#34;)
 *             .isHaCluster(true)
 *             .disableBackup(true)
 *             .userName(&#34;my_initial_user&#34;)
 *             .password(&#34;thiZ_is_v&amp;ry_s3cret&#34;)
 *             .build());
 * 
 *         var mainRdbDatabase = new RdbDatabase(&#34;mainRdbDatabase&#34;, RdbDatabaseArgs.builder()        
 *             .instanceId(mainRdbInstance.id())
 *             .build());
 * 
 *         var mainRdbUser = new RdbUser(&#34;mainRdbUser&#34;, RdbUserArgs.builder()        
 *             .instanceId(mainRdbInstance.id())
 *             .password(&#34;thiZ_is_v&amp;ry_s3cret&#34;)
 *             .isAdmin(false)
 *             .build());
 * 
 *         var mainRdbPrivilege = new RdbPrivilege(&#34;mainRdbPrivilege&#34;, RdbPrivilegeArgs.builder()        
 *             .instanceId(mainRdbInstance.id())
 *             .userName(&#34;my-db-user&#34;)
 *             .databaseName(&#34;my-db-name&#34;)
 *             .permission(&#34;all&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     mainRdbUser,
 *                     mainRdbDatabase)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * The user privileges can be imported using the `{region}/{instance_id}/{database_name}/{user_name}`, e.g. bash
 * 
 * ```sh
 *  $ pulumi import scaleway:index/rdbPrivilege:RdbPrivilege o fr-par/11111111-1111-1111-1111-111111111111/database_name/foo
 * ```
 * 
 */
@ResourceType(type="scaleway:index/rdbPrivilege:RdbPrivilege")
public class RdbPrivilege extends com.pulumi.resources.CustomResource {
    /**
     * Name of the database (e.g. `my-db-name`).
     * 
     */
    @Export(name="databaseName", refs={String.class}, tree="[0]")
    private Output<String> databaseName;

    /**
     * @return Name of the database (e.g. `my-db-name`).
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }
    /**
     * UUID of the rdb instance.
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return UUID of the rdb instance.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * Permission to set. Valid values are `readonly`, `readwrite`, `all`, `custom` and `none`.
     * 
     */
    @Export(name="permission", refs={String.class}, tree="[0]")
    private Output<String> permission;

    /**
     * @return Permission to set. Valid values are `readonly`, `readwrite`, `all`, `custom` and `none`.
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }
    /**
     * `region`) The region in which the resource exists.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return `region`) The region in which the resource exists.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Name of the user (e.g. `my-db-user`).
     * 
     */
    @Export(name="userName", refs={String.class}, tree="[0]")
    private Output<String> userName;

    /**
     * @return Name of the user (e.g. `my-db-user`).
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RdbPrivilege(String name) {
        this(name, RdbPrivilegeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RdbPrivilege(String name, RdbPrivilegeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RdbPrivilege(String name, RdbPrivilegeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/rdbPrivilege:RdbPrivilege", name, args == null ? RdbPrivilegeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RdbPrivilege(String name, Output<String> id, @Nullable RdbPrivilegeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/rdbPrivilege:RdbPrivilege", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RdbPrivilege get(String name, Output<String> id, @Nullable RdbPrivilegeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RdbPrivilege(name, id, state, options);
    }
}
