// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLbAclsAclActionRedirect {
    /**
     * @return The HTTP redirect code used.
     * 
     */
    private Integer code;
    /**
     * @return The URL used in case of a location redirect or the scheme name that replaces the request&#39;s original scheme.
     * 
     */
    private String target;
    /**
     * @return The redirect type.
     * 
     */
    private String type;

    private GetLbAclsAclActionRedirect() {}
    /**
     * @return The HTTP redirect code used.
     * 
     */
    public Integer code() {
        return this.code;
    }
    /**
     * @return The URL used in case of a location redirect or the scheme name that replaces the request&#39;s original scheme.
     * 
     */
    public String target() {
        return this.target;
    }
    /**
     * @return The redirect type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLbAclsAclActionRedirect defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer code;
        private String target;
        private String type;
        public Builder() {}
        public Builder(GetLbAclsAclActionRedirect defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.code = defaults.code;
    	      this.target = defaults.target;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder code(Integer code) {
            this.code = Objects.requireNonNull(code);
            return this;
        }
        @CustomType.Setter
        public Builder target(String target) {
            this.target = Objects.requireNonNull(target);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetLbAclsAclActionRedirect build() {
            final var o = new GetLbAclsAclActionRedirect();
            o.code = code;
            o.target = target;
            o.type = type;
            return o;
        }
    }
}
