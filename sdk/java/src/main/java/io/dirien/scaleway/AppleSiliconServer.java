// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.scaleway.AppleSiliconServerArgs;
import io.dirien.scaleway.Utilities;
import io.dirien.scaleway.inputs.AppleSiliconServerState;
import java.lang.String;
import javax.annotation.Nullable;

@ResourceType(type="scaleway:index/appleSiliconServer:AppleSiliconServer")
public class AppleSiliconServer extends com.pulumi.resources.CustomResource {
    /**
     * The date and time of the creation of the server
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The date and time of the creation of the server
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * The minimal date and time on which you can delete this server due to Apple licence
     * 
     */
    @Export(name="deletableAt", refs={String.class}, tree="[0]")
    private Output<String> deletableAt;

    /**
     * @return The minimal date and time on which you can delete this server due to Apple licence
     * 
     */
    public Output<String> deletableAt() {
        return this.deletableAt;
    }
    /**
     * IPv4 address of the server
     * 
     */
    @Export(name="ip", refs={String.class}, tree="[0]")
    private Output<String> ip;

    /**
     * @return IPv4 address of the server
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }
    /**
     * Name of the server
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the server
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The organization_id you want to attach the resource to
     * 
     */
    @Export(name="organizationId", refs={String.class}, tree="[0]")
    private Output<String> organizationId;

    /**
     * @return The organization_id you want to attach the resource to
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }
    /**
     * The project_id you want to attach the resource to
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return The project_id you want to attach the resource to
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * The state of the server
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state of the server
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Type of the server
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Type of the server
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The date and time of the last update of the server
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return The date and time of the last update of the server
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }
    /**
     * VNC url use to connect remotely to the desktop GUI
     * 
     */
    @Export(name="vncUrl", refs={String.class}, tree="[0]")
    private Output<String> vncUrl;

    /**
     * @return VNC url use to connect remotely to the desktop GUI
     * 
     */
    public Output<String> vncUrl() {
        return this.vncUrl;
    }
    /**
     * The zone you want to attach the resource to
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return The zone you want to attach the resource to
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppleSiliconServer(String name) {
        this(name, AppleSiliconServerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppleSiliconServer(String name, AppleSiliconServerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppleSiliconServer(String name, AppleSiliconServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/appleSiliconServer:AppleSiliconServer", name, args == null ? AppleSiliconServerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AppleSiliconServer(String name, Output<String> id, @Nullable AppleSiliconServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/appleSiliconServer:AppleSiliconServer", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppleSiliconServer get(String name, Output<String> id, @Nullable AppleSiliconServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppleSiliconServer(name, id, state, options);
    }
}
