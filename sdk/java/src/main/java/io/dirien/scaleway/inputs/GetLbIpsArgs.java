// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLbIpsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLbIpsArgs Empty = new GetLbIpsArgs();

    /**
     * The IP CIDR range used as a filter. IPs within a CIDR block like it are listed.
     * 
     */
    @Import(name="ipCidrRange")
    private @Nullable Output<String> ipCidrRange;

    /**
     * @return The IP CIDR range used as a filter. IPs within a CIDR block like it are listed.
     * 
     */
    public Optional<Output<String>> ipCidrRange() {
        return Optional.ofNullable(this.ipCidrRange);
    }

    /**
     * The ID of the project the load-balancer is associated with.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The ID of the project the load-balancer is associated with.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * `zone`) The zone in which IPs exist.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return `zone`) The zone in which IPs exist.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private GetLbIpsArgs() {}

    private GetLbIpsArgs(GetLbIpsArgs $) {
        this.ipCidrRange = $.ipCidrRange;
        this.projectId = $.projectId;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLbIpsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLbIpsArgs $;

        public Builder() {
            $ = new GetLbIpsArgs();
        }

        public Builder(GetLbIpsArgs defaults) {
            $ = new GetLbIpsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipCidrRange The IP CIDR range used as a filter. IPs within a CIDR block like it are listed.
         * 
         * @return builder
         * 
         */
        public Builder ipCidrRange(@Nullable Output<String> ipCidrRange) {
            $.ipCidrRange = ipCidrRange;
            return this;
        }

        /**
         * @param ipCidrRange The IP CIDR range used as a filter. IPs within a CIDR block like it are listed.
         * 
         * @return builder
         * 
         */
        public Builder ipCidrRange(String ipCidrRange) {
            return ipCidrRange(Output.of(ipCidrRange));
        }

        /**
         * @param projectId The ID of the project the load-balancer is associated with.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the project the load-balancer is associated with.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param zone `zone`) The zone in which IPs exist.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone `zone`) The zone in which IPs exist.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public GetLbIpsArgs build() {
            return $;
        }
    }

}
