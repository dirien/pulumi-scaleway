// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IotNetworkState extends com.pulumi.resources.ResourceArgs {

    public static final IotNetworkState Empty = new IotNetworkState();

    /**
     * The date and time the Network was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The date and time the Network was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The endpoint to use when interacting with the network.
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    /**
     * @return The endpoint to use when interacting with the network.
     * 
     */
    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    /**
     * The hub ID to which the Network will be attached to.
     * 
     */
    @Import(name="hubId")
    private @Nullable Output<String> hubId;

    /**
     * @return The hub ID to which the Network will be attached to.
     * 
     */
    public Optional<Output<String>> hubId() {
        return Optional.ofNullable(this.hubId);
    }

    /**
     * The name of the IoT Network you want to create (e.g. `my-net`).
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the IoT Network you want to create (e.g. `my-net`).
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The endpoint key to keep secret.
     * 
     */
    @Import(name="secret")
    private @Nullable Output<String> secret;

    /**
     * @return The endpoint key to keep secret.
     * 
     */
    public Optional<Output<String>> secret() {
        return Optional.ofNullable(this.secret);
    }

    /**
     * The prefix that will be prepended to all topics for this Network.
     * 
     */
    @Import(name="topicPrefix")
    private @Nullable Output<String> topicPrefix;

    /**
     * @return The prefix that will be prepended to all topics for this Network.
     * 
     */
    public Optional<Output<String>> topicPrefix() {
        return Optional.ofNullable(this.topicPrefix);
    }

    /**
     * The network type to create (e.g. `sigfox`).
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The network type to create (e.g. `sigfox`).
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private IotNetworkState() {}

    private IotNetworkState(IotNetworkState $) {
        this.createdAt = $.createdAt;
        this.endpoint = $.endpoint;
        this.hubId = $.hubId;
        this.name = $.name;
        this.secret = $.secret;
        this.topicPrefix = $.topicPrefix;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IotNetworkState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IotNetworkState $;

        public Builder() {
            $ = new IotNetworkState();
        }

        public Builder(IotNetworkState defaults) {
            $ = new IotNetworkState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt The date and time the Network was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The date and time the Network was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param endpoint The endpoint to use when interacting with the network.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint The endpoint to use when interacting with the network.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        /**
         * @param hubId The hub ID to which the Network will be attached to.
         * 
         * @return builder
         * 
         */
        public Builder hubId(@Nullable Output<String> hubId) {
            $.hubId = hubId;
            return this;
        }

        /**
         * @param hubId The hub ID to which the Network will be attached to.
         * 
         * @return builder
         * 
         */
        public Builder hubId(String hubId) {
            return hubId(Output.of(hubId));
        }

        /**
         * @param name The name of the IoT Network you want to create (e.g. `my-net`).
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the IoT Network you want to create (e.g. `my-net`).
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param secret The endpoint key to keep secret.
         * 
         * @return builder
         * 
         */
        public Builder secret(@Nullable Output<String> secret) {
            $.secret = secret;
            return this;
        }

        /**
         * @param secret The endpoint key to keep secret.
         * 
         * @return builder
         * 
         */
        public Builder secret(String secret) {
            return secret(Output.of(secret));
        }

        /**
         * @param topicPrefix The prefix that will be prepended to all topics for this Network.
         * 
         * @return builder
         * 
         */
        public Builder topicPrefix(@Nullable Output<String> topicPrefix) {
            $.topicPrefix = topicPrefix;
            return this;
        }

        /**
         * @param topicPrefix The prefix that will be prepended to all topics for this Network.
         * 
         * @return builder
         * 
         */
        public Builder topicPrefix(String topicPrefix) {
            return topicPrefix(Output.of(topicPrefix));
        }

        /**
         * @param type The network type to create (e.g. `sigfox`).
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The network type to create (e.g. `sigfox`).
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public IotNetworkState build() {
            return $;
        }
    }

}
