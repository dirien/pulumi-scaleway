// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Scaleway
{
    /// <summary>
    /// ## Import
    /// 
    /// Credential can be imported using the `{region}/{id}`, e.g. bash
    /// 
    /// ```sh
    ///  $ pulumi import scaleway:index/mnqCredential:MnqCredential main fr-par/11111111111111111111111111111111
    /// ```
    /// </summary>
    [ScalewayResourceType("scaleway:index/mnqCredential:MnqCredential")]
    public partial class MnqCredential : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The credential name..
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The namespace containing the Credential.
        /// </summary>
        [Output("namespaceId")]
        public Output<string> NamespaceId { get; private set; } = null!;

        /// <summary>
        /// Credentials file used to connect to the NATS service.
        /// </summary>
        [Output("natsCredentials")]
        public Output<Outputs.MnqCredentialNatsCredentials> NatsCredentials { get; private set; } = null!;

        /// <summary>
        /// The protocol associated to the Credential. Possible values are `nats` and `sqs_sns`.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// (Defaults to provider `region`). The region
        /// in which the namespace should be created.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Credential used to connect to the SQS/SNS service.
        /// </summary>
        [Output("sqsSnsCredentials")]
        public Output<Outputs.MnqCredentialSqsSnsCredentials?> SqsSnsCredentials { get; private set; } = null!;


        /// <summary>
        /// Create a MnqCredential resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MnqCredential(string name, MnqCredentialArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/mnqCredential:MnqCredential", name, args ?? new MnqCredentialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MnqCredential(string name, Input<string> id, MnqCredentialState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/mnqCredential:MnqCredential", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-scaleway",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MnqCredential resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MnqCredential Get(string name, Input<string> id, MnqCredentialState? state = null, CustomResourceOptions? options = null)
        {
            return new MnqCredential(name, id, state, options);
        }
    }

    public sealed class MnqCredentialArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The credential name..
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The namespace containing the Credential.
        /// </summary>
        [Input("namespaceId", required: true)]
        public Input<string> NamespaceId { get; set; } = null!;

        /// <summary>
        /// Credentials file used to connect to the NATS service.
        /// </summary>
        [Input("natsCredentials")]
        public Input<Inputs.MnqCredentialNatsCredentialsArgs>? NatsCredentials { get; set; }

        /// <summary>
        /// (Defaults to provider `region`). The region
        /// in which the namespace should be created.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Credential used to connect to the SQS/SNS service.
        /// </summary>
        [Input("sqsSnsCredentials")]
        public Input<Inputs.MnqCredentialSqsSnsCredentialsArgs>? SqsSnsCredentials { get; set; }

        public MnqCredentialArgs()
        {
        }
        public static new MnqCredentialArgs Empty => new MnqCredentialArgs();
    }

    public sealed class MnqCredentialState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The credential name..
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The namespace containing the Credential.
        /// </summary>
        [Input("namespaceId")]
        public Input<string>? NamespaceId { get; set; }

        /// <summary>
        /// Credentials file used to connect to the NATS service.
        /// </summary>
        [Input("natsCredentials")]
        public Input<Inputs.MnqCredentialNatsCredentialsGetArgs>? NatsCredentials { get; set; }

        /// <summary>
        /// The protocol associated to the Credential. Possible values are `nats` and `sqs_sns`.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// (Defaults to provider `region`). The region
        /// in which the namespace should be created.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Credential used to connect to the SQS/SNS service.
        /// </summary>
        [Input("sqsSnsCredentials")]
        public Input<Inputs.MnqCredentialSqsSnsCredentialsGetArgs>? SqsSnsCredentials { get; set; }

        public MnqCredentialState()
        {
        }
        public static new MnqCredentialState Empty => new MnqCredentialState();
    }
}
