// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Scaleway
{
    [ScalewayResourceType("scaleway:index/mnqQueue:MnqQueue")]
    public partial class MnqQueue : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The number of seconds the queue retains a message.
        /// </summary>
        [Output("messageMaxAge")]
        public Output<int?> MessageMaxAge { get; private set; } = null!;

        /// <summary>
        /// The maximum size of a message. Should be in bytes.
        /// </summary>
        [Output("messageMaxSize")]
        public Output<int?> MessageMaxSize { get; private set; } = null!;

        /// <summary>
        /// The name of the queue. Conflicts with name_prefix.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Creates a unique name beginning with the specified prefix. Conflicts with name.
        /// </summary>
        [Output("namePrefix")]
        public Output<string> NamePrefix { get; private set; } = null!;

        /// <summary>
        /// The ID of the Namespace associated to
        /// </summary>
        [Output("namespaceId")]
        public Output<string> NamespaceId { get; private set; } = null!;

        /// <summary>
        /// The NATS attributes of the queue
        /// </summary>
        [Output("nats")]
        public Output<Outputs.MnqQueueNats?> Nats { get; private set; } = null!;

        /// <summary>
        /// The SQS attributes of the queue
        /// </summary>
        [Output("sqs")]
        public Output<Outputs.MnqQueueSqs?> Sqs { get; private set; } = null!;


        /// <summary>
        /// Create a MnqQueue resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MnqQueue(string name, MnqQueueArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/mnqQueue:MnqQueue", name, args ?? new MnqQueueArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MnqQueue(string name, Input<string> id, MnqQueueState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/mnqQueue:MnqQueue", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-scaleway",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MnqQueue resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MnqQueue Get(string name, Input<string> id, MnqQueueState? state = null, CustomResourceOptions? options = null)
        {
            return new MnqQueue(name, id, state, options);
        }
    }

    public sealed class MnqQueueArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of seconds the queue retains a message.
        /// </summary>
        [Input("messageMaxAge")]
        public Input<int>? MessageMaxAge { get; set; }

        /// <summary>
        /// The maximum size of a message. Should be in bytes.
        /// </summary>
        [Input("messageMaxSize")]
        public Input<int>? MessageMaxSize { get; set; }

        /// <summary>
        /// The name of the queue. Conflicts with name_prefix.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Creates a unique name beginning with the specified prefix. Conflicts with name.
        /// </summary>
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        /// <summary>
        /// The ID of the Namespace associated to
        /// </summary>
        [Input("namespaceId", required: true)]
        public Input<string> NamespaceId { get; set; } = null!;

        /// <summary>
        /// The NATS attributes of the queue
        /// </summary>
        [Input("nats")]
        public Input<Inputs.MnqQueueNatsArgs>? Nats { get; set; }

        /// <summary>
        /// The SQS attributes of the queue
        /// </summary>
        [Input("sqs")]
        public Input<Inputs.MnqQueueSqsArgs>? Sqs { get; set; }

        public MnqQueueArgs()
        {
        }
        public static new MnqQueueArgs Empty => new MnqQueueArgs();
    }

    public sealed class MnqQueueState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of seconds the queue retains a message.
        /// </summary>
        [Input("messageMaxAge")]
        public Input<int>? MessageMaxAge { get; set; }

        /// <summary>
        /// The maximum size of a message. Should be in bytes.
        /// </summary>
        [Input("messageMaxSize")]
        public Input<int>? MessageMaxSize { get; set; }

        /// <summary>
        /// The name of the queue. Conflicts with name_prefix.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Creates a unique name beginning with the specified prefix. Conflicts with name.
        /// </summary>
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        /// <summary>
        /// The ID of the Namespace associated to
        /// </summary>
        [Input("namespaceId")]
        public Input<string>? NamespaceId { get; set; }

        /// <summary>
        /// The NATS attributes of the queue
        /// </summary>
        [Input("nats")]
        public Input<Inputs.MnqQueueNatsGetArgs>? Nats { get; set; }

        /// <summary>
        /// The SQS attributes of the queue
        /// </summary>
        [Input("sqs")]
        public Input<Inputs.MnqQueueSqsGetArgs>? Sqs { get; set; }

        public MnqQueueState()
        {
        }
        public static new MnqQueueState Empty => new MnqQueueState();
    }
}
