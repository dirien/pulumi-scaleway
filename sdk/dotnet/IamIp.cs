// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Scaleway
{
    [Obsolete(@"scaleway.index/iamip.IamIp has been deprecated in favor of scaleway.index/ipamip.IpamIp")]
    [ScalewayResourceType("scaleway:index/iamIp:IamIp")]
    public partial class IamIp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Request a specific IP in the requested source pool
        /// </summary>
        [Output("address")]
        public Output<string> Address { get; private set; } = null!;

        /// <summary>
        /// The date and time of the creation of the IP
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Request an IPv6 instead of an IPv4
        /// </summary>
        [Output("isIpv6")]
        public Output<bool?> IsIpv6 { get; private set; } = null!;

        /// <summary>
        /// The project_id you want to attach the resource to
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The region you want to attach the resource to
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The IP resource
        /// </summary>
        [Output("resources")]
        public Output<ImmutableArray<Outputs.IamIpResource>> Resources { get; private set; } = null!;

        /// <summary>
        /// The source in which to book the IP
        /// </summary>
        [Output("sources")]
        public Output<ImmutableArray<Outputs.IamIpSource>> Sources { get; private set; } = null!;

        /// <summary>
        /// The tags associated with the IP
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The date and time of the last update of the IP
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The zone of the resource
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a IamIp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IamIp(string name, IamIpArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/iamIp:IamIp", name, args ?? new IamIpArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IamIp(string name, Input<string> id, IamIpState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/iamIp:IamIp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-scaleway",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IamIp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IamIp Get(string name, Input<string> id, IamIpState? state = null, CustomResourceOptions? options = null)
        {
            return new IamIp(name, id, state, options);
        }
    }

    public sealed class IamIpArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Request a specific IP in the requested source pool
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// Request an IPv6 instead of an IPv4
        /// </summary>
        [Input("isIpv6")]
        public Input<bool>? IsIpv6 { get; set; }

        /// <summary>
        /// The project_id you want to attach the resource to
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The region you want to attach the resource to
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("sources", required: true)]
        private InputList<Inputs.IamIpSourceArgs>? _sources;

        /// <summary>
        /// The source in which to book the IP
        /// </summary>
        public InputList<Inputs.IamIpSourceArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.IamIpSourceArgs>());
            set => _sources = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags associated with the IP
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public IamIpArgs()
        {
        }
        public static new IamIpArgs Empty => new IamIpArgs();
    }

    public sealed class IamIpState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Request a specific IP in the requested source pool
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// The date and time of the creation of the IP
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Request an IPv6 instead of an IPv4
        /// </summary>
        [Input("isIpv6")]
        public Input<bool>? IsIpv6 { get; set; }

        /// <summary>
        /// The project_id you want to attach the resource to
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The region you want to attach the resource to
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("resources")]
        private InputList<Inputs.IamIpResourceGetArgs>? _resources;

        /// <summary>
        /// The IP resource
        /// </summary>
        public InputList<Inputs.IamIpResourceGetArgs> Resources
        {
            get => _resources ?? (_resources = new InputList<Inputs.IamIpResourceGetArgs>());
            set => _resources = value;
        }

        [Input("sources")]
        private InputList<Inputs.IamIpSourceGetArgs>? _sources;

        /// <summary>
        /// The source in which to book the IP
        /// </summary>
        public InputList<Inputs.IamIpSourceGetArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.IamIpSourceGetArgs>());
            set => _sources = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags associated with the IP
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The date and time of the last update of the IP
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The zone of the resource
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public IamIpState()
        {
        }
        public static new IamIpState Empty => new IamIpState();
    }
}
