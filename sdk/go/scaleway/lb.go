// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages Scaleway Load-Balancers.
// For more information, see [the documentation](https://developers.scaleway.com/en/products/lb/zoned_api).
//
// ## Examples
//
// ### Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-scaleway/sdk/v2/go/scaleway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			main, err := scaleway.NewLbIp(ctx, "main", &scaleway.LbIpArgs{
//				Zone: pulumi.String("fr-par-1"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = scaleway.NewLb(ctx, "base", &scaleway.LbArgs{
//				IpId: main.ID(),
//				Zone: main.Zone,
//				Type: pulumi.String("LB-S"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### IP for Public Gateway
// resource "scaleway_vpc_public_gateway_ip" "main" {
// }
//
// ### Scaleway Private Network
// resource scaleway_vpc_private_network main {
// }
//
// ### VPC Public Gateway Network
//
//	resource "scaleway_vpc_public_gateway" "main" {
//	    name  = "tf-test-public-gw"
//	    type  = "VPC-GW-S"
//	    ip_id = scaleway_vpc_public_gateway_ip.main.id
//	}
//
// ### VPC Public Gateway Network DHCP config
//
//	resource "scaleway_vpc_public_gateway_dhcp" "main" {
//	    subnet = "10.0.0.0/24"
//	}
//
// ### VPC Gateway Network
//
//	resource "scaleway_vpc_gateway_network" "main" {
//	    gateway_id         = scaleway_vpc_public_gateway.main.id
//	    private_network_id = scaleway_vpc_private_network.main.id
//	    dhcp_id            = scaleway_vpc_public_gateway_dhcp.main.id
//	    cleanup_dhcp       = true
//	    enable_masquerade  = true
//	}
//
// ### Scaleway Instance
//
//	resource "scaleway_instance_server" "main" {
//	    name        = "Scaleway Terraform Provider"
//	    type        = "DEV1-S"
//	    image       = "debian_bullseye"
//	    enable_ipv6 = false
//
//	    private_network {
//	        pn_id = scaleway_vpc_private_network.main.id
//	    }
//	}
//
// ### IP for LB IP
// resource scaleway_lb_ip main {
// }
//
// ### Scaleway Private Network
//
//	resource scaleway_vpc_private_network "main" {
//	    name = "private network with static config"
//	}
//
// ## Migration
//
// In order to migrate to other types you can check the migration up or down via our CLI `scw lb lb-types list`.
// this change will not recreate your Load Balancer.
//
// Please check our [documentation](https://developers.scaleway.com/en/products/lb/zoned_api/#post-355592) for further details
//
// ## IP ID
//
// Since v1.15.0, `ipId` is a required field. This means that now a separate `LbIp` is required.
// When importing, the IP needs to be imported as well as the LB.
// When upgrading to v1.15.0, you will need to create a new `LbIp` resource and import it.
//
// For instance, if you had the following:
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-scaleway/sdk/v2/go/scaleway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scaleway.NewLb(ctx, "main", &scaleway.LbArgs{
//				Type: pulumi.String("LB-S"),
//				Zone: pulumi.String("fr-par-1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// You will need to update it to:
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-scaleway/sdk/v2/go/scaleway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			mainLbIp, err := scaleway.NewLbIp(ctx, "mainLbIp", nil)
//			if err != nil {
//				return err
//			}
//			_, err = scaleway.NewLb(ctx, "mainLb", &scaleway.LbArgs{
//				IpId:      mainLbIp.ID(),
//				Zone:      pulumi.String("fr-par-1"),
//				Type:      pulumi.String("LB-S"),
//				ReleaseIp: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Load-Balancer can be imported using the `{zone}/{id}`, e.g. bash
//
// ```sh
//
//	$ pulumi import scaleway:index/lb:Lb main fr-par-1/11111111-1111-1111-1111-111111111111
//
// ```
//
//	Be aware that you will also need to import the `scaleway_lb_ip` resource.
type Lb struct {
	pulumi.CustomResourceState

	// The description of the load-balancer.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The load-balance public IP Address
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// The ID of the associated LB IP. See below.
	IpId pulumi.StringOutput `pulumi:"ipId"`
	// The name of the load-balancer.
	Name pulumi.StringOutput `pulumi:"name"`
	// The organization ID the load-balancer is associated with.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// List of private network to connect with your load balancer
	PrivateNetworks LbPrivateNetworkArrayOutput `pulumi:"privateNetworks"`
	// `projectId`) The ID of the project the load-balancer is associated with.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The region of the resource
	Region pulumi.StringOutput `pulumi:"region"`
	// The releaseIp allow release the ip address associated with the load-balancers.
	//
	// Deprecated: The resource ip will be destroyed by it's own resource. Please set this to `false`
	ReleaseIp pulumi.BoolPtrOutput `pulumi:"releaseIp"`
	// Enforces minimal SSL version (in SSL/TLS offloading context). Please check [possible values](https://developers.scaleway.com/en/products/lb/zoned_api/#ssl-compatibility-level-442f99).
	SslCompatibilityLevel pulumi.StringPtrOutput `pulumi:"sslCompatibilityLevel"`
	// The tags associated with the load-balancers.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The type of the load-balancer. Please check the migration section to upgrade the type
	Type pulumi.StringOutput `pulumi:"type"`
	// `zone`) The zone of the load-balancer.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewLb registers a new resource with the given unique name, arguments, and options.
func NewLb(ctx *pulumi.Context,
	name string, args *LbArgs, opts ...pulumi.ResourceOption) (*Lb, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpId == nil {
		return nil, errors.New("invalid value for required argument 'IpId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Lb
	err := ctx.RegisterResource("scaleway:index/lb:Lb", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLb gets an existing Lb resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLb(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LbState, opts ...pulumi.ResourceOption) (*Lb, error) {
	var resource Lb
	err := ctx.ReadResource("scaleway:index/lb:Lb", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Lb resources.
type lbState struct {
	// The description of the load-balancer.
	Description *string `pulumi:"description"`
	// The load-balance public IP Address
	IpAddress *string `pulumi:"ipAddress"`
	// The ID of the associated LB IP. See below.
	IpId *string `pulumi:"ipId"`
	// The name of the load-balancer.
	Name *string `pulumi:"name"`
	// The organization ID the load-balancer is associated with.
	OrganizationId *string `pulumi:"organizationId"`
	// List of private network to connect with your load balancer
	PrivateNetworks []LbPrivateNetwork `pulumi:"privateNetworks"`
	// `projectId`) The ID of the project the load-balancer is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The region of the resource
	Region *string `pulumi:"region"`
	// The releaseIp allow release the ip address associated with the load-balancers.
	//
	// Deprecated: The resource ip will be destroyed by it's own resource. Please set this to `false`
	ReleaseIp *bool `pulumi:"releaseIp"`
	// Enforces minimal SSL version (in SSL/TLS offloading context). Please check [possible values](https://developers.scaleway.com/en/products/lb/zoned_api/#ssl-compatibility-level-442f99).
	SslCompatibilityLevel *string `pulumi:"sslCompatibilityLevel"`
	// The tags associated with the load-balancers.
	Tags []string `pulumi:"tags"`
	// The type of the load-balancer. Please check the migration section to upgrade the type
	Type *string `pulumi:"type"`
	// `zone`) The zone of the load-balancer.
	Zone *string `pulumi:"zone"`
}

type LbState struct {
	// The description of the load-balancer.
	Description pulumi.StringPtrInput
	// The load-balance public IP Address
	IpAddress pulumi.StringPtrInput
	// The ID of the associated LB IP. See below.
	IpId pulumi.StringPtrInput
	// The name of the load-balancer.
	Name pulumi.StringPtrInput
	// The organization ID the load-balancer is associated with.
	OrganizationId pulumi.StringPtrInput
	// List of private network to connect with your load balancer
	PrivateNetworks LbPrivateNetworkArrayInput
	// `projectId`) The ID of the project the load-balancer is associated with.
	ProjectId pulumi.StringPtrInput
	// The region of the resource
	Region pulumi.StringPtrInput
	// The releaseIp allow release the ip address associated with the load-balancers.
	//
	// Deprecated: The resource ip will be destroyed by it's own resource. Please set this to `false`
	ReleaseIp pulumi.BoolPtrInput
	// Enforces minimal SSL version (in SSL/TLS offloading context). Please check [possible values](https://developers.scaleway.com/en/products/lb/zoned_api/#ssl-compatibility-level-442f99).
	SslCompatibilityLevel pulumi.StringPtrInput
	// The tags associated with the load-balancers.
	Tags pulumi.StringArrayInput
	// The type of the load-balancer. Please check the migration section to upgrade the type
	Type pulumi.StringPtrInput
	// `zone`) The zone of the load-balancer.
	Zone pulumi.StringPtrInput
}

func (LbState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbState)(nil)).Elem()
}

type lbArgs struct {
	// The description of the load-balancer.
	Description *string `pulumi:"description"`
	// The ID of the associated LB IP. See below.
	IpId string `pulumi:"ipId"`
	// The name of the load-balancer.
	Name *string `pulumi:"name"`
	// List of private network to connect with your load balancer
	PrivateNetworks []LbPrivateNetwork `pulumi:"privateNetworks"`
	// `projectId`) The ID of the project the load-balancer is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The releaseIp allow release the ip address associated with the load-balancers.
	//
	// Deprecated: The resource ip will be destroyed by it's own resource. Please set this to `false`
	ReleaseIp *bool `pulumi:"releaseIp"`
	// Enforces minimal SSL version (in SSL/TLS offloading context). Please check [possible values](https://developers.scaleway.com/en/products/lb/zoned_api/#ssl-compatibility-level-442f99).
	SslCompatibilityLevel *string `pulumi:"sslCompatibilityLevel"`
	// The tags associated with the load-balancers.
	Tags []string `pulumi:"tags"`
	// The type of the load-balancer. Please check the migration section to upgrade the type
	Type string `pulumi:"type"`
	// `zone`) The zone of the load-balancer.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a Lb resource.
type LbArgs struct {
	// The description of the load-balancer.
	Description pulumi.StringPtrInput
	// The ID of the associated LB IP. See below.
	IpId pulumi.StringInput
	// The name of the load-balancer.
	Name pulumi.StringPtrInput
	// List of private network to connect with your load balancer
	PrivateNetworks LbPrivateNetworkArrayInput
	// `projectId`) The ID of the project the load-balancer is associated with.
	ProjectId pulumi.StringPtrInput
	// The releaseIp allow release the ip address associated with the load-balancers.
	//
	// Deprecated: The resource ip will be destroyed by it's own resource. Please set this to `false`
	ReleaseIp pulumi.BoolPtrInput
	// Enforces minimal SSL version (in SSL/TLS offloading context). Please check [possible values](https://developers.scaleway.com/en/products/lb/zoned_api/#ssl-compatibility-level-442f99).
	SslCompatibilityLevel pulumi.StringPtrInput
	// The tags associated with the load-balancers.
	Tags pulumi.StringArrayInput
	// The type of the load-balancer. Please check the migration section to upgrade the type
	Type pulumi.StringInput
	// `zone`) The zone of the load-balancer.
	Zone pulumi.StringPtrInput
}

func (LbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbArgs)(nil)).Elem()
}

type LbInput interface {
	pulumi.Input

	ToLbOutput() LbOutput
	ToLbOutputWithContext(ctx context.Context) LbOutput
}

func (*Lb) ElementType() reflect.Type {
	return reflect.TypeOf((**Lb)(nil)).Elem()
}

func (i *Lb) ToLbOutput() LbOutput {
	return i.ToLbOutputWithContext(context.Background())
}

func (i *Lb) ToLbOutputWithContext(ctx context.Context) LbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbOutput)
}

// LbArrayInput is an input type that accepts LbArray and LbArrayOutput values.
// You can construct a concrete instance of `LbArrayInput` via:
//
//	LbArray{ LbArgs{...} }
type LbArrayInput interface {
	pulumi.Input

	ToLbArrayOutput() LbArrayOutput
	ToLbArrayOutputWithContext(context.Context) LbArrayOutput
}

type LbArray []LbInput

func (LbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Lb)(nil)).Elem()
}

func (i LbArray) ToLbArrayOutput() LbArrayOutput {
	return i.ToLbArrayOutputWithContext(context.Background())
}

func (i LbArray) ToLbArrayOutputWithContext(ctx context.Context) LbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbArrayOutput)
}

// LbMapInput is an input type that accepts LbMap and LbMapOutput values.
// You can construct a concrete instance of `LbMapInput` via:
//
//	LbMap{ "key": LbArgs{...} }
type LbMapInput interface {
	pulumi.Input

	ToLbMapOutput() LbMapOutput
	ToLbMapOutputWithContext(context.Context) LbMapOutput
}

type LbMap map[string]LbInput

func (LbMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Lb)(nil)).Elem()
}

func (i LbMap) ToLbMapOutput() LbMapOutput {
	return i.ToLbMapOutputWithContext(context.Background())
}

func (i LbMap) ToLbMapOutputWithContext(ctx context.Context) LbMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbMapOutput)
}

type LbOutput struct{ *pulumi.OutputState }

func (LbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Lb)(nil)).Elem()
}

func (o LbOutput) ToLbOutput() LbOutput {
	return o
}

func (o LbOutput) ToLbOutputWithContext(ctx context.Context) LbOutput {
	return o
}

// The description of the load-balancer.
func (o LbOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Lb) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The load-balance public IP Address
func (o LbOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Lb) pulumi.StringOutput { return v.IpAddress }).(pulumi.StringOutput)
}

// The ID of the associated LB IP. See below.
func (o LbOutput) IpId() pulumi.StringOutput {
	return o.ApplyT(func(v *Lb) pulumi.StringOutput { return v.IpId }).(pulumi.StringOutput)
}

// The name of the load-balancer.
func (o LbOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Lb) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The organization ID the load-balancer is associated with.
func (o LbOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Lb) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// List of private network to connect with your load balancer
func (o LbOutput) PrivateNetworks() LbPrivateNetworkArrayOutput {
	return o.ApplyT(func(v *Lb) LbPrivateNetworkArrayOutput { return v.PrivateNetworks }).(LbPrivateNetworkArrayOutput)
}

// `projectId`) The ID of the project the load-balancer is associated with.
func (o LbOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Lb) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The region of the resource
func (o LbOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Lb) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The releaseIp allow release the ip address associated with the load-balancers.
//
// Deprecated: The resource ip will be destroyed by it's own resource. Please set this to `false`
func (o LbOutput) ReleaseIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Lb) pulumi.BoolPtrOutput { return v.ReleaseIp }).(pulumi.BoolPtrOutput)
}

// Enforces minimal SSL version (in SSL/TLS offloading context). Please check [possible values](https://developers.scaleway.com/en/products/lb/zoned_api/#ssl-compatibility-level-442f99).
func (o LbOutput) SslCompatibilityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Lb) pulumi.StringPtrOutput { return v.SslCompatibilityLevel }).(pulumi.StringPtrOutput)
}

// The tags associated with the load-balancers.
func (o LbOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Lb) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// The type of the load-balancer. Please check the migration section to upgrade the type
func (o LbOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Lb) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// `zone`) The zone of the load-balancer.
func (o LbOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *Lb) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type LbArrayOutput struct{ *pulumi.OutputState }

func (LbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Lb)(nil)).Elem()
}

func (o LbArrayOutput) ToLbArrayOutput() LbArrayOutput {
	return o
}

func (o LbArrayOutput) ToLbArrayOutputWithContext(ctx context.Context) LbArrayOutput {
	return o
}

func (o LbArrayOutput) Index(i pulumi.IntInput) LbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Lb {
		return vs[0].([]*Lb)[vs[1].(int)]
	}).(LbOutput)
}

type LbMapOutput struct{ *pulumi.OutputState }

func (LbMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Lb)(nil)).Elem()
}

func (o LbMapOutput) ToLbMapOutput() LbMapOutput {
	return o
}

func (o LbMapOutput) ToLbMapOutputWithContext(ctx context.Context) LbMapOutput {
	return o
}

func (o LbMapOutput) MapIndex(k pulumi.StringInput) LbOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Lb {
		return vs[0].(map[string]*Lb)[vs[1].(string)]
	}).(LbOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LbInput)(nil)).Elem(), &Lb{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbArrayInput)(nil)).Elem(), LbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbMapInput)(nil)).Elem(), LbMap{})
	pulumi.RegisterOutputType(LbOutput{})
	pulumi.RegisterOutputType(LbArrayOutput{})
	pulumi.RegisterOutputType(LbMapOutput{})
}
