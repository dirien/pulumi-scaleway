// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-scaleway/sdk/v2/go/scaleway/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about a transactional email offer subscription.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-scaleway/sdk/v2/go/scaleway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scaleway.GetTemOfferSubscription(ctx, &scaleway.GetTemOfferSubscriptionArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTemOfferSubscription(ctx *pulumi.Context, args *GetTemOfferSubscriptionArgs, opts ...pulumi.InvokeOption) (*GetTemOfferSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTemOfferSubscriptionResult
	err := ctx.Invoke("scaleway:index/getTemOfferSubscription:getTemOfferSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTemOfferSubscription.
type GetTemOfferSubscriptionArgs struct {
	// `projectId`) The ID of the project the offer subscription is associated with.
	ProjectId *string `pulumi:"projectId"`
	// `region`) The region where the offer subscription exists.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getTemOfferSubscription.
type GetTemOfferSubscriptionResult struct {
	// The date and time when cancellation becomes available for the subscription.
	CancellationAvailableAt string `pulumi:"cancellationAvailableAt"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The number of emails included in the offer subscription per month.
	IncludedMonthlyEmails int `pulumi:"includedMonthlyEmails"`
	// The maximum number of custom blocklists that can be associated with the offer subscription per domain.
	MaxCustomBlocklistsPerDomain int `pulumi:"maxCustomBlocklistsPerDomain"`
	// The maximum number of dedicated IPs that can be associated with the offer subscription.
	MaxDedicatedIps int `pulumi:"maxDedicatedIps"`
	// The maximum number of domains that can be associated with the offer subscription.
	MaxDomains int `pulumi:"maxDomains"`
	// The maximum number of webhooks that can be associated with the offer subscription per domain.
	MaxWebhooksPerDomain int `pulumi:"maxWebhooksPerDomain"`
	// The name of the offer associated with the subscription (e.g., `scale`).
	OfferName string `pulumi:"offerName"`
	ProjectId string `pulumi:"projectId"`
	Region    string `pulumi:"region"`
	// The Service Level Agreement (SLA) percentage of the offer subscription.
	Sla float64 `pulumi:"sla"`
	// The date and time of the subscription.
	SubscribedAt string `pulumi:"subscribedAt"`
}

func GetTemOfferSubscriptionOutput(ctx *pulumi.Context, args GetTemOfferSubscriptionOutputArgs, opts ...pulumi.InvokeOption) GetTemOfferSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTemOfferSubscriptionResultOutput, error) {
			args := v.(GetTemOfferSubscriptionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:index/getTemOfferSubscription:getTemOfferSubscription", args, GetTemOfferSubscriptionResultOutput{}, options).(GetTemOfferSubscriptionResultOutput), nil
		}).(GetTemOfferSubscriptionResultOutput)
}

// A collection of arguments for invoking getTemOfferSubscription.
type GetTemOfferSubscriptionOutputArgs struct {
	// `projectId`) The ID of the project the offer subscription is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// `region`) The region where the offer subscription exists.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetTemOfferSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemOfferSubscriptionArgs)(nil)).Elem()
}

// A collection of values returned by getTemOfferSubscription.
type GetTemOfferSubscriptionResultOutput struct{ *pulumi.OutputState }

func (GetTemOfferSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemOfferSubscriptionResult)(nil)).Elem()
}

func (o GetTemOfferSubscriptionResultOutput) ToGetTemOfferSubscriptionResultOutput() GetTemOfferSubscriptionResultOutput {
	return o
}

func (o GetTemOfferSubscriptionResultOutput) ToGetTemOfferSubscriptionResultOutputWithContext(ctx context.Context) GetTemOfferSubscriptionResultOutput {
	return o
}

// The date and time when cancellation becomes available for the subscription.
func (o GetTemOfferSubscriptionResultOutput) CancellationAvailableAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemOfferSubscriptionResult) string { return v.CancellationAvailableAt }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTemOfferSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemOfferSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The number of emails included in the offer subscription per month.
func (o GetTemOfferSubscriptionResultOutput) IncludedMonthlyEmails() pulumi.IntOutput {
	return o.ApplyT(func(v GetTemOfferSubscriptionResult) int { return v.IncludedMonthlyEmails }).(pulumi.IntOutput)
}

// The maximum number of custom blocklists that can be associated with the offer subscription per domain.
func (o GetTemOfferSubscriptionResultOutput) MaxCustomBlocklistsPerDomain() pulumi.IntOutput {
	return o.ApplyT(func(v GetTemOfferSubscriptionResult) int { return v.MaxCustomBlocklistsPerDomain }).(pulumi.IntOutput)
}

// The maximum number of dedicated IPs that can be associated with the offer subscription.
func (o GetTemOfferSubscriptionResultOutput) MaxDedicatedIps() pulumi.IntOutput {
	return o.ApplyT(func(v GetTemOfferSubscriptionResult) int { return v.MaxDedicatedIps }).(pulumi.IntOutput)
}

// The maximum number of domains that can be associated with the offer subscription.
func (o GetTemOfferSubscriptionResultOutput) MaxDomains() pulumi.IntOutput {
	return o.ApplyT(func(v GetTemOfferSubscriptionResult) int { return v.MaxDomains }).(pulumi.IntOutput)
}

// The maximum number of webhooks that can be associated with the offer subscription per domain.
func (o GetTemOfferSubscriptionResultOutput) MaxWebhooksPerDomain() pulumi.IntOutput {
	return o.ApplyT(func(v GetTemOfferSubscriptionResult) int { return v.MaxWebhooksPerDomain }).(pulumi.IntOutput)
}

// The name of the offer associated with the subscription (e.g., `scale`).
func (o GetTemOfferSubscriptionResultOutput) OfferName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemOfferSubscriptionResult) string { return v.OfferName }).(pulumi.StringOutput)
}

func (o GetTemOfferSubscriptionResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemOfferSubscriptionResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetTemOfferSubscriptionResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemOfferSubscriptionResult) string { return v.Region }).(pulumi.StringOutput)
}

// The Service Level Agreement (SLA) percentage of the offer subscription.
func (o GetTemOfferSubscriptionResultOutput) Sla() pulumi.Float64Output {
	return o.ApplyT(func(v GetTemOfferSubscriptionResult) float64 { return v.Sla }).(pulumi.Float64Output)
}

// The date and time of the subscription.
func (o GetTemOfferSubscriptionResultOutput) SubscribedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemOfferSubscriptionResult) string { return v.SubscribedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTemOfferSubscriptionResultOutput{})
}
