// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"errors"
	"github.com/dirien/pulumi-scaleway/sdk/v2/go/scaleway/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages Scaleway Edge Services Backend Stages.
//
// ## Example Usage
//
// ### With object backend
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-scaleway/sdk/v2/go/scaleway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			mainObjectBucket, err := scaleway.NewObjectBucket(ctx, "mainObjectBucket", &scaleway.ObjectBucketArgs{
//				Tags: pulumi.StringMap{
//					"foo": pulumi.String("bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			mainEdgeServicesPipeline, err := scaleway.NewEdgeServicesPipeline(ctx, "mainEdgeServicesPipeline", nil)
//			if err != nil {
//				return err
//			}
//			_, err = scaleway.NewEdgeServicesBackendStage(ctx, "mainEdgeServicesBackendStage", &scaleway.EdgeServicesBackendStageArgs{
//				PipelineId: mainEdgeServicesPipeline.ID(),
//				S3BackendConfig: &scaleway.EdgeServicesBackendStageS3BackendConfigArgs{
//					BucketName:   mainObjectBucket.Name,
//					BucketRegion: pulumi.String("fr-par"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### With LB backend
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-scaleway/sdk/v2/go/scaleway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			mainLb, err := scaleway.NewLb(ctx, "mainLb", &scaleway.LbArgs{
//				IpIds: pulumi.StringArray{
//					scaleway_lb_ip.Main.Id,
//				},
//				Zone: pulumi.String("fr-par-1"),
//				Type: pulumi.String("LB-S"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = scaleway.NewLbFrontend(ctx, "mainLbFrontend", &scaleway.LbFrontendArgs{
//				LbId:        mainLb.ID(),
//				BackendId:   pulumi.Any(scaleway_lb_backend.Main.Id),
//				InboundPort: pulumi.Int(443),
//				CertificateIds: pulumi.StringArray{
//					scaleway_lb_certificate.Cert01.Id,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			mainEdgeServicesPipeline, err := scaleway.NewEdgeServicesPipeline(ctx, "mainEdgeServicesPipeline", nil)
//			if err != nil {
//				return err
//			}
//			_, err = scaleway.NewEdgeServicesBackendStage(ctx, "mainEdgeServicesBackendStage", &scaleway.EdgeServicesBackendStageArgs{
//				PipelineId: mainEdgeServicesPipeline.ID(),
//				LbBackendConfigs: scaleway.EdgeServicesBackendStageLbBackendConfigArray{
//					&scaleway.EdgeServicesBackendStageLbBackendConfigArgs{
//						LbConfig: &scaleway.EdgeServicesBackendStageLbBackendConfigLbConfigArgs{
//							Id:         mainLb.ID(),
//							FrontendId: pulumi.Any(scaleway_lb_frontend.Id),
//							IsSsl:      pulumi.Bool(true),
//							Zone:       pulumi.String("fr-par-1"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Backend stages can be imported using the `{id}`, e.g.
//
// bash
//
// ```sh
// $ pulumi import scaleway:index/edgeServicesBackendStage:EdgeServicesBackendStage basic 11111111-1111-1111-1111-111111111111
// ```
type EdgeServicesBackendStage struct {
	pulumi.CustomResourceState

	// The date and time of the creation of the backend stage.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The Scaleway Load Balancer linked to the backend stage.
	LbBackendConfigs EdgeServicesBackendStageLbBackendConfigArrayOutput `pulumi:"lbBackendConfigs"`
	// The ID of the pipeline.
	PipelineId pulumi.StringOutput `pulumi:"pipelineId"`
	// `projectId`) The ID of the project the backend stage is associated with.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
	S3BackendConfig EdgeServicesBackendStageS3BackendConfigPtrOutput `pulumi:"s3BackendConfig"`
	// The date and time of the last update of the backend stage.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewEdgeServicesBackendStage registers a new resource with the given unique name, arguments, and options.
func NewEdgeServicesBackendStage(ctx *pulumi.Context,
	name string, args *EdgeServicesBackendStageArgs, opts ...pulumi.ResourceOption) (*EdgeServicesBackendStage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PipelineId == nil {
		return nil, errors.New("invalid value for required argument 'PipelineId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EdgeServicesBackendStage
	err := ctx.RegisterResource("scaleway:index/edgeServicesBackendStage:EdgeServicesBackendStage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgeServicesBackendStage gets an existing EdgeServicesBackendStage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgeServicesBackendStage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgeServicesBackendStageState, opts ...pulumi.ResourceOption) (*EdgeServicesBackendStage, error) {
	var resource EdgeServicesBackendStage
	err := ctx.ReadResource("scaleway:index/edgeServicesBackendStage:EdgeServicesBackendStage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgeServicesBackendStage resources.
type edgeServicesBackendStageState struct {
	// The date and time of the creation of the backend stage.
	CreatedAt *string `pulumi:"createdAt"`
	// The Scaleway Load Balancer linked to the backend stage.
	LbBackendConfigs []EdgeServicesBackendStageLbBackendConfig `pulumi:"lbBackendConfigs"`
	// The ID of the pipeline.
	PipelineId *string `pulumi:"pipelineId"`
	// `projectId`) The ID of the project the backend stage is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
	S3BackendConfig *EdgeServicesBackendStageS3BackendConfig `pulumi:"s3BackendConfig"`
	// The date and time of the last update of the backend stage.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type EdgeServicesBackendStageState struct {
	// The date and time of the creation of the backend stage.
	CreatedAt pulumi.StringPtrInput
	// The Scaleway Load Balancer linked to the backend stage.
	LbBackendConfigs EdgeServicesBackendStageLbBackendConfigArrayInput
	// The ID of the pipeline.
	PipelineId pulumi.StringPtrInput
	// `projectId`) The ID of the project the backend stage is associated with.
	ProjectId pulumi.StringPtrInput
	// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
	S3BackendConfig EdgeServicesBackendStageS3BackendConfigPtrInput
	// The date and time of the last update of the backend stage.
	UpdatedAt pulumi.StringPtrInput
}

func (EdgeServicesBackendStageState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeServicesBackendStageState)(nil)).Elem()
}

type edgeServicesBackendStageArgs struct {
	// The Scaleway Load Balancer linked to the backend stage.
	LbBackendConfigs []EdgeServicesBackendStageLbBackendConfig `pulumi:"lbBackendConfigs"`
	// The ID of the pipeline.
	PipelineId string `pulumi:"pipelineId"`
	// `projectId`) The ID of the project the backend stage is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
	S3BackendConfig *EdgeServicesBackendStageS3BackendConfig `pulumi:"s3BackendConfig"`
}

// The set of arguments for constructing a EdgeServicesBackendStage resource.
type EdgeServicesBackendStageArgs struct {
	// The Scaleway Load Balancer linked to the backend stage.
	LbBackendConfigs EdgeServicesBackendStageLbBackendConfigArrayInput
	// The ID of the pipeline.
	PipelineId pulumi.StringInput
	// `projectId`) The ID of the project the backend stage is associated with.
	ProjectId pulumi.StringPtrInput
	// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
	S3BackendConfig EdgeServicesBackendStageS3BackendConfigPtrInput
}

func (EdgeServicesBackendStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeServicesBackendStageArgs)(nil)).Elem()
}

type EdgeServicesBackendStageInput interface {
	pulumi.Input

	ToEdgeServicesBackendStageOutput() EdgeServicesBackendStageOutput
	ToEdgeServicesBackendStageOutputWithContext(ctx context.Context) EdgeServicesBackendStageOutput
}

func (*EdgeServicesBackendStage) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeServicesBackendStage)(nil)).Elem()
}

func (i *EdgeServicesBackendStage) ToEdgeServicesBackendStageOutput() EdgeServicesBackendStageOutput {
	return i.ToEdgeServicesBackendStageOutputWithContext(context.Background())
}

func (i *EdgeServicesBackendStage) ToEdgeServicesBackendStageOutputWithContext(ctx context.Context) EdgeServicesBackendStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeServicesBackendStageOutput)
}

// EdgeServicesBackendStageArrayInput is an input type that accepts EdgeServicesBackendStageArray and EdgeServicesBackendStageArrayOutput values.
// You can construct a concrete instance of `EdgeServicesBackendStageArrayInput` via:
//
//	EdgeServicesBackendStageArray{ EdgeServicesBackendStageArgs{...} }
type EdgeServicesBackendStageArrayInput interface {
	pulumi.Input

	ToEdgeServicesBackendStageArrayOutput() EdgeServicesBackendStageArrayOutput
	ToEdgeServicesBackendStageArrayOutputWithContext(context.Context) EdgeServicesBackendStageArrayOutput
}

type EdgeServicesBackendStageArray []EdgeServicesBackendStageInput

func (EdgeServicesBackendStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeServicesBackendStage)(nil)).Elem()
}

func (i EdgeServicesBackendStageArray) ToEdgeServicesBackendStageArrayOutput() EdgeServicesBackendStageArrayOutput {
	return i.ToEdgeServicesBackendStageArrayOutputWithContext(context.Background())
}

func (i EdgeServicesBackendStageArray) ToEdgeServicesBackendStageArrayOutputWithContext(ctx context.Context) EdgeServicesBackendStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeServicesBackendStageArrayOutput)
}

// EdgeServicesBackendStageMapInput is an input type that accepts EdgeServicesBackendStageMap and EdgeServicesBackendStageMapOutput values.
// You can construct a concrete instance of `EdgeServicesBackendStageMapInput` via:
//
//	EdgeServicesBackendStageMap{ "key": EdgeServicesBackendStageArgs{...} }
type EdgeServicesBackendStageMapInput interface {
	pulumi.Input

	ToEdgeServicesBackendStageMapOutput() EdgeServicesBackendStageMapOutput
	ToEdgeServicesBackendStageMapOutputWithContext(context.Context) EdgeServicesBackendStageMapOutput
}

type EdgeServicesBackendStageMap map[string]EdgeServicesBackendStageInput

func (EdgeServicesBackendStageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeServicesBackendStage)(nil)).Elem()
}

func (i EdgeServicesBackendStageMap) ToEdgeServicesBackendStageMapOutput() EdgeServicesBackendStageMapOutput {
	return i.ToEdgeServicesBackendStageMapOutputWithContext(context.Background())
}

func (i EdgeServicesBackendStageMap) ToEdgeServicesBackendStageMapOutputWithContext(ctx context.Context) EdgeServicesBackendStageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeServicesBackendStageMapOutput)
}

type EdgeServicesBackendStageOutput struct{ *pulumi.OutputState }

func (EdgeServicesBackendStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeServicesBackendStage)(nil)).Elem()
}

func (o EdgeServicesBackendStageOutput) ToEdgeServicesBackendStageOutput() EdgeServicesBackendStageOutput {
	return o
}

func (o EdgeServicesBackendStageOutput) ToEdgeServicesBackendStageOutputWithContext(ctx context.Context) EdgeServicesBackendStageOutput {
	return o
}

// The date and time of the creation of the backend stage.
func (o EdgeServicesBackendStageOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesBackendStage) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The Scaleway Load Balancer linked to the backend stage.
func (o EdgeServicesBackendStageOutput) LbBackendConfigs() EdgeServicesBackendStageLbBackendConfigArrayOutput {
	return o.ApplyT(func(v *EdgeServicesBackendStage) EdgeServicesBackendStageLbBackendConfigArrayOutput {
		return v.LbBackendConfigs
	}).(EdgeServicesBackendStageLbBackendConfigArrayOutput)
}

// The ID of the pipeline.
func (o EdgeServicesBackendStageOutput) PipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesBackendStage) pulumi.StringOutput { return v.PipelineId }).(pulumi.StringOutput)
}

// `projectId`) The ID of the project the backend stage is associated with.
func (o EdgeServicesBackendStageOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesBackendStage) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
func (o EdgeServicesBackendStageOutput) S3BackendConfig() EdgeServicesBackendStageS3BackendConfigPtrOutput {
	return o.ApplyT(func(v *EdgeServicesBackendStage) EdgeServicesBackendStageS3BackendConfigPtrOutput {
		return v.S3BackendConfig
	}).(EdgeServicesBackendStageS3BackendConfigPtrOutput)
}

// The date and time of the last update of the backend stage.
func (o EdgeServicesBackendStageOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesBackendStage) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type EdgeServicesBackendStageArrayOutput struct{ *pulumi.OutputState }

func (EdgeServicesBackendStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeServicesBackendStage)(nil)).Elem()
}

func (o EdgeServicesBackendStageArrayOutput) ToEdgeServicesBackendStageArrayOutput() EdgeServicesBackendStageArrayOutput {
	return o
}

func (o EdgeServicesBackendStageArrayOutput) ToEdgeServicesBackendStageArrayOutputWithContext(ctx context.Context) EdgeServicesBackendStageArrayOutput {
	return o
}

func (o EdgeServicesBackendStageArrayOutput) Index(i pulumi.IntInput) EdgeServicesBackendStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EdgeServicesBackendStage {
		return vs[0].([]*EdgeServicesBackendStage)[vs[1].(int)]
	}).(EdgeServicesBackendStageOutput)
}

type EdgeServicesBackendStageMapOutput struct{ *pulumi.OutputState }

func (EdgeServicesBackendStageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeServicesBackendStage)(nil)).Elem()
}

func (o EdgeServicesBackendStageMapOutput) ToEdgeServicesBackendStageMapOutput() EdgeServicesBackendStageMapOutput {
	return o
}

func (o EdgeServicesBackendStageMapOutput) ToEdgeServicesBackendStageMapOutputWithContext(ctx context.Context) EdgeServicesBackendStageMapOutput {
	return o
}

func (o EdgeServicesBackendStageMapOutput) MapIndex(k pulumi.StringInput) EdgeServicesBackendStageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EdgeServicesBackendStage {
		return vs[0].(map[string]*EdgeServicesBackendStage)[vs[1].(string)]
	}).(EdgeServicesBackendStageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeServicesBackendStageInput)(nil)).Elem(), &EdgeServicesBackendStage{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeServicesBackendStageArrayInput)(nil)).Elem(), EdgeServicesBackendStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeServicesBackendStageMapInput)(nil)).Elem(), EdgeServicesBackendStageMap{})
	pulumi.RegisterOutputType(EdgeServicesBackendStageOutput{})
	pulumi.RegisterOutputType(EdgeServicesBackendStageArrayOutput{})
	pulumi.RegisterOutputType(EdgeServicesBackendStageMapOutput{})
}
